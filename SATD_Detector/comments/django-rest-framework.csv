file path,line #,comment,satd
django-rest-framework/runtests.py,1,! /usr/bin/env python3,
django-rest-framework/runtests.py,47,`True` if it looks like a test function is included in the string.,
django-rest-framework/runtests.py,52,`True` if first character is uppercase - assume it's a class name.,
django-rest-framework/runtests.py,97,`runtests.py [flags]`,
django-rest-framework/runtests.py,100,`runtests.py TestCase.test_function [flags]`,
django-rest-framework/runtests.py,104,`runtests.py TestCase [flags]`,
django-rest-framework/runtests.py,105,`runtests.py test_function [flags]`,
django-rest-framework/setup.py,1,!/usr/bin/env python3,
django-rest-framework/setup.py,13,This check and everything above must remain compatible with Python 2.7.,
django-rest-framework/setup.py,82,SEE NOTE BELOW (*),
django-rest-framework/setup.py,112,"(*) Please direct queries to the discussion group, rather than to me directly",
django-rest-framework/setup.py,113,Doing so helps ensure your question is helpful to other users.,
django-rest-framework/setup.py,114,Queries directly to my email are likely to receive a canned response.,
django-rest-framework/setup.py,115,,
django-rest-framework/setup.py,116,Many thanks for your understanding.,
django-rest-framework/rest_framework/compat.py,11,noqa,
django-rest-framework/rest_framework/compat.py,16,Will be removed in Django 2.0,
django-rest-framework/rest_framework/compat.py,17,noqa,
django-rest-framework/rest_framework/compat.py,23,noqa,
django-rest-framework/rest_framework/compat.py,34,Django 2.0,
django-rest-framework/rest_framework/compat.py,37,Django < 2.0,
django-rest-framework/rest_framework/compat.py,47,Django 2.0,
django-rest-framework/rest_framework/compat.py,50,Django < 2.0,
django-rest-framework/rest_framework/compat.py,56,Django 2.0,
django-rest-framework/rest_framework/compat.py,60,Django < 2.0,
django-rest-framework/rest_framework/compat.py,66,Django 2.0,
django-rest-framework/rest_framework/compat.py,71,Django < 2.0,
django-rest-framework/rest_framework/compat.py,76,Coerce HTTP header value to unicode.,
django-rest-framework/rest_framework/compat.py,84,distinct analogue for Oracle users,
django-rest-framework/rest_framework/compat.py,89,django.contrib.postgres requires psycopg2,
django-rest-framework/rest_framework/compat.py,96,coreapi is required for CoreAPI schema generation,
django-rest-framework/rest_framework/compat.py,102,uritemplate is required for OpenAPI and CoreAPI schema generation,
django-rest-framework/rest_framework/compat.py,109,coreschema is optional,
django-rest-framework/rest_framework/compat.py,116,pyyaml is optional,
django-rest-framework/rest_framework/compat.py,123,requests is optional,
django-rest-framework/rest_framework/compat.py,130,PATCH method is not implemented by Django,
django-rest-framework/rest_framework/compat.py,135,Markdown is optional (version 3.0+ required),
django-rest-framework/rest_framework/compat.py,187,starting from this blogpost and modified to support current markdown extensions API,
django-rest-framework/rest_framework/compat.py,188,https://zerokspot.com/weblog/2008/06/18/syntax-highlighting-in-markdown-with-pygments/,
django-rest-framework/rest_framework/compat.py,220,Django 1.x url routing syntax. Remove when dropping Django 1.11 support.,
django-rest-framework/rest_framework/compat.py,222,noqa,
django-rest-framework/rest_framework/compat.py,224,noqa,
django-rest-framework/rest_framework/compat.py,230,`separators` argument to `json.dumps()` differs between 2.x and 3.x,
django-rest-framework/rest_framework/compat.py,231,See: https://bugs.python.org/issue22767,
django-rest-framework/rest_framework/compat.py,237,Version Constants.,
django-rest-framework/rest_framework/request.py,53,For viewsets we also set the `.action` attribute.,
django-rest-framework/rest_framework/request.py,286,"if a form media type, copy data & files refs to the underlying",
django-rest-framework/rest_framework/request.py,287,http request so that closable objects are handled appropriately.,
django-rest-framework/rest_framework/request.py,333,"If request.POST has been accessed in middleware, and a method='POST'",
django-rest-framework/rest_framework/request.py,334,"request was made with 'multipart/form-data', then the request stream",
django-rest-framework/rest_framework/request.py,335,will already have been exhausted.,
django-rest-framework/rest_framework/request.py,356,"If we get an exception during parsing, fill in empty data and",
django-rest-framework/rest_framework/request.py,357,re-raise.  Ensures we don't simply repeat the error when,
django-rest-framework/rest_framework/request.py,358,"attempting to render the browsable renderer response, or when",
django-rest-framework/rest_framework/request.py,359,logging the request or similar.,
django-rest-framework/rest_framework/request.py,365,"Parser classes may return the raw data, or a",
django-rest-framework/rest_framework/request.py,366,DataAndFiles object.  Unpack the result as required.,
django-rest-framework/rest_framework/request.py,429,Ensure that request.POST uses our request parsing.,
django-rest-framework/rest_framework/request.py,438,Leave this one alone for backwards compat with Django's request.FILES,
django-rest-framework/rest_framework/request.py,439,"Different from the other two cases, which are not valid property",
django-rest-framework/rest_framework/request.py,440,names on the WSGIRequest class.,
django-rest-framework/rest_framework/request.py,453,Hack to allow our exception handler to force choice of,
django-rest-framework/rest_framework/request.py,454,plaintext or html error responses.,
django-rest-framework/rest_framework/apps.py,9,Add System checks,
django-rest-framework/rest_framework/apps.py,10,NOQA,
django-rest-framework/rest_framework/filters.py,40,The URL query parameter used for the search.,
django-rest-framework/rest_framework/filters.py,66,strip null characters,
django-rest-framework/rest_framework/filters.py,86,Annotated fields do not need to be distinct,
django-rest-framework/rest_framework/filters.py,93,"This field is a relation, update opts to follow the relation",
django-rest-framework/rest_framework/filters.py,97,This field is a m2m relation so we know we need to call distinct,
django-rest-framework/rest_framework/filters.py,124,Filtering against a many-to-many field requires us to,
django-rest-framework/rest_framework/filters.py,125,call queryset.distinct() in order to avoid duplicate items,
django-rest-framework/rest_framework/filters.py,126,in the resulting queryset.,
django-rest-framework/rest_framework/filters.py,127,"We try to avoid this if possible, for performance reasons.",
django-rest-framework/rest_framework/filters.py,174,The URL query parameter used for the ordering.,
django-rest-framework/rest_framework/filters.py,196,"No ordering was included, or all the ordering fields were invalid",
django-rest-framework/rest_framework/filters.py,206,"If `ordering_fields` is not specified, then we determine a default",
django-rest-framework/rest_framework/filters.py,207,"based on the serializer class, if one exists on the view.",
django-rest-framework/rest_framework/filters.py,212,Raised by the default implementation if,
django-rest-framework/rest_framework/filters.py,213,no serializer_class was found,
django-rest-framework/rest_framework/filters.py,236,Default to allowing filtering on serializer fields,
django-rest-framework/rest_framework/filters.py,240,View explicitly allows filtering on any model field,
django-rest-framework/rest_framework/relations.py,25,Python 3 compat,
django-rest-framework/rest_framework/relations.py,59,"This ensures that we only called `__str__` lazily,",
django-rest-framework/rest_framework/relations.py,60,as in some cases calling __str__ on a model instances *might*,
django-rest-framework/rest_framework/relations.py,61,involve a database lookup.,
django-rest-framework/rest_framework/relations.py,80,"We assume that 'validators' are intended for the child serializer,",
django-rest-framework/rest_framework/relations.py,81,rather than the parent serializer.,
django-rest-framework/rest_framework/relations.py,120,We override this method in order to automagically create,
django-rest-framework/rest_framework/relations.py,121,`ManyRelatedField` classes instead when `many=True` is set.,
django-rest-framework/rest_framework/relations.py,150,We force empty strings to None values for relational fields.,
django-rest-framework/rest_framework/relations.py,158,Ensure queryset is re-evaluated whenever used.,
django-rest-framework/rest_framework/relations.py,159,Note that actually a `Manager` class may also be used as the,
django-rest-framework/rest_framework/relations.py,160,"queryset argument. This occurs on ModelSerializer fields,",
django-rest-framework/rest_framework/relations.py,161,as it allows us to generate a more expressive 'repr' output,
django-rest-framework/rest_framework/relations.py,162,for the field.,
django-rest-framework/rest_framework/relations.py,163,Eg: 'MyRelationship(queryset=ExampleModel.objects.all())',
django-rest-framework/rest_framework/relations.py,172,"Optimized case, return a mock object only containing the pk attribute.",
django-rest-framework/rest_framework/relations.py,177,Handle edge case where the relationship `source` argument,
django-rest-framework/rest_framework/relations.py,178,points to a `get_relationship()` method on the model,
django-rest-framework/rest_framework/relations.py,184,"Standard case, return the object instance.",
django-rest-framework/rest_framework/relations.py,190,Ensure that field.choices returns something sensible,
django-rest-framework/rest_framework/relations.py,191,even when accessed with a read-only field.,
django-rest-framework/rest_framework/relations.py,288,We include this simply for dependency injection in tests.,
django-rest-framework/rest_framework/relations.py,289,We can't add it as a class attributes or it would expect an,
django-rest-framework/rest_framework/relations.py,290,implicit `self` argument to be passed.,
django-rest-framework/rest_framework/relations.py,325,Unsaved objects will not yet have a valid URL.,
django-rest-framework/rest_framework/relations.py,341,If needed convert absolute URLs to relative path,
django-rest-framework/rest_framework/relations.py,379,By default use whatever format is given for the current context,
django-rest-framework/rest_framework/relations.py,380,unless the target is a different type to the source.,
django-rest-framework/rest_framework/relations.py,381,,
django-rest-framework/rest_framework/relations.py,382,Eg. Consider a HyperlinkedIdentityField pointing from a json,
django-rest-framework/rest_framework/relations.py,383,representation to an html property of that representation...,
django-rest-framework/rest_framework/relations.py,384,,
django-rest-framework/rest_framework/relations.py,385,'/snippets/1/' should link to '/snippets/1/highlight/',
django-rest-framework/rest_framework/relations.py,386,...but...,
django-rest-framework/rest_framework/relations.py,387,'/snippets/1/.json' should link to '/snippets/1/highlight/.html',
django-rest-framework/rest_framework/relations.py,391,"Return the hyperlink, or error if incorrectly configured.",
django-rest-framework/rest_framework/relations.py,431,We have the complete object instance already. We don't need,
django-rest-framework/rest_framework/relations.py,432,to run the 'only get the pk for this relationship' code.,
django-rest-framework/rest_framework/relations.py,502,We override the default field access in order to support,
django-rest-framework/rest_framework/relations.py,503,lists in HTML forms.,
django-rest-framework/rest_framework/relations.py,505,Don't return [] if the update is partial,
django-rest-framework/rest_framework/relations.py,525,Can't have any relationships if not created,
django-rest-framework/rest_framework/test.py,1,Note that we import as `DjangoRequestFactory` and `DjangoClient` in order,
django-rest-framework/rest_framework/test.py,2,to make it harder for the user to import the wrong thing without realizing.,
django-rest-framework/rest_framework/test.py,58,"Set request content, if any exists.",
django-rest-framework/rest_framework/test.py,67,Set request headers.,
django-rest-framework/rest_framework/test.py,91,Make the outgoing request via WSGI.,
django-rest-framework/rest_framework/test.py,95,Build the underlying urllib3.HTTPResponse,
django-rest-framework/rest_framework/test.py,99,Build the requests.Response,
django-rest-framework/rest_framework/test.py,162,"Content type specified explicitly, treat data as a raw bytestring",
django-rest-framework/rest_framework/test.py,177,Use format and render the data into a bytestring,
django-rest-framework/rest_framework/test.py,181,Determine the content-type header from the renderer,
django-rest-framework/rest_framework/test.py,186,Coerce text to bytes if required.,
django-rest-framework/rest_framework/test.py,197,Fix to support old behavior where you have the arguments in the,
django-rest-framework/rest_framework/test.py,198,url. See #1461.,
django-rest-framework/rest_framework/test.py,227,"Include the CONTENT_TYPE, regardless of whether or not data is empty.",
django-rest-framework/rest_framework/test.py,252,This is the simplest place we can hook into to patch the,
django-rest-framework/rest_framework/test.py,253,request object.,
django-rest-framework/rest_framework/test.py,278,Also clear any possible session info if required,
django-rest-framework/rest_framework/test.py,281,Ensure that any credentials set get added to every request.,
django-rest-framework/rest_framework/test.py,334,Also clear any `force_authenticate`,
django-rest-framework/rest_framework/test.py,376,Get the module of the TestCase subclass,
django-rest-framework/rest_framework/fields.py,64,Bail early since we cannot inspect built-in function signatures.,
django-rest-framework/rest_framework/fields.py,102,If we raised an Attribute or KeyError here it'd get treated,
django-rest-framework/rest_framework/fields.py,103,as an omitted field in `Field.get_attribute()`. Instead we,
django-rest-framework/rest_framework/fields.py,104,raise a ValueError to ensure the exception is not masked.,
django-rest-framework/rest_framework/fields.py,139,"Allow single, paired or grouped choices style:",
django-rest-framework/rest_framework/fields.py,140,"choices = [1, 2, 3]",
django-rest-framework/rest_framework/fields.py,141,"choices = [(1, 'First'), (2, 'Second'), (3, 'Third')]",
django-rest-framework/rest_framework/fields.py,142,"choices = [('Category', ((1, 'First'), (2, 'Second'))), (3, 'Third')]",
django-rest-framework/rest_framework/fields.py,146,single choice,
django-rest-framework/rest_framework/fields.py,151,"grouped choices (category, sub choices)",
django-rest-framework/rest_framework/fields.py,154,"paired choice (key, display value)",
django-rest-framework/rest_framework/fields.py,169,"grouped choices (category, sub choices)",
django-rest-framework/rest_framework/fields.py,173,"choice (key, display value)",
django-rest-framework/rest_framework/fields.py,328,"If `required` is unset, then use `True` unless a default is provided.",
django-rest-framework/rest_framework/fields.py,332,Some combinations of keyword arguments do not make sense.,
django-rest-framework/rest_framework/fields.py,356,These are set up by `.bind()` when the field is added to a serializer.,
django-rest-framework/rest_framework/fields.py,360,Collect default error message from self and parent classes,
django-rest-framework/rest_framework/fields.py,373,"In order to enforce a consistent style, we error if a redundant",
django-rest-framework/rest_framework/fields.py,374,'source' argument has been used. For example:,
django-rest-framework/rest_framework/fields.py,375,my_field = serializer.CharField(source='my_field'),
django-rest-framework/rest_framework/fields.py,386,`self.label` should default to being based on the field name.,
django-rest-framework/rest_framework/fields.py,390,self.source should default to being the same as the field name.,
django-rest-framework/rest_framework/fields.py,394,self.source_attrs is a list of attributes that need to be looked up,
django-rest-framework/rest_framework/fields.py,395,"when serializing the instance, or populating the validated data.",
django-rest-framework/rest_framework/fields.py,401,".validators is a lazily loaded property, that gets its default",
django-rest-framework/rest_framework/fields.py,402,value from `get_validators`.,
django-rest-framework/rest_framework/fields.py,431,"HTML forms will represent empty fields as '', and cannot",
django-rest-framework/rest_framework/fields.py,432,represent None or False values directly.,
django-rest-framework/rest_framework/fields.py,439,"If the field is blank, and null is a valid value then",
django-rest-framework/rest_framework/fields.py,440,determine if we should use null instead.,
django-rest-framework/rest_framework/fields.py,443,"If the field is blank, and emptiness is valid then",
django-rest-framework/rest_framework/fields.py,444,determine if we should use emptiness instead.,
django-rest-framework/rest_framework/fields.py,500,"No default, or this is a partial update.",
django-rest-framework/rest_framework/fields.py,544,Nullable `source='*'` fields should not be skipped when its named,
django-rest-framework/rest_framework/fields.py,545,field is given a null value. This is because `source='*'` means,
django-rest-framework/rest_framework/fields.py,546,"the field is passed the entire object, which is not null.",
django-rest-framework/rest_framework/fields.py,593,If the validation error contains a mapping of fields to,
django-rest-framework/rest_framework/fields.py,594,errors then simply raise it immediately rather than,
django-rest-framework/rest_framework/fields.py,595,attempting to accumulate a list of errors.,
django-rest-framework/rest_framework/fields.py,673,Treat regexes and validators as immutable.,
django-rest-framework/rest_framework/fields.py,674,See https://github.com/encode/django-rest-framework/issues/1954,
django-rest-framework/rest_framework/fields.py,675,and https://github.com/encode/django-rest-framework/pull/4489,
django-rest-framework/rest_framework/fields.py,695,Boolean types...,
django-rest-framework/rest_framework/fields.py,729,Input is an unhashable type,
django-rest-framework/rest_framework/fields.py,779,Input is an unhashable type,
django-rest-framework/rest_framework/fields.py,793,String types...,
django-rest-framework/rest_framework/fields.py,819,ProhibitNullCharactersValidator is None on Django < 2.0,
django-rest-framework/rest_framework/fields.py,825,"Test for the empty string here so that it does not get validated,",
django-rest-framework/rest_framework/fields.py,826,and so that subclasses do not need to handle it explicitly,
django-rest-framework/rest_framework/fields.py,827,inside the `to_internal_value()` method.,
django-rest-framework/rest_framework/fields.py,835,"We're lenient with allowing basic numerics to be coerced into strings,",
django-rest-framework/rest_framework/fields.py,836,"but other types should fail. Eg. unclear if booleans should represent as `true` or `True`,",
django-rest-framework/rest_framework/fields.py,837,and composites such as lists are likely user error.,
django-rest-framework/rest_framework/fields.py,960,Number types...,
django-rest-framework/rest_framework/fields.py,969,Guard against malicious string inputs.,
django-rest-framework/rest_framework/fields.py,970,"allow e.g. '1.0' as an int, but not '1.2'",
django-rest-framework/rest_framework/fields.py,1006,Guard against malicious string inputs.,
django-rest-framework/rest_framework/fields.py,1045,Guard against malicious string inputs.,
django-rest-framework/rest_framework/fields.py,1104,Check for infinity and negative infinity.,
django-rest-framework/rest_framework/fields.py,1121,1234500.0,
django-rest-framework/rest_framework/fields.py,1126,123.45,
django-rest-framework/rest_framework/fields.py,1131,0.001234,
django-rest-framework/rest_framework/fields.py,1177,Date & time fields...,
django-rest-framework/rest_framework/fields.py,1319,Applying a `DateField` to a datetime value is almost always,
django-rest-framework/rest_framework/fields.py,1320,"not a sensible thing to do, as it means naively dropping",
django-rest-framework/rest_framework/fields.py,1321,any explicit or implicit timezone info.,
django-rest-framework/rest_framework/fields.py,1382,Applying a `TimeField` to a datetime value is almost always,
django-rest-framework/rest_framework/fields.py,1383,"not a sensible thing to do, as it means naively dropping",
django-rest-framework/rest_framework/fields.py,1384,any explicit or implicit timezone info.,
django-rest-framework/rest_framework/fields.py,1428,Choice types...,
django-rest-framework/rest_framework/fields.py,1477,Map the string representation of choices to the underlying value.,
django-rest-framework/rest_framework/fields.py,1478,Allows us to deal with eg. integer choices while supporting either,
django-rest-framework/rest_framework/fields.py,1479,"integer or string input, but still get the correct datatype out.",
django-rest-framework/rest_framework/fields.py,1503,We override the default field access in order to support,
django-rest-framework/rest_framework/fields.py,1504,lists in HTML forms.,
django-rest-framework/rest_framework/fields.py,1533,Defer to Django's FilePathField implementation to get the,
django-rest-framework/rest_framework/fields.py,1534,valid set of choices.,
django-rest-framework/rest_framework/fields.py,1543,File types...,
django-rest-framework/rest_framework/fields.py,1563,`UploadedFile` objects should have name and size attributes.,
django-rest-framework/rest_framework/fields.py,1608,"Image validation is a bit grungy, so we'll just outright",
django-rest-framework/rest_framework/fields.py,1609,defer to Django's implementation so we don't need to,
django-rest-framework/rest_framework/fields.py,1610,"consider it, or treat PIL as a test dependency.",
django-rest-framework/rest_framework/fields.py,1617,Composite field types...,
django-rest-framework/rest_framework/fields.py,1667,We override the default field access in order to support,
django-rest-framework/rest_framework/fields.py,1668,lists in HTML forms.,
django-rest-framework/rest_framework/fields.py,1672,Support QueryDict lists in HTML input.,
django-rest-framework/rest_framework/fields.py,1733,We override the default field access in order to support,
django-rest-framework/rest_framework/fields.py,1734,dictionaries in HTML forms.,
django-rest-framework/rest_framework/fields.py,1798,"When HTML form input is used, mark up the input",
django-rest-framework/rest_framework/fields.py,1799,"as being a JSON string, rather than a JSON primitive.",
django-rest-framework/rest_framework/fields.py,1827,Miscellaneous field types...,
django-rest-framework/rest_framework/fields.py,1864,We always use the default value for `HiddenField`.,
django-rest-framework/rest_framework/fields.py,1865,User input is never provided or accepted.,
django-rest-framework/rest_framework/fields.py,1894,The method name defaults to `get_{field_name}`.,
django-rest-framework/rest_framework/fields.py,1918,"The `max_length` option is supported by Django's base `Field` class,",
django-rest-framework/rest_framework/fields.py,1919,so we'd better support it here.,
django-rest-framework/rest_framework/fields.py,1934,"We pass the object instance onto `to_representation`,",
django-rest-framework/rest_framework/fields.py,1935,not just the field attribute.,
django-rest-framework/rest_framework/views.py,29,"Name may be set by some Views, such as a ViewSet.",
django-rest-framework/rest_framework/views.py,39,"Suffix may be set by some Views, such as a ViewSet.",
django-rest-framework/rest_framework/views.py,54,"Description may be set by some Views, such as a ViewSet.",
django-rest-framework/rest_framework/views.py,106,"The following policies may be set at either globally, or per-view.",
django-rest-framework/rest_framework/views.py,116,Allow dependency injection of other settings to make testing easier.,
django-rest-framework/rest_framework/views.py,142,"Note: session based authentication is explicitly CSRF validated,",
django-rest-framework/rest_framework/views.py,143,all other authentication is CSRF exempt.,
django-rest-framework/rest_framework/views.py,197,Note: Additionally `request` and `encoding` will also be added,
django-rest-framework/rest_framework/views.py,198,to the context by the Request object.,
django-rest-framework/rest_framework/views.py,210,"Note: Additionally 'response' will also be added to the context,",
django-rest-framework/rest_framework/views.py,211,by the Response object.,
django-rest-framework/rest_framework/views.py,247,API policy instantiation methods,
django-rest-framework/rest_framework/views.py,300,API policy implementation methods,
django-rest-framework/rest_framework/views.py,359,Filter out `None` values which may happen in case of config / rate,
django-rest-framework/rest_framework/views.py,360,"changes, see #1438",
django-rest-framework/rest_framework/views.py,379,Dispatch methods,
django-rest-framework/rest_framework/views.py,401,Perform content negotiation and store the accepted info on the request,
django-rest-framework/rest_framework/views.py,405,"Determine the API version, if versioning is in use.",
django-rest-framework/rest_framework/views.py,409,Ensure that the incoming request is permitted,
django-rest-framework/rest_framework/views.py,418,Make the error obvious if a proper response is not returned,
django-rest-framework/rest_framework/views.py,434,Add new vary headers to the response instead of overwriting.,
django-rest-framework/rest_framework/views.py,451,"WWW-Authenticate header for 401 responses, else coerce to 403",
django-rest-framework/rest_framework/views.py,478,Note: Views are made CSRF exempt from within `as_view` as to prevent,
django-rest-framework/rest_framework/views.py,479,accidental removal of this exemption in cases where `dispatch` needs to,
django-rest-framework/rest_framework/views.py,480,be overridden.,
django-rest-framework/rest_framework/views.py,490,deprecate?,
django-rest-framework/rest_framework/views.py,495,Get the appropriate handler method,
django-rest-framework/rest_framework/authentication.py,22,Work around django test client oddness,
django-rest-framework/rest_framework/authentication.py,29,Return the failure reason instead of an HttpResponse,
django-rest-framework/rest_framework/authentication.py,123,Get the session-based user from the underlying HttpRequest object,
django-rest-framework/rest_framework/authentication.py,126,"Unauthenticated, CSRF validation not required",
django-rest-framework/rest_framework/authentication.py,132,CSRF passed with authenticated user,
django-rest-framework/rest_framework/authentication.py,140,"populates request.META['CSRF_COOKIE'], which is used in process_view()",
django-rest-framework/rest_framework/authentication.py,144,"CSRF failed, bail with explicit error message",
django-rest-framework/rest_framework/authentication.py,221,Name of request header to grab username from.  This will be the key as,
django-rest-framework/rest_framework/authentication.py,222,"used in the request.META dictionary, i.e. the normalization of headers to",
django-rest-framework/rest_framework/authentication.py,223,"all uppercase and the addition of ""HTTP_"" prefix apply.",
django-rest-framework/rest_framework/viewsets.py,56,The name and description initkwargs may be explicitly overridden for,
django-rest-framework/rest_framework/viewsets.py,57,"certain route configurations. eg, names of extra actions.",
django-rest-framework/rest_framework/viewsets.py,61,The suffix initkwarg is reserved for displaying the viewset type.,
django-rest-framework/rest_framework/viewsets.py,62,This initkwarg should have no effect if the name is provided.,
django-rest-framework/rest_framework/viewsets.py,63,eg. 'List' or 'Instance'.,
django-rest-framework/rest_framework/viewsets.py,66,The detail initkwarg is reserved for introspecting the viewset type.,
django-rest-framework/rest_framework/viewsets.py,69,Setting a basename allows a view to reverse its action urls. This,
django-rest-framework/rest_framework/viewsets.py,70,value is provided by the router through the initkwargs.,
django-rest-framework/rest_framework/viewsets.py,73,actions must not be empty,
django-rest-framework/rest_framework/viewsets.py,79,sanitize keyword arguments,
django-rest-framework/rest_framework/viewsets.py,89,name and suffix are mutually exclusive,
django-rest-framework/rest_framework/viewsets.py,100,"We also store the mapping of request methods to actions,",
django-rest-framework/rest_framework/viewsets.py,101,so that we can later set the action attribute.,
django-rest-framework/rest_framework/viewsets.py,102,eg. `self.action = 'list'` on an incoming GET request.,
django-rest-framework/rest_framework/viewsets.py,105,Bind methods to actions,
django-rest-framework/rest_framework/viewsets.py,106,This is the bit that's different to a standard view,
django-rest-framework/rest_framework/viewsets.py,115,And continue as usual,
django-rest-framework/rest_framework/viewsets.py,118,take name and docstring from class,
django-rest-framework/rest_framework/viewsets.py,121,and possible attributes set by decorators,
django-rest-framework/rest_framework/viewsets.py,122,like csrf_exempt from dispatch,
django-rest-framework/rest_framework/viewsets.py,125,"We need to set these on the view function, so that breadcrumb",
django-rest-framework/rest_framework/viewsets.py,126,generation can pick out these bits of information from a,
django-rest-framework/rest_framework/viewsets.py,127,resolved URL.,
django-rest-framework/rest_framework/viewsets.py,140,This is a special case as we always provide handling for the,
django-rest-framework/rest_framework/viewsets.py,141,options method in the base `View` class.,
django-rest-framework/rest_framework/viewsets.py,142,"Unlike the other explicitly defined actions, 'metadata' is implicit.",
django-rest-framework/rest_framework/viewsets.py,172,exit early if `detail` has not been provided,
django-rest-framework/rest_framework/viewsets.py,176,filter for the relevant extra actions,
django-rest-framework/rest_framework/viewsets.py,189,"URL requires additional arguments, ignore",
django-rest-framework/rest_framework/renderers.py,64,"We don't set a charset because JSON is a binary encoding,",
django-rest-framework/rest_framework/renderers.py,65,"that can be encoded as utf-8, utf-16 or utf-32.",
django-rest-framework/rest_framework/renderers.py,66,See: https://www.ietf.org/rfc/rfc4627.txt,
django-rest-framework/rest_framework/renderers.py,67,Also: http://lucumr.pocoo.org/2013/7/19/application-mimetypes-and-encodings/,
django-rest-framework/rest_framework/renderers.py,72,"If the media type looks like 'application/json; indent=4',",
django-rest-framework/rest_framework/renderers.py,73,then pretty print the result.,
django-rest-framework/rest_framework/renderers.py,74,Note that we coerce `indent=0` into `indent=None`.,
django-rest-framework/rest_framework/renderers.py,81,"If 'indent' is provided in the context, then pretty print the result.",
django-rest-framework/rest_framework/renderers.py,82,E.g. If we're being called by the BrowsableAPIRenderer.,
django-rest-framework/rest_framework/renderers.py,106,We always fully escape \u2028 and \u2029 to ensure we output JSON,
django-rest-framework/rest_framework/renderers.py,107,that is a strict javascript subset.,
django-rest-framework/rest_framework/renderers.py,108,See: http://timelessrepo.com/json-isnt-a-javascript-subset,
django-rest-framework/rest_framework/renderers.py,163,Fallback for older versions.,
django-rest-framework/rest_framework/renderers.py,196,Try to find an appropriate error template,
django-rest-framework/rest_framework/renderers.py,199,Fall back to using eg '404 Not Found',
django-rest-framework/rest_framework/renderers.py,205,"Note, subclass TemplateHTMLRenderer simply for the exception behavior",
django-rest-framework/rest_framework/renderers.py,297,Also valid: 'radio.html',
django-rest-framework/rest_framework/renderers.py,300,Also valid: 'checkbox_multiple.html',
django-rest-framework/rest_framework/renderers.py,303,Also valid: 'radio.html',
django-rest-framework/rest_framework/renderers.py,306,Also valid: 'checkbox_multiple.html',
django-rest-framework/rest_framework/renderers.py,338,Get a clone of the field with text-only value representation.,
django-rest-framework/rest_framework/renderers.py,428,Not a valid method,
django-rest-framework/rest_framework/renderers.py,435,Doesn't have permissions,
django-rest-framework/rest_framework/renderers.py,453,See issue #2089 for refactoring this.,
django-rest-framework/rest_framework/renderers.py,462,"If this is valid serializer data, and the form is for the same",
django-rest-framework/rest_framework/renderers.py,463,HTTP method as was used in the request then use the existing,
django-rest-framework/rest_framework/renderers.py,464,"serializer instance, rather than dynamically creating a new one.",
django-rest-framework/rest_framework/renderers.py,480,Don't actually need to return a form,
django-rest-framework/rest_framework/renderers.py,503,at this point we must have a serializer_class,
django-rest-framework/rest_framework/renderers.py,530,See issue #2089 for refactoring this.,
django-rest-framework/rest_framework/renderers.py,540,Check permissions,
django-rest-framework/rest_framework/renderers.py,544,"If possible, serialize the initial content for the generic form",
django-rest-framework/rest_framework/renderers.py,548,View has a serializer defined and parser class has a,
django-rest-framework/rest_framework/renderers.py,549,corresponding renderer that can be used to render the data.,
django-rest-framework/rest_framework/renderers.py,556,Render the raw data content,
django-rest-framework/rest_framework/renderers.py,562,strip HiddenField from output,
django-rest-framework/rest_framework/renderers.py,568,"Renders returns bytes, but CharField expects a str.",
django-rest-framework/rest_framework/renderers.py,573,"Generate a generic form that includes a content type field,",
django-rest-framework/rest_framework/renderers.py,574,and a content field.,
django-rest-framework/rest_framework/renderers.py,618,Infer if this is a list view or not.,
django-rest-framework/rest_framework/renderers.py,727,Munge DELETE Response code to allow us to return content,
django-rest-framework/rest_framework/renderers.py,728,(Do this *after* we've rendered the template so that we include,
django-rest-framework/rest_framework/renderers.py,729,the normal deletion response code in the output),
django-rest-framework/rest_framework/renderers.py,750,Errors still need to display the list or detail information.,
django-rest-framework/rest_framework/renderers.py,751,The only way we can get at that is to simulate a GET request.,
django-rest-framework/rest_framework/renderers.py,763,Creation and deletion should use redirects in the admin style.,
django-rest-framework/rest_framework/renderers.py,772,Attempt to get the parent breadcrumb URL.,
django-rest-framework/rest_framework/renderers.py,775,Otherwise reload current URL to get a 'Not Found' page.,
django-rest-framework/rest_framework/renderers.py,1056,"disable yaml advanced feature 'alias' for clean, portable, and readable output",
django-rest-framework/rest_framework/parsers.py,143,Note that this code is extracted from Django's handling of,
django-rest-framework/rest_framework/parsers.py,144,file uploads in MultiPartParser.,
django-rest-framework/rest_framework/parsers.py,153,See if the handler will want to take care of the parsing.,
django-rest-framework/rest_framework/parsers.py,163,This is the standard case.,
django-rest-framework/rest_framework/reverse.py,43,"In case the versioning scheme reversal fails, fallback to the",
django-rest-framework/rest_framework/reverse.py,44,default implementation,
django-rest-framework/rest_framework/routers.py,58,invalidate the urls cache,
django-rest-framework/rest_framework/routers.py,85,List route.,
django-rest-framework/rest_framework/routers.py,96,Dynamically generated list routes. Generated using,
django-rest-framework/rest_framework/routers.py,97,@action(detail=False) decorator on methods of the viewset.,
django-rest-framework/rest_framework/routers.py,104,Detail route.,
django-rest-framework/rest_framework/routers.py,117,Dynamically generated detail routes. Generated using,
django-rest-framework/rest_framework/routers.py,118,@action(detail=True) decorator on methods of the viewset.,
django-rest-framework/rest_framework/routers.py,150,"converting to list as iterables are good for one pass, known host needs to be checked again and again for",
django-rest-framework/rest_framework/routers.py,151,different functions.,
django-rest-framework/rest_framework/routers.py,155,checking action names against the known actions list,
django-rest-framework/rest_framework/routers.py,165,partition detail and list actions,
django-rest-framework/rest_framework/routers.py,218,"Use `pk` as default field, unset set.  Default regex should not",
django-rest-framework/rest_framework/routers.py,219,consume `.json` style suffixes and should break at '/' boundaries.,
django-rest-framework/rest_framework/routers.py,241,Only actions which actually exist on the viewset will be bound,
django-rest-framework/rest_framework/routers.py,246,Build the url pattern,
django-rest-framework/rest_framework/routers.py,253,"If there is no prefix, the first part of the url is probably",
django-rest-framework/rest_framework/routers.py,254,"controlled by project's urls.py and the router is in an app,",
django-rest-framework/rest_framework/routers.py,255,so a slash in the beginning will (A) cause Django to give,
django-rest-framework/rest_framework/routers.py,256,warnings and (B) generate URLS that will require using '//'.,
django-rest-framework/rest_framework/routers.py,278,exclude from schema,
django-rest-framework/rest_framework/routers.py,282,"Return a plain {""name"": ""hyperlink""} response.",
django-rest-framework/rest_framework/routers.py,297,"Don't bail out if eg. no list routes exist, only detail routes.",
django-rest-framework/rest_framework/metadata.py,82,Test global permissions,
django-rest-framework/rest_framework/metadata.py,85,Test object permissions,
django-rest-framework/rest_framework/metadata.py,91,"If user has appropriate permissions for the view, include",
django-rest-framework/rest_framework/metadata.py,92,appropriate metadata about the fields that should be supplied.,
django-rest-framework/rest_framework/metadata.py,106,If this is a `ListSerializer` then we want to examine the,
django-rest-framework/rest_framework/metadata.py,107,underlying child serializer instance instead.,
django-rest-framework/rest_framework/serializers.py,45,Note: We do the following so that users of the framework can use this style:,
django-rest-framework/rest_framework/serializers.py,46,,
django-rest-framework/rest_framework/serializers.py,47,example_field = serializers.CharField(...),
django-rest-framework/rest_framework/serializers.py,48,,
django-rest-framework/rest_framework/serializers.py,49,"This helps keep the separation between model fields, form fields, and",
django-rest-framework/rest_framework/serializers.py,50,serializer fields more explicit.,
django-rest-framework/rest_framework/serializers.py,51,NOQA # isort:skip,
django-rest-framework/rest_framework/serializers.py,58,NOQA # isort:skip,
django-rest-framework/rest_framework/serializers.py,63,"Non-field imports, but public API",
django-rest-framework/rest_framework/serializers.py,64,NOQA # isort:skip,
django-rest-framework/rest_framework/serializers.py,67,NOQA # isort:skip,
django-rest-framework/rest_framework/serializers.py,69,"We assume that 'validators' are intended for the child serializer,",
django-rest-framework/rest_framework/serializers.py,70,rather than the parent serializer.,
django-rest-framework/rest_framework/serializers.py,80,BaseSerializer,
django-rest-framework/rest_framework/serializers.py,81,--------------,
django-rest-framework/rest_framework/serializers.py,118,We override this method in order to automagically create,
django-rest-framework/rest_framework/serializers.py,119,`ListSerializer` classes instead when `many=True` is set.,
django-rest-framework/rest_framework/serializers.py,177,Guard against incorrect use of `serializer.save(commit=False)`,
django-rest-framework/rest_framework/serializers.py,267,Serializer & ListSerializer classes,
django-rest-framework/rest_framework/serializers.py,268,-----------------------------------,
django-rest-framework/rest_framework/serializers.py,286,"Ensures a base class field doesn't override cls attrs, and maintains",
django-rest-framework/rest_framework/serializers.py,287,field precedence when inheriting multiple parents. e.g. if there is a,
django-rest-framework/rest_framework/serializers.py,288,"class C(A, B), and A and B both define 'field', use 'field' from A.",
django-rest-framework/rest_framework/serializers.py,317,If errors may be a dict we use the standard {key: list of values}.,
django-rest-framework/rest_framework/serializers.py,318,Here we ensure that all the values are *lists* of errors.,
django-rest-framework/rest_framework/serializers.py,324,Errors raised as a list are non-field errors.,
django-rest-framework/rest_framework/serializers.py,328,Errors raised as a string are non-field errors.,
django-rest-framework/rest_framework/serializers.py,344,`fields` is evaluated lazily. We do this to ensure that we don't,
django-rest-framework/rest_framework/serializers.py,345,"have issues importing modules that use ModelSerializers as fields,",
django-rest-framework/rest_framework/serializers.py,346,even if Django's app-loading stage has not yet run.,
django-rest-framework/rest_framework/serializers.py,368,Every new serializer is created with a clone of the field instances.,
django-rest-framework/rest_framework/serializers.py,369,This allows users to dynamically modify the fields on a serializer,
django-rest-framework/rest_framework/serializers.py,370,instance without affecting every other serializer instance.,
django-rest-framework/rest_framework/serializers.py,377,Used by the lazily-evaluated `validators` property.,
django-rest-framework/rest_framework/serializers.py,384,initial_data may not be a valid type,
django-rest-framework/rest_framework/serializers.py,402,We override the default field access in order to support,
django-rest-framework/rest_framework/serializers.py,403,nested HTML forms.,
django-rest-framework/rest_framework/serializers.py,505,We skip `to_representation` for `None` values so that fields do,
django-rest-framework/rest_framework/serializers.py,506,not have to explicitly deal with that case.,
django-rest-framework/rest_framework/serializers.py,507,,
django-rest-framework/rest_framework/serializers.py,508,For related fields with `use_pk_only_optimization` we need to,
django-rest-framework/rest_framework/serializers.py,509,resolve the pk value.,
django-rest-framework/rest_framework/serializers.py,524,The following are used for accessing `BoundField` instances on the,
django-rest-framework/rest_framework/serializers.py,525,"serializer, for the purposes of presenting a form-like API onto the",
django-rest-framework/rest_framework/serializers.py,526,field values and field errors.,
django-rest-framework/rest_framework/serializers.py,542,Include a backlink to the serializer class on return objects.,
django-rest-framework/rest_framework/serializers.py,543,Allows renderers such as HTMLFormRenderer to get the full field info.,
django-rest-framework/rest_framework/serializers.py,554,Edge case. Provide a more descriptive error than,
django-rest-framework/rest_framework/serializers.py,555,"""this field may not be null"", when no data is passed.",
django-rest-framework/rest_framework/serializers.py,561,"There's some replication of `ListField` here,",
django-rest-framework/rest_framework/serializers.py,562,but that's probably better than obfuscating the call hierarchy.,
django-rest-framework/rest_framework/serializers.py,590,We override the default field access in order to support,
django-rest-framework/rest_framework/serializers.py,591,lists in HTML forms.,
django-rest-framework/rest_framework/serializers.py,658,"Dealing with nested relationships, data can be a Manager,",
django-rest-framework/rest_framework/serializers.py,659,"so, first get a queryset from the Manager if needed",
django-rest-framework/rest_framework/serializers.py,687,Guard against incorrect use of `serializer.save(commit=False)`,
django-rest-framework/rest_framework/serializers.py,716,"This implementation is the same as the default,",
django-rest-framework/rest_framework/serializers.py,717,"except that we use lists, rather than dicts, as the empty case.",
django-rest-framework/rest_framework/serializers.py,740,Include a backlink to the serializer class on return objects.,
django-rest-framework/rest_framework/serializers.py,741,Allows renderers such as HTMLFormRenderer to get the full field info.,
django-rest-framework/rest_framework/serializers.py,752,Edge case. Provide a more descriptive error than,
django-rest-framework/rest_framework/serializers.py,753,"""this field may not be null"", when no data is passed.",
django-rest-framework/rest_framework/serializers.py,761,ModelSerializer & HyperlinkedModelSerializer,
django-rest-framework/rest_framework/serializers.py,762,--------------------------------------------,
django-rest-framework/rest_framework/serializers.py,785,Ensure we don't have a writable nested field. For example:,
django-rest-framework/rest_framework/serializers.py,786,,
django-rest-framework/rest_framework/serializers.py,787,class UserSerializer(ModelSerializer):,
django-rest-framework/rest_framework/serializers.py,788,...,
django-rest-framework/rest_framework/serializers.py,789,profile = ProfileSerializer(),
django-rest-framework/rest_framework/serializers.py,807,Ensure we don't have a writable dotted-source field. For example:,
django-rest-framework/rest_framework/serializers.py,808,,
django-rest-framework/rest_framework/serializers.py,809,class UserSerializer(ModelSerializer):,
django-rest-framework/rest_framework/serializers.py,810,...,
django-rest-framework/rest_framework/serializers.py,811,address = serializer.CharField('profile.address'),
django-rest-framework/rest_framework/serializers.py,812,,
django-rest-framework/rest_framework/serializers.py,813,"Though, non-relational fields (e.g., JSONField) are acceptable. For example:",
django-rest-framework/rest_framework/serializers.py,814,,
django-rest-framework/rest_framework/serializers.py,815,class NonRelationalPersonModel(models.Model):,
django-rest-framework/rest_framework/serializers.py,816,profile = JSONField(),
django-rest-framework/rest_framework/serializers.py,817,,
django-rest-framework/rest_framework/serializers.py,818,class UserSerializer(ModelSerializer):,
django-rest-framework/rest_framework/serializers.py,819,...,
django-rest-framework/rest_framework/serializers.py,820,address = serializer.CharField('profile.address'),
django-rest-framework/rest_framework/serializers.py,892,The field name for hyperlinked identity fields. Defaults to 'url'.,
django-rest-framework/rest_framework/serializers.py,893,You can modify this using the API setting.,
django-rest-framework/rest_framework/serializers.py,894,,
django-rest-framework/rest_framework/serializers.py,895,"Note that if you instead need modify this on a per-serializer basis,",
django-rest-framework/rest_framework/serializers.py,896,you'll also need to ensure you update the `create` method on any generic,
django-rest-framework/rest_framework/serializers.py,897,"views, to correctly handle the 'Location' response header for",
django-rest-framework/rest_framework/serializers.py,898,"""HTTP 201 Created"" responses.",
django-rest-framework/rest_framework/serializers.py,901,Default `create` and `update` behavior...,
django-rest-framework/rest_framework/serializers.py,927,Remove many-to-many relationships from validated_data.,
django-rest-framework/rest_framework/serializers.py,928,"They are not valid arguments to the default `.create()` method,",
django-rest-framework/rest_framework/serializers.py,929,as they require that the instance has already been saved.,
django-rest-framework/rest_framework/serializers.py,958,Save many-to-many relationships after the instance is created.,
django-rest-framework/rest_framework/serializers.py,970,"Simply set each attribute on the instance, and then save it.",
django-rest-framework/rest_framework/serializers.py,971,Note that unlike `.create()` we don't need to treat many-to-many,
django-rest-framework/rest_framework/serializers.py,972,relationships as being a special case. During updates we already,
django-rest-framework/rest_framework/serializers.py,973,have an instance pk for the relationships to be associated with.,
django-rest-framework/rest_framework/serializers.py,983,Note that many-to-many fields are set after updating instance.,
django-rest-framework/rest_framework/serializers.py,984,Setting m2m fields triggers signals which could potentially change,
django-rest-framework/rest_framework/serializers.py,985,updated instance and we do not want it to collide with .update(),
django-rest-framework/rest_framework/serializers.py,992,Determine the fields to apply...,
django-rest-framework/rest_framework/serializers.py,1025,Retrieve metadata about fields & relationships on the model class.,
django-rest-framework/rest_framework/serializers.py,1029,Determine any extra field arguments and hidden fields that,
django-rest-framework/rest_framework/serializers.py,1030,should be included,
django-rest-framework/rest_framework/serializers.py,1036,Determine the fields that should be included on the serializer.,
django-rest-framework/rest_framework/serializers.py,1040,If the field is explicitly declared on the class then use that.,
django-rest-framework/rest_framework/serializers.py,1050,Determine the serializer field class and keyword arguments.,
django-rest-framework/rest_framework/serializers.py,1055,Include any kwargs defined in `Meta.extra_kwargs`,
django-rest-framework/rest_framework/serializers.py,1060,Create the serializer field.,
django-rest-framework/rest_framework/serializers.py,1063,Add in any hidden fields.,
django-rest-framework/rest_framework/serializers.py,1068,Methods for determining the set of field names to include...,
django-rest-framework/rest_framework/serializers.py,1112,Ensure that all declared fields have also been included in the,
django-rest-framework/rest_framework/serializers.py,1113,`Meta.fields` option.,
django-rest-framework/rest_framework/serializers.py,1115,"Do not require any fields that are declared in a parent class,",
django-rest-framework/rest_framework/serializers.py,1116,in order to allow serializer subclasses to only include,
django-rest-framework/rest_framework/serializers.py,1117,a subset of fields.,
django-rest-framework/rest_framework/serializers.py,1133,Use the default set of field names if `Meta.fields` is not specified.,
django-rest-framework/rest_framework/serializers.py,1137,"If `Meta.exclude` is included, then remove those fields.",
django-rest-framework/rest_framework/serializers.py,1174,Methods for constructing serializer fields...,
django-rest-framework/rest_framework/serializers.py,1208,Special case to handle when a OneToOneField is also the primary key,
django-rest-framework/rest_framework/serializers.py,1214,Fields with choices get coerced into `ChoiceField`,
django-rest-framework/rest_framework/serializers.py,1215,instead of using their regular typed field.,
django-rest-framework/rest_framework/serializers.py,1217,Some model fields may introduce kwargs that would not be valid,
django-rest-framework/rest_framework/serializers.py,1218,for the choice field. We need to strip these out.,
django-rest-framework/rest_framework/serializers.py,1219,"Eg. models.DecimalField(max_digits=3, decimal_places=1, choices=DECIMAL_CHOICES)",
django-rest-framework/rest_framework/serializers.py,1232,`model_field` is only valid for the fallback case of,
django-rest-framework/rest_framework/serializers.py,1233,"`ModelField`, which is used when no other typed field",
django-rest-framework/rest_framework/serializers.py,1234,matched to the model field.,
django-rest-framework/rest_framework/serializers.py,1238,`allow_blank` is only valid for textual fields.,
django-rest-framework/rest_framework/serializers.py,1242,Populate the `encoder` argument of `JSONField` instances generated,
django-rest-framework/rest_framework/serializers.py,1243,for the PostgreSQL specific `JSONField`.,
django-rest-framework/rest_framework/serializers.py,1247,Populate the `child` argument on `ListField` instances generated,
django-rest-framework/rest_framework/serializers.py,1248,for the PostgreSQL specific `ArrayField`.,
django-rest-framework/rest_framework/serializers.py,1269,`view_name` is only valid for hyperlinked relationships.,
django-rest-framework/rest_framework/serializers.py,1334,Read only fields should always omit the 'required' argument.,
django-rest-framework/rest_framework/serializers.py,1340,Methods for determining additional keyword arguments to apply...,
django-rest-framework/rest_framework/serializers.py,1362,Guard against the possible misspelling `readonly_fields` (used,
django-rest-framework/rest_framework/serializers.py,1363,by the Django admin and others).,
django-rest-framework/rest_framework/serializers.py,1388,Determine if we need any additional `HiddenField` or extra keyword,
django-rest-framework/rest_framework/serializers.py,1389,arguments to deal with `unique_for` dates that are required to,
django-rest-framework/rest_framework/serializers.py,1390,be in the input data in order to validate it.,
django-rest-framework/rest_framework/serializers.py,1394,Include each of the `unique_for_*` field names.,
django-rest-framework/rest_framework/serializers.py,1400,"Include each of the `unique_together` field names,",
django-rest-framework/rest_framework/serializers.py,1401,so long as all the field names are included on the serializer.,
django-rest-framework/rest_framework/serializers.py,1407,Now we have all the field names that have uniqueness constraints,
django-rest-framework/rest_framework/serializers.py,1408,"applied, we can add the extra 'required=...' or 'default=...'",
django-rest-framework/rest_framework/serializers.py,1409,"arguments that are appropriate to these fields, or add a `HiddenField` for it.",
django-rest-framework/rest_framework/serializers.py,1414,Get the model field that is referred too.,
django-rest-framework/rest_framework/serializers.py,1427,The corresponding field is present in the serializer,
django-rest-framework/rest_framework/serializers.py,1433,The corresponding field is not present in the,
django-rest-framework/rest_framework/serializers.py,1434,"serializer. We have a default to use for it, so",
django-rest-framework/rest_framework/serializers.py,1435,add in a hidden field that populates it.,
django-rest-framework/rest_framework/serializers.py,1438,Update `extra_kwargs` with any new options.,
django-rest-framework/rest_framework/serializers.py,1458,If the field is declared on the serializer,
django-rest-framework/rest_framework/serializers.py,1468,"Model fields will always have a simple source mapping,",
django-rest-framework/rest_framework/serializers.py,1469,they can't be nested attribute lookups.,
django-rest-framework/rest_framework/serializers.py,1481,Determine the validators to apply...,
django-rest-framework/rest_framework/serializers.py,1487,If the validators have been declared explicitly then use that.,
django-rest-framework/rest_framework/serializers.py,1492,Otherwise use the default set of validators.,
django-rest-framework/rest_framework/serializers.py,1507,The field names we're passing though here only include fields,
django-rest-framework/rest_framework/serializers.py,1508,which may map onto a model field. Any dotted field name lookups,
django-rest-framework/rest_framework/serializers.py,1509,"cannot map to a field, and must be a traversal, so we're not",
django-rest-framework/rest_framework/serializers.py,1510,including those.,
django-rest-framework/rest_framework/serializers.py,1516,Special Case: Add read_only fields with defaults.,
django-rest-framework/rest_framework/serializers.py,1522,Note that we make sure to check `unique_together` both on the,
django-rest-framework/rest_framework/serializers.py,1523,"base model class, but also on any parent classes.",
django-rest-framework/rest_framework/validators.py,16,Robust filter and exist implementations. Ensures that queryset.exists() for,
django-rest-framework/rest_framework/validators.py,17,"an invalid value returns `False`, rather than raising an error.",
django-rest-framework/rest_framework/validators.py,18,Refs https://github.com/encode/django-rest-framework/issues/3381,
django-rest-framework/rest_framework/validators.py,64,Determine the underlying model field name. This may not be the,
django-rest-framework/rest_framework/validators.py,65,same as the serializer field name if `source=<>` is set.,
django-rest-framework/rest_framework/validators.py,67,"Determine the existing instance, if this is an update operation.",
django-rest-framework/rest_framework/validators.py,118,field names => field sources,
django-rest-framework/rest_framework/validators.py,124,"If this is an update, then any unprovided field should",
django-rest-framework/rest_framework/validators.py,125,have it's value set based on the existing instance attribute.,
django-rest-framework/rest_framework/validators.py,131,Determine the filter keyword arguments and filter the queryset.,
django-rest-framework/rest_framework/validators.py,153,Ignore validation if any field is None,
django-rest-framework/rest_framework/validators.py,218,Determine the underlying model field names. These may not be the,
django-rest-framework/rest_framework/validators.py,219,same as the serializer field names if `source=<>` is set.,
django-rest-framework/rest_framework/pagination.py,68,"We always include the first two pages, last two pages, and",
django-rest-framework/rest_framework/pagination.py,69,two pages either side of the current page.,
django-rest-framework/rest_framework/pagination.py,72,If the break would only exclude a single page number then we,
django-rest-framework/rest_framework/pagination.py,73,may as well include the page number instead of the break.,
django-rest-framework/rest_framework/pagination.py,81,Now sort the page numbers and drop anything outside the limits.,
django-rest-framework/rest_framework/pagination.py,87,Finally insert any `...` breaks,
django-rest-framework/rest_framework/pagination.py,135,pragma: no cover,
django-rest-framework/rest_framework/pagination.py,138,pragma: no cover,
django-rest-framework/rest_framework/pagination.py,144,pragma: no cover,
django-rest-framework/rest_framework/pagination.py,166,The default page size.,
django-rest-framework/rest_framework/pagination.py,167,"Defaults to `None`, meaning pagination is disabled.",
django-rest-framework/rest_framework/pagination.py,172,Client can control the page using this query parameter.,
django-rest-framework/rest_framework/pagination.py,176,Client can control the page size using this query parameter.,
django-rest-framework/rest_framework/pagination.py,177,Default is 'None'. Set to eg 'page_size' to enable usage.,
django-rest-framework/rest_framework/pagination.py,181,Set to an integer to limit the maximum page size the client may request.,
django-rest-framework/rest_framework/pagination.py,182,Only relevant if 'page_size_query_param' has also been set.,
django-rest-framework/rest_framework/pagination.py,214,The browsable API should display pagination controls.,
django-rest-framework/rest_framework/pagination.py,465,The number of pages is a little bit fiddly.,
django-rest-framework/rest_framework/pagination.py,466,We need to sum both the number of pages from current offset to end,
django-rest-framework/rest_framework/pagination.py,467,plus the number of pages up to the current offset.,
django-rest-framework/rest_framework/pagination.py,468,When offset is not strictly divisible by the limit then we may,
django-rest-framework/rest_framework/pagination.py,469,end up introducing an extra page as an artifact.,
django-rest-framework/rest_framework/pagination.py,575,Client can control the page size using this query parameter.,
django-rest-framework/rest_framework/pagination.py,576,Default is 'None'. Set to eg 'page_size' to enable usage.,
django-rest-framework/rest_framework/pagination.py,580,Set to an integer to limit the maximum page size the client may request.,
django-rest-framework/rest_framework/pagination.py,581,Only relevant if 'page_size_query_param' has also been set.,
django-rest-framework/rest_framework/pagination.py,584,The offset in the cursor is used in situations where we have a,
django-rest-framework/rest_framework/pagination.py,585,nearly-unique index. (Eg millisecond precision creation timestamps),
django-rest-framework/rest_framework/pagination.py,586,We guard against malicious users attempting to cause expensive database,
django-rest-framework/rest_framework/pagination.py,587,"queries, by having a hard cap on the maximum possible size of the offset.",
django-rest-framework/rest_framework/pagination.py,604,Cursor pagination always enforces an ordering.,
django-rest-framework/rest_framework/pagination.py,610,If we have a cursor with a fixed position then filter by that.,
django-rest-framework/rest_framework/pagination.py,616,Test for: (cursor reversed) XOR (queryset reversed),
django-rest-framework/rest_framework/pagination.py,624,If we have an offset cursor then offset the entire page by that amount.,
django-rest-framework/rest_framework/pagination.py,625,We also always fetch an extra item in order to determine if there is a,
django-rest-framework/rest_framework/pagination.py,626,page following on from this one.,
django-rest-framework/rest_framework/pagination.py,630,Determine the position of the final item following the page.,
django-rest-framework/rest_framework/pagination.py,639,"If we have a reverse queryset, then the query ordering was in reverse",
django-rest-framework/rest_framework/pagination.py,640,so we need to reverse the items again before returning them to the user.,
django-rest-framework/rest_framework/pagination.py,643,Determine next and previous positions for reverse cursors.,
django-rest-framework/rest_framework/pagination.py,651,Determine next and previous positions for forward cursors.,
django-rest-framework/rest_framework/pagination.py,659,Display page controls in the browsable API if there is more,
django-rest-framework/rest_framework/pagination.py,660,than one page.,
django-rest-framework/rest_framework/pagination.py,684,If we're reversing direction and we have an offset cursor,
django-rest-framework/rest_framework/pagination.py,685,then we cannot use the first position we find as a marker.,
django-rest-framework/rest_framework/pagination.py,695,The item in this position and the item following it,
django-rest-framework/rest_framework/pagination.py,696,have different positions. We can use this position as,
django-rest-framework/rest_framework/pagination.py,697,our marker.,
django-rest-framework/rest_framework/pagination.py,701,The item in this position has the same position as the item,
django-rest-framework/rest_framework/pagination.py,702,"following it, we can't use it as a marker position, so increment",
django-rest-framework/rest_framework/pagination.py,703,the offset and keep seeking to the previous item.,
django-rest-framework/rest_framework/pagination.py,708,There were no unique positions in the page.,
django-rest-framework/rest_framework/pagination.py,710,We are on the first page.,
django-rest-framework/rest_framework/pagination.py,711,"Our cursor will have an offset equal to the page size,",
django-rest-framework/rest_framework/pagination.py,712,but no position to filter against yet.,
django-rest-framework/rest_framework/pagination.py,716,"The change in direction will introduce a paging artifact,",
django-rest-framework/rest_framework/pagination.py,717,where we end up skipping forward a few extra items.,
django-rest-framework/rest_framework/pagination.py,721,Use the position from the existing cursor and increment,
django-rest-framework/rest_framework/pagination.py,722,it's offset by the page size.,
django-rest-framework/rest_framework/pagination.py,737,If we're reversing direction and we have an offset cursor,
django-rest-framework/rest_framework/pagination.py,738,then we cannot use the first position we find as a marker.,
django-rest-framework/rest_framework/pagination.py,748,The item in this position and the item following it,
django-rest-framework/rest_framework/pagination.py,749,have different positions. We can use this position as,
django-rest-framework/rest_framework/pagination.py,750,our marker.,
django-rest-framework/rest_framework/pagination.py,754,The item in this position has the same position as the item,
django-rest-framework/rest_framework/pagination.py,755,"following it, we can't use it as a marker position, so increment",
django-rest-framework/rest_framework/pagination.py,756,the offset and keep seeking to the previous item.,
django-rest-framework/rest_framework/pagination.py,761,There were no unique positions in the page.,
django-rest-framework/rest_framework/pagination.py,763,We are on the final page.,
django-rest-framework/rest_framework/pagination.py,764,"Our cursor will have an offset equal to the page size,",
django-rest-framework/rest_framework/pagination.py,765,but no position to filter against yet.,
django-rest-framework/rest_framework/pagination.py,769,Use the position from the existing cursor and increment,
django-rest-framework/rest_framework/pagination.py,770,it's offset by the page size.,
django-rest-framework/rest_framework/pagination.py,774,"The change in direction will introduce a paging artifact,",
django-rest-framework/rest_framework/pagination.py,775,where we end up skipping back a few extra items.,
django-rest-framework/rest_framework/pagination.py,795,If a filter exists on the view that implements `get_ordering`,
django-rest-framework/rest_framework/pagination.py,796,then we defer to that filter to determine the ordering.,
django-rest-framework/rest_framework/pagination.py,807,The default case is to check for an `ordering` attribute,
django-rest-framework/rest_framework/pagination.py,808,on this pagination instance.,
django-rest-framework/rest_framework/pagination.py,834,"Determine if we have a cursor, and if so then decode it.",
django-rest-framework/rest_framework/urlpatterns.py,39,Set of included URL patterns,
django-rest-framework/rest_framework/urlpatterns.py,44,"Add in the included patterns, after applying the suffixes",
django-rest-framework/rest_framework/urlpatterns.py,50,if the original pattern was a RoutePattern we need to preserve it,
django-rest-framework/rest_framework/urlpatterns.py,60,Regular URL pattern,
django-rest-framework/rest_framework/urlpatterns.py,65,Add in both the existing and the new urlpattern,
django-rest-framework/rest_framework/urlpatterns.py,69,if the original pattern was a RoutePattern we need to preserve it,
django-rest-framework/rest_framework/exceptions.py,131,The recommended style for using `ValidationError` is to keep it namespaced,
django-rest-framework/rest_framework/exceptions.py,132,"under `serializers`, in order to minimize potential confusion with Django's",
django-rest-framework/rest_framework/exceptions.py,133,built in `ValidationError`. For example:,
django-rest-framework/rest_framework/exceptions.py,134,,
django-rest-framework/rest_framework/exceptions.py,135,from rest_framework import serializers,
django-rest-framework/rest_framework/exceptions.py,136,raise serializers.ValidationError('Value was invalid'),
django-rest-framework/rest_framework/exceptions.py,149,"For validation failures, we may collect many errors together,",
django-rest-framework/rest_framework/exceptions.py,150,so the details should always be coerced to a list if not already.,
django-rest-framework/rest_framework/permissions.py,174,Map methods into required permission codes.,
django-rest-framework/rest_framework/permissions.py,175,"Override this if you need to also provide 'view' permissions,",
django-rest-framework/rest_framework/permissions.py,176,or if you want to provide custom permission codes.,
django-rest-framework/rest_framework/permissions.py,220,Workaround to ensure DjangoModelPermissions are not applied,
django-rest-framework/rest_framework/permissions.py,221,to the root view when using DefaultRouter.,
django-rest-framework/rest_framework/permissions.py,276,authentication checks have already executed via has_permission,
django-rest-framework/rest_framework/permissions.py,284,If the user does not have permissions we need to determine if,
django-rest-framework/rest_framework/permissions.py,285,"they have read permissions to see 403, or not, and simply see",
django-rest-framework/rest_framework/permissions.py,286,a 404 response.,
django-rest-framework/rest_framework/permissions.py,289,"Read permissions already checked and failed, no need",
django-rest-framework/rest_framework/permissions.py,290,to make another lookup.,
django-rest-framework/rest_framework/permissions.py,297,Has read permissions.,
django-rest-framework/rest_framework/throttling.py,126,Drop any requests from the history which have now passed the,
django-rest-framework/rest_framework/throttling.py,127,throttle duration,
django-rest-framework/rest_framework/throttling.py,175,Only throttle unauthenticated requests.,
django-rest-framework/rest_framework/throttling.py,215,"Override the usual SimpleRateThrottle, because we can't determine",
django-rest-framework/rest_framework/throttling.py,216,the rate until called by the view.,
django-rest-framework/rest_framework/throttling.py,220,We can only determine the scope once we're called by the view.,
django-rest-framework/rest_framework/throttling.py,223,If a view does not have a `throttle_scope` always allow the request,
django-rest-framework/rest_framework/throttling.py,227,Determine the allowed request rate as we normally would during,
django-rest-framework/rest_framework/throttling.py,228,the `__init__` call.,
django-rest-framework/rest_framework/throttling.py,232,We can now proceed as normal.,
django-rest-framework/rest_framework/checks.py,7,Use of default page size setting requires a default Paginator class,
django-rest-framework/rest_framework/__init__.py,16,Version synonym,
django-rest-framework/rest_framework/__init__.py,19,Header encoding (see RFC5987),
django-rest-framework/rest_framework/__init__.py,22,Default datetime input and output formats,
django-rest-framework/rest_framework/settings.py,28,Base API policies,
django-rest-framework/rest_framework/settings.py,50,Generic view behavior,
django-rest-framework/rest_framework/settings.py,54,Schema,
django-rest-framework/rest_framework/settings.py,57,Throttling,
django-rest-framework/rest_framework/settings.py,64,Pagination,
django-rest-framework/rest_framework/settings.py,67,Filtering,
django-rest-framework/rest_framework/settings.py,71,Versioning,
django-rest-framework/rest_framework/settings.py,76,Authentication,
django-rest-framework/rest_framework/settings.py,80,View configuration,
django-rest-framework/rest_framework/settings.py,84,Exception handling,
django-rest-framework/rest_framework/settings.py,88,Testing,
django-rest-framework/rest_framework/settings.py,95,Hyperlink settings,
django-rest-framework/rest_framework/settings.py,100,Input and output formats,
django-rest-framework/rest_framework/settings.py,110,Encoding,
django-rest-framework/rest_framework/settings.py,117,Browseable API,
django-rest-framework/rest_framework/settings.py,121,Schemas,
django-rest-framework/rest_framework/settings.py,130,List of settings that may be in string import notation.,
django-rest-framework/rest_framework/settings.py,152,List of settings that have been removed,
django-rest-framework/rest_framework/settings.py,217,Check if present in user settings,
django-rest-framework/rest_framework/settings.py,220,Fall back to defaults,
django-rest-framework/rest_framework/settings.py,223,Coerce import strings into classes,
django-rest-framework/rest_framework/settings.py,227,Cache the result,
django-rest-framework/rest_framework/versioning.py,50,"We don't need to implement `reverse`, as the versioning is based",
django-rest-framework/rest_framework/versioning.py,51,"on the `Accept` header, not on the request URL.",
django-rest-framework/rest_framework/versioning.py,123,Allow for possibly nested namespaces.,
django-rest-framework/rest_framework/versioning.py,160,"We don't need to implement `reverse`, as the hostname will already be",
django-rest-framework/rest_framework/versioning.py,161,preserved as part of the REST framework `reverse` implementation.,
django-rest-framework/rest_framework/mixins.py,71,"If 'prefetch_related' has been applied to a queryset, we need to",
django-rest-framework/rest_framework/mixins.py,72,forcibly invalidate the prefetch cache on the instance.,
django-rest-framework/rest_framework/decorators.py,31,"Note, the above allows us to set the docstring.",
django-rest-framework/rest_framework/decorators.py,32,It is the equivalent of:,
django-rest-framework/rest_framework/decorators.py,33,,
django-rest-framework/rest_framework/decorators.py,34,class WrappedAPIView(APIView):,
django-rest-framework/rest_framework/decorators.py,35,pass,
django-rest-framework/rest_framework/decorators.py,36,WrappedAPIView.__doc__ = func.doc    <--- Not possible to do this,
django-rest-framework/rest_framework/decorators.py,38,api_view applied without (method_names),
django-rest-framework/rest_framework/decorators.py,42,api_view applied with eg. string instead of list of strings,
django-rest-framework/rest_framework/decorators.py,152,name and suffix are mutually exclusive,
django-rest-framework/rest_framework/decorators.py,163,These kwargs will end up being passed to `ViewSet.as_view()` within,
django-rest-framework/rest_framework/decorators.py,164,"the router, which eventually delegates to Django's CBV `View`,",
django-rest-framework/rest_framework/decorators.py,165,which assigns them as instance attributes for each request.,
django-rest-framework/rest_framework/decorators.py,168,Set descriptive arguments for viewsets,
django-rest-framework/rest_framework/negotiation.py,40,"Allow URL style format override.  eg. ""?format=json",
django-rest-framework/rest_framework/negotiation.py,49,"Check the acceptable media types against each renderer,",
django-rest-framework/rest_framework/negotiation.py,50,attempting more specific media types first,
django-rest-framework/rest_framework/negotiation.py,51,NB. The inner loop here isn't as bad as it first looks :),
django-rest-framework/rest_framework/negotiation.py,52,Worst case is we're looping over len(accept_list) * len(self.renderers),
django-rest-framework/rest_framework/negotiation.py,57,Return the most specific media type as accepted.,
django-rest-framework/rest_framework/negotiation.py,63,Eg client requests '*/*',
django-rest-framework/rest_framework/negotiation.py,64,Accepted media type is 'application/json',
django-rest-framework/rest_framework/negotiation.py,72,Eg client requests 'application/json; indent=8',
django-rest-framework/rest_framework/negotiation.py,73,Accepted media type is 'application/json; indent=8',
django-rest-framework/rest_framework/generics.py,28,"You'll need to either set these attributes,",
django-rest-framework/rest_framework/generics.py,29,or override `get_queryset()`/`get_serializer_class()`.,
django-rest-framework/rest_framework/generics.py,30,"If you are overriding a view method, it is important that you call",
django-rest-framework/rest_framework/generics.py,31,"`get_queryset()` instead of accessing the `queryset` property directly,",
django-rest-framework/rest_framework/generics.py,32,"as `queryset` will get evaluated only once, and those results are cached",
django-rest-framework/rest_framework/generics.py,33,for all subsequent requests.,
django-rest-framework/rest_framework/generics.py,37,"If you want to use object lookups other than pk, set 'lookup_field'.",
django-rest-framework/rest_framework/generics.py,38,For more complex lookup requirements override `get_object()`.,
django-rest-framework/rest_framework/generics.py,42,The filter backend classes to use for queryset filtering,
django-rest-framework/rest_framework/generics.py,45,The style to use for queryset pagination.,
django-rest-framework/rest_framework/generics.py,71,Ensure queryset is re-evaluated on each request.,
django-rest-framework/rest_framework/generics.py,85,Perform the lookup filtering.,
django-rest-framework/rest_framework/generics.py,98,May raise a permission denied,
django-rest-framework/rest_framework/generics.py,181,Concrete view classes that provide method handlers,
django-rest-framework/rest_framework/generics.py,182,by composing the mixin classes with the base view.,
django-rest-framework/rest_framework/utils/representation.py,35,Representations like u'help text',
django-rest-framework/rest_framework/utils/representation.py,36,should simply be presented as 'help text',
django-rest-framework/rest_framework/utils/representation.py,40,Representations like,
django-rest-framework/rest_framework/utils/representation.py,41,<django.core.validators.RegexValidator object at 0x1047af050>,
django-rest-framework/rest_framework/utils/representation.py,42,Should be presented as,
django-rest-framework/rest_framework/utils/representation.py,43,<django.core.validators.RegexValidator object>,
django-rest-framework/rest_framework/utils/serializer_helpers.py,27,"Pickling these objects will drop the .serializer backlink,",
django-rest-framework/rest_framework/utils/serializer_helpers.py,28,but preserve the raw data.,
django-rest-framework/rest_framework/utils/serializer_helpers.py,47,"Pickling these objects will drop the .serializer backlink,",
django-rest-framework/rest_framework/utils/serializer_helpers.py,48,but preserve the raw data.,
django-rest-framework/rest_framework/utils/serializer_helpers.py,86,When HTML form input is used and the input is not valid,
django-rest-framework/rest_framework/utils/serializer_helpers.py,87,"value will be a JSONString, rather than a JSON primitive.",
django-rest-framework/rest_framework/utils/breadcrumbs.py,22,"Check if this is a REST framework view,",
django-rest-framework/rest_framework/utils/breadcrumbs.py,23,and if so add it to the breadcrumbs,
django-rest-framework/rest_framework/utils/breadcrumbs.py,27,Don't list the same view twice in a row.,
django-rest-framework/rest_framework/utils/breadcrumbs.py,28,Probably an optional trailing slash.,
django-rest-framework/rest_framework/utils/breadcrumbs.py,37,All done,
django-rest-framework/rest_framework/utils/breadcrumbs.py,41,Drop trailing slash off the end and continue to try to,
django-rest-framework/rest_framework/utils/breadcrumbs.py,42,resolve more breadcrumbs,
django-rest-framework/rest_framework/utils/breadcrumbs.py,46,Drop trailing non-slash off the end and continue to try to,
django-rest-framework/rest_framework/utils/breadcrumbs.py,47,resolve more breadcrumbs,
django-rest-framework/rest_framework/utils/formatting.py,35,unindent the content if needed,
django-rest-framework/rest_framework/utils/field_mapping.py,31,Deal with proxy classes. Ie. BoundField behaves as if it,
django-rest-framework/rest_framework/utils/field_mapping.py,32,is a Field instance when using ClassLookupDict.,
django-rest-framework/rest_framework/utils/field_mapping.py,73,The following will only be used by ModelField classes.,
django-rest-framework/rest_framework/utils/field_mapping.py,74,Gets removed for everything else.,
django-rest-framework/rest_framework/utils/field_mapping.py,99,"If this field is read-only, then return early.",
django-rest-framework/rest_framework/utils/field_mapping.py,100,Further keyword arguments are not valid.,
django-rest-framework/rest_framework/utils/field_mapping.py,134,"Ensure that max_value is passed explicitly as a keyword arg,",
django-rest-framework/rest_framework/utils/field_mapping.py,135,rather than as a validator.,
django-rest-framework/rest_framework/utils/field_mapping.py,147,"Ensure that min_value is passed explicitly as a keyword arg,",
django-rest-framework/rest_framework/utils/field_mapping.py,148,rather than as a validator.,
django-rest-framework/rest_framework/utils/field_mapping.py,160,"URLField does not need to include the URLValidator argument,",
django-rest-framework/rest_framework/utils/field_mapping.py,161,as it is explicitly added in.,
django-rest-framework/rest_framework/utils/field_mapping.py,168,"EmailField does not need to include the validate_email argument,",
django-rest-framework/rest_framework/utils/field_mapping.py,169,as it is explicitly added in.,
django-rest-framework/rest_framework/utils/field_mapping.py,176,"SlugField do not need to include the 'validate_slug' argument,",
django-rest-framework/rest_framework/utils/field_mapping.py,183,"IPAddressField do not need to include the 'validate_ipv46_address' argument,",
django-rest-framework/rest_framework/utils/field_mapping.py,189,"Our decimal validation is handled in the field code, not validator code.",
django-rest-framework/rest_framework/utils/field_mapping.py,196,"Ensure that max_length is passed explicitly as a keyword arg,",
django-rest-framework/rest_framework/utils/field_mapping.py,197,rather than as a validator.,
django-rest-framework/rest_framework/utils/field_mapping.py,206,"Ensure that min_length is passed explicitly as a keyword arg,",
django-rest-framework/rest_framework/utils/field_mapping.py,207,rather than as a validator.,
django-rest-framework/rest_framework/utils/field_mapping.py,273,"If this field is read-only, then return early.",
django-rest-framework/rest_framework/utils/field_mapping.py,274,No further keyword arguments are valid.,
django-rest-framework/rest_framework/utils/json.py,9,noqa,
django-rest-framework/rest_framework/utils/html.py,10,"MultiDict type datastructures are used to represent HTML form input,",
django-rest-framework/rest_framework/utils/html.py,11,which may have more than one value for each key.,
django-rest-framework/rest_framework/utils/html.py,65,"return the items of the ``ret`` dict, sorted by key, or ``default`` if the dict is empty",
django-rest-framework/rest_framework/utils/model_meta.py,11,Model field instance,
django-rest-framework/rest_framework/utils/model_meta.py,12,Dict of field name -> model field instance,
django-rest-framework/rest_framework/utils/model_meta.py,13,Dict of field name -> RelationInfo,
django-rest-framework/rest_framework/utils/model_meta.py,14,Dict of field name -> RelationInfo,
django-rest-framework/rest_framework/utils/model_meta.py,15,Shortcut for 'pk' + 'fields',
django-rest-framework/rest_framework/utils/model_meta.py,16,Shortcut for 'forward_relations' + 'reverse_relations',
django-rest-framework/rest_framework/utils/model_meta.py,53,"If model is a child via multi-table inheritance, use parent's pk.",
django-rest-framework/rest_framework/utils/model_meta.py,87,Deal with forward many-to-many relationships.,
django-rest-framework/rest_framework/utils/model_meta.py,93,manytomany do not have to_fields,
django-rest-framework/rest_framework/utils/model_meta.py,121,Deal with reverse many-to-many relationships.,
django-rest-framework/rest_framework/utils/model_meta.py,129,manytomany do not have to_fields,
django-rest-framework/rest_framework/utils/humanize_datetime.py,26,Note that we're missing some of the locale specific mappings that,
django-rest-framework/rest_framework/utils/humanize_datetime.py,27,don't really make sense.,
django-rest-framework/rest_framework/utils/humanize_datetime.py,36,Requires '%p' to differentiate from '%H'.,
django-rest-framework/rest_framework/utils/encoders.py,6,noqa,
django-rest-framework/rest_framework/utils/encoders.py,23,"For Date Time string spec, see ECMA 262",
django-rest-framework/rest_framework/utils/encoders.py,24,https://ecma-international.org/ecma-262/5.1/#sec-15.9.1.15,
django-rest-framework/rest_framework/utils/encoders.py,42,Serializers will coerce decimals to strings by default.,
django-rest-framework/rest_framework/utils/encoders.py,49,Best-effort for binary blobs. See #4187.,
django-rest-framework/rest_framework/utils/encoders.py,52,Numpy arrays and array scalars.,
django-rest-framework/rest_framework/authtoken/serializers.py,31,The authenticate call simply returns None for is_active=False,
django-rest-framework/rest_framework/authtoken/serializers.py,32,users. (Assuming the default ModelBackend authentication,
django-rest-framework/rest_framework/authtoken/serializers.py,33,backend.),
django-rest-framework/rest_framework/authtoken/models.py,21,Work around for a bug in Django:,
django-rest-framework/rest_framework/authtoken/models.py,22,https://code.djangoproject.com/ticket/19422,
django-rest-framework/rest_framework/authtoken/models.py,23,,
django-rest-framework/rest_framework/authtoken/models.py,24,Also see corresponding ticket:,
django-rest-framework/rest_framework/authtoken/models.py,25,https://github.com/encode/django-rest-framework/issues/705,
django-rest-framework/rest_framework/templatetags/rest_framework.py,17,Regex for adding classes to html snippets,
django-rest-framework/rest_framework/templatetags/rest_framework.py,241,"`{% for k, v in value.items %}` doesn't raise when value is None or",
django-rest-framework/rest_framework/templatetags/rest_framework.py,242,"not in the context, so neither should `{% for k, v in value|items %}`",
django-rest-framework/rest_framework/templatetags/rest_framework.py,266,this format is used in docs/js/api.js:normalizeKeys,
django-rest-framework/rest_framework/templatetags/rest_framework.py,293,Bunch of stuff cloned from urlize,
django-rest-framework/rest_framework/templatetags/rest_framework.py,337,"Unfortunately, Django built-in cannot be used here, because escaping",
django-rest-framework/rest_framework/templatetags/rest_framework.py,338,"is to be performed on words, which have been forcibly coerced to text",
django-rest-framework/rest_framework/templatetags/rest_framework.py,345,Deal with punctuation.,
django-rest-framework/rest_framework/templatetags/rest_framework.py,355,Keep parentheses at the end only if they're balanced.,
django-rest-framework/rest_framework/templatetags/rest_framework.py,363,Make URL we want to point to.,
django-rest-framework/rest_framework/templatetags/rest_framework.py,379,Make link.,
django-rest-framework/rest_framework/schemas/generators.py,30,Avoid import cycle on APIView,
django-rest-framework/rest_framework/schemas/generators.py,60,Use the default Django URL conf,
django-rest-framework/rest_framework/schemas/generators.py,63,Load the given URLconf module,
django-rest-framework/rest_framework/schemas/generators.py,104,???: Would it be feasible to adjust this such that we generate the,
django-rest-framework/rest_framework/schemas/generators.py,105,"path, plus the kwargs, plus the type from the convertor, such that we",
django-rest-framework/rest_framework/schemas/generators.py,106,could feed that straight into the parameter schema object?,
django-rest-framework/rest_framework/schemas/generators.py,110,Strip Django 2.0 convertors as they are incompatible with uritemplate format,
django-rest-framework/rest_framework/schemas/generators.py,118,Ignore anything except REST framework views.,
django-rest-framework/rest_framework/schemas/generators.py,128,Ignore .json style URLs.,
django-rest-framework/rest_framework/schemas/generators.py,149,"'pk' isn't great as an externally exposed name for an identifier,",
django-rest-framework/rest_framework/schemas/generators.py,150,so by default we prefer to use the actual model field name for schemas.,
django-rest-framework/rest_framework/schemas/generators.py,151,Set by 'SCHEMA_COERCE_PATH_PK'.,
django-rest-framework/rest_framework/schemas/openapi.py,30,Title and version are required by openapi specification 3.x,
django-rest-framework/rest_framework/schemas/openapi.py,74,Iterate endpoints generating per method path operations.,
django-rest-framework/rest_framework/schemas/openapi.py,92,Normalise path for any provided mount url.,
django-rest-framework/rest_framework/schemas/openapi.py,102,Compile final schema.,
django-rest-framework/rest_framework/schemas/openapi.py,116,View Inspectors,
django-rest-framework/rest_framework/schemas/openapi.py,172,use the serializer's class name as the component name.,
django-rest-framework/rest_framework/schemas/openapi.py,174,"We remove the ""serializer"" string from the class name.",
django-rest-framework/rest_framework/schemas/openapi.py,207,We capitalize the first letter of each component except the first one,
django-rest-framework/rest_framework/schemas/openapi.py,208,with the 'title' method and join them together.,
django-rest-framework/rest_framework/schemas/openapi.py,220,Try to deduce the ID from the view's model,
django-rest-framework/rest_framework/schemas/openapi.py,224,Try with the serializer class name,
django-rest-framework/rest_framework/schemas/openapi.py,230,Fallback to the view name,
django-rest-framework/rest_framework/schemas/openapi.py,238,"Due to camel-casing of classes and `action` being lowercase, apply title in order to find if action truly",
django-rest-framework/rest_framework/schemas/openapi.py,239,comes at the end of the name,
django-rest-framework/rest_framework/schemas/openapi.py,240,"ListView, UpdateAPIView, ThingDelete ...",
django-rest-framework/rest_framework/schemas/openapi.py,243,listThings instead of listThing,
django-rest-framework/rest_framework/schemas/openapi.py,275,TODO: test this.,
django-rest-framework/rest_framework/schemas/openapi.py,276,Attempt to infer a field description if possible.,
django-rest-framework/rest_framework/schemas/openapi.py,293,"TODO: integer, pattern, ...",
django-rest-framework/rest_framework/schemas/openapi.py,334,preserve order and remove duplicates,
django-rest-framework/rest_framework/schemas/openapi.py,339,`number` includes `integer`,
django-rest-framework/rest_framework/schemas/openapi.py,340,Ref: https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.21,
django-rest-framework/rest_framework/schemas/openapi.py,348,The value of `enum` keyword MUST be an array and SHOULD be unique.,
django-rest-framework/rest_framework/schemas/openapi.py,349,Ref: https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.20,
django-rest-framework/rest_framework/schemas/openapi.py,353,If We figured out `type` then and only then we should set it. It must be a string.,
django-rest-framework/rest_framework/schemas/openapi.py,354,Ref: https://swagger.io/docs/specification/data-models/data-types/#mixed-type,
django-rest-framework/rest_framework/schemas/openapi.py,355,It is optional but it can not be null.,
django-rest-framework/rest_framework/schemas/openapi.py,356,Ref: https://tools.ietf.org/html/draft-wright-json-schema-validation-00#section-5.21,
django-rest-framework/rest_framework/schemas/openapi.py,363,"Nested Serializers, `many` or not.",
django-rest-framework/rest_framework/schemas/openapi.py,374,Related fields.,
django-rest-framework/rest_framework/schemas/openapi.py,387,ChoiceFields (single and multiple).,
django-rest-framework/rest_framework/schemas/openapi.py,388,Q:,
django-rest-framework/rest_framework/schemas/openapi.py,389,- Is 'type' required?,
django-rest-framework/rest_framework/schemas/openapi.py,390,- can we determine the TYPE of a choicefield?,
django-rest-framework/rest_framework/schemas/openapi.py,400,ListField.,
django-rest-framework/rest_framework/schemas/openapi.py,410,DateField and DateTimeField type is string,
django-rest-framework/rest_framework/schemas/openapi.py,423,"""Formats such as ""email"", ""uuid"", and so on, MAY be used even though undefined by this specification.""",
django-rest-framework/rest_framework/schemas/openapi.py,424,see: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types,
django-rest-framework/rest_framework/schemas/openapi.py,425,see also: https://swagger.io/docs/specification/data-models/data-types/#string,
django-rest-framework/rest_framework/schemas/openapi.py,483,"2147483647 is max for int32_size, so we use int64 for format",
django-rest-framework/rest_framework/schemas/openapi.py,494,"Simplest cases, default to 'string' type:",
django-rest-framework/rest_framework/schemas/openapi.py,510,Assuming we have a valid serializer instance.,
django-rest-framework/rest_framework/schemas/openapi.py,550,"""Formats such as ""email"", ""uuid"", and so on, MAY be used even though undefined by this specification.""",
django-rest-framework/rest_framework/schemas/openapi.py,551,https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#data-types,
django-rest-framework/rest_framework/schemas/openapi.py,595,BrowsableAPIRenderer not relevant to OpenAPI spec,
django-rest-framework/rest_framework/schemas/openapi.py,673,"description is a mandatory property,",
django-rest-framework/rest_framework/schemas/openapi.py,674,https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#responseObject,
django-rest-framework/rest_framework/schemas/openapi.py,675,TODO: put something meaningful into it,
django-rest-framework/rest_framework/schemas/openapi.py,681,"If user have specified tags, use them.",
django-rest-framework/rest_framework/schemas/openapi.py,685,First element of a specific path could be valid tag. This is a fallback solution.,
django-rest-framework/rest_framework/schemas/openapi.py,686,"PUT, PATCH, GET(Retrieve), DELETE:        /user_profile/{id}/       tags = [user-profile]",
django-rest-framework/rest_framework/schemas/openapi.py,687,"POST, GET(List):                          /user_profile/            tags = [user-profile]",
django-rest-framework/rest_framework/schemas/inspectors.py,22,Used in _get_description_section(),
django-rest-framework/rest_framework/schemas/inspectors.py,84,An explicit docstring on the method or action.,
django-rest-framework/rest_framework/schemas/inspectors.py,102,TODO: SCHEMA_COERCE_METHOD_NAMES appears here and in `SchemaGenerator.get_keys`,
django-rest-framework/rest_framework/schemas/views.py,15,exclude from schema,
django-rest-framework/rest_framework/schemas/views.py,43,"Schema renderers do not render exceptions, so re-perform content",
django-rest-framework/rest_framework/schemas/views.py,44,negotiation with default renderers.,
django-rest-framework/rest_framework/schemas/utils.py,17,"Viewsets have an explicitly defined action, which we can inspect.",
django-rest-framework/rest_framework/schemas/coreapi.py,105,Map HTTP methods onto actions.,
django-rest-framework/rest_framework/schemas/coreapi.py,114,Map the method names we use for viewset actions onto external schema names.,
django-rest-framework/rest_framework/schemas/coreapi.py,115,These give us names that are more suitable for the external representation.,
django-rest-framework/rest_framework/schemas/coreapi.py,116,Set by 'SCHEMA_COERCE_METHOD_NAMES'.,
django-rest-framework/rest_framework/schemas/coreapi.py,135,Only generate the path prefix for paths that will be included,
django-rest-framework/rest_framework/schemas/coreapi.py,170,Method for generating the link layout....,
django-rest-framework/rest_framework/schemas/coreapi.py,184,Viewsets have explicitly named actions.,
django-rest-framework/rest_framework/schemas/coreapi.py,187,"Views have no associated action, so we determine one from the method.",
django-rest-framework/rest_framework/schemas/coreapi.py,200,"Custom action, eg ""/users/{pk}/activate/"", ""/users/active/""",
django-rest-framework/rest_framework/schemas/coreapi.py,212,"Default action, eg ""/users/"", ""/users/{pk}/""",
django-rest-framework/rest_framework/schemas/coreapi.py,240,We can just break early in the case that there's at least,
django-rest-framework/rest_framework/schemas/coreapi.py,241,one URL that doesn't have a path prefix.,
django-rest-framework/rest_framework/schemas/coreapi.py,246,View Inspectors,
django-rest-framework/rest_framework/schemas/coreapi.py,407,Attempt to infer a field description if possible.,
django-rest-framework/rest_framework/schemas/coreapi.py,560,Core API supports the following request encodings over HTTP...,
django-rest-framework/rest_framework/schemas/coreapi.py,571,"Raw binary uploads are supported with ""application/octet-stream""",
django-rest-framework/rest_framework/schemas/__init__.py,26,noqa,
django-rest-framework/rest_framework/schemas/__init__.py,27,noqa,
django-rest-framework/rest_framework/schemas/__init__.py,50,Avoid import cycle on APIView,
django-rest-framework/tests/test_validators.py,19,Tests for `UniqueValidator`,
django-rest-framework/tests/test_validators.py,20,---------------------------,
django-rest-framework/tests/test_validators.py,39,NOQA,
django-rest-framework/tests/test_validators.py,61,Note that this field *deliberately* does not correspond with the model field.,
django-rest-framework/tests/test_validators.py,62,"This allows us to ensure that `ValueError`, `TypeError` or `DataError` etc",
django-rest-framework/tests/test_validators.py,63,"raised by a uniqueness check does not trigger a deceptive ""this field is not unique""",
django-rest-framework/tests/test_validators.py,64,validation failure.,
django-rest-framework/tests/test_validators.py,104,Accessing data shouldn't effect validators on the model,
django-rest-framework/tests/test_validators.py,122,Tests for `UniqueTogetherValidator`,
django-rest-framework/tests/test_validators.py,123,-----------------------------------,
django-rest-framework/tests/test_validators.py,146,Not part of the uniqueness constraint,
django-rest-framework/tests/test_validators.py,338,"Validation error should use seriazlier field name, not source",
django-rest-framework/tests/test_validators.py,367,None values that are on fields which are part of the uniqueness,
django-rest-framework/tests/test_validators.py,368,constraint cause the instance to ignore uniqueness validation.,
django-rest-framework/tests/test_validators.py,383,None values that are not on fields part of the uniqueness constraint,
django-rest-framework/tests/test_validators.py,384,do not cause the instance to skip validation.,
django-rest-framework/tests/test_validators.py,412,Tests for `UniqueForDateValidator`,
django-rest-framework/tests/test_validators.py,413,----------------------------------,
django-rest-framework/tests/test_validators.py,481,Tests for `UniqueForMonthValidator`,
django-rest-framework/tests/test_validators.py,482,----------------------------------,
django-rest-framework/tests/test_validators.py,520,Tests for `UniqueForYearValidator`,
django-rest-framework/tests/test_validators.py,521,----------------------------------,
django-rest-framework/tests/test_viewsets.py,228,"""Unresolvable detail action"" excluded, since it's not resolvable",
django-rest-framework/tests/test_viewsets.py,237,Action 'name' and 'suffix' kwargs should be respected,
django-rest-framework/tests/test_viewsets.py,283,Passing the view's request object should result in an absolute URL.,
django-rest-framework/tests/test_viewsets.py,286,Users should be able to explicitly not pass the view's request.,
django-rest-framework/tests/test_fields.py,21,Tests for helper functions.,
django-rest-framework/tests/test_fields.py,22,---------------------------,
django-rest-framework/tests/test_fields.py,47,unbound methods,
django-rest-framework/tests/test_fields.py,53,bound methods,
django-rest-framework/tests/test_fields.py,92,"Built-in function signatures are not easily inspectable, so the",
django-rest-framework/tests/test_fields.py,93,current expectation is to just raise a helpful error message.,
django-rest-framework/tests/test_fields.py,104,The annotation will otherwise raise a syntax error in python < 3.5,
django-rest-framework/tests/test_fields.py,112,Tests for field keyword arguments and core functionality.,
django-rest-framework/tests/test_fields.py,113,---------------------------------------------------------,
django-rest-framework/tests/test_fields.py,591,Tests for field input and output values.,
django-rest-framework/tests/test_fields.py,592,----------------------------------------,
django-rest-framework/tests/test_fields.py,595,"Tests accept either lists of two tuples, or dictionaries.",
django-rest-framework/tests/test_fields.py,597,{value: expected},
django-rest-framework/tests/test_fields.py,599,"[(value, expected), ...]",
django-rest-framework/tests/test_fields.py,631,Boolean types...,
django-rest-framework/tests/test_fields.py,714,String types...,
django-rest-framework/tests/test_fields.py,982,Number types...,
django-rest-framework/tests/test_fields.py,1236,Date & time serializers...,
django-rest-framework/tests/test_fields.py,1389,"use class setup method, as class-level attribute will still be evaluated even if test is skipped",
django-rest-framework/tests/test_fields.py,1570,Choice types...,
django-rest-framework/tests/test_fields.py,1828,File serializers...,
django-rest-framework/tests/test_fields.py,1882,Stub out mock Django `forms.ImageField` class so we don't *actually*,
django-rest-framework/tests/test_fields.py,1883,"call into it's regular validation, or require PIL for testing.",
django-rest-framework/tests/test_fields.py,1923,Composite serializers...,
django-rest-framework/tests/test_fields.py,2222,Tests for FileField.,
django-rest-framework/tests/test_fields.py,2223,--------------------,
django-rest-framework/tests/test_fields.py,2239,Tests for SerializerMethodField.,
django-rest-framework/tests/test_fields.py,2240,--------------------------------,
django-rest-framework/tests/test_fields.py,2256,"Prior to v3.10, redundant method names were not allowed.",
django-rest-framework/tests/test_fields.py,2257,This restriction has since been removed.,
django-rest-framework/tests/test_fields.py,2265,Tests for ModelField.,
django-rest-framework/tests/test_fields.py,2266,---------------------,
django-rest-framework/tests/test_fields.py,2277,Tests for validation errors,
django-rest-framework/tests/test_fields.py,2278,---------------------------,
django-rest-framework/tests/test_relations_pk.py,13,ManyToMany,
django-rest-framework/tests/test_relations_pk.py,26,ForeignKey,
django-rest-framework/tests/test_relations_pk.py,45,Nullable ForeignKey,
django-rest-framework/tests/test_relations_pk.py,52,Nullable UUIDForeignKey,
django-rest-framework/tests/test_relations_pk.py,64,Nullable OneToOne,
django-rest-framework/tests/test_relations_pk.py,78,TODO: Add test that .data cannot be accessed prior to .is_valid,
django-rest-framework/tests/test_relations_pk.py,126,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,144,"Ensure target 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,162,"Ensure source 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,179,no query if source hasn't been created yet,
django-rest-framework/tests/test_relations_pk.py,191,"Ensure target 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,248,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,270,We shouldn't have saved anything to the db yet since save,
django-rest-framework/tests/test_relations_pk.py,271,hasn't been called.,
django-rest-framework/tests/test_relations_pk.py,283,"Ensure target 2 is update, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,300,"Ensure source 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,319,"Ensure target 3 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,342,no query if source hasn't been created yet,
django-rest-framework/tests/test_relations_pk.py,420,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,444,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,463,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,486,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_pk.py,530,Given: Some target models already exist,
django-rest-framework/tests/test_relations_pk.py,537,When: Creating a Source pointing at the id of the second Target,
django-rest-framework/tests/test_relations_pk.py,540,Then: The source is valid with the serializer,
django-rest-framework/tests/test_relations_pk.py,543,Then: Saving the serializer creates a new object,
django-rest-framework/tests/test_relations_pk.py,545,Then: The new object has the same pk as the target object,
django-rest-framework/tests/test_relations_pk.py,549,When: Creating a Source pointing at the id of the second Target,
django-rest-framework/tests/test_relations_pk.py,553,Then: The source is valid with the serializer,
django-rest-framework/tests/test_relations_pk.py,555,Then: Saving the serializer creates a new object,
django-rest-framework/tests/test_relations_pk.py,557,Then: The new object has the same pk as the target object,
django-rest-framework/tests/test_relations_pk.py,559,When: Trying to create a second object,
django-rest-framework/tests/test_relations_pk.py,566,Given: a target PK that does not exist,
django-rest-framework/tests/test_relations_pk.py,569,Then: The source is not valid with the serializer,
django-rest-framework/tests/test_htmlrenderer.py,94,2 tests below are based on order of if statements in corresponding method,
django-rest-framework/tests/test_htmlrenderer.py,95,of TemplateHTMLRenderer,
django-rest-framework/tests/test_model_serializer.py,35,Tests for regular field mappings.,
django-rest-framework/tests/test_model_serializer.py,36,---------------------------------,
django-rest-framework/tests/test_model_serializer.py,219,merge this into test_regular_fields / RegularFieldsModel when,
django-rest-framework/tests/test_model_serializer.py,220,Django 2.1 is the minimum supported version,
django-rest-framework/tests/test_model_serializer.py,477,Tests for relational field mappings.,
django-rest-framework/tests/test_model_serializer.py,478,------------------------------------,
django-rest-framework/tests/test_model_serializer.py,811,Serializer should validate okay.,
django-rest-framework/tests/test_model_serializer.py,815,"Creating the instance, relationship attributes should be set.",
django-rest-framework/tests/test_model_serializer.py,826,Representation should be correct.,
django-rest-framework/tests/test_model_serializer.py,859,Serializer should validate okay.,
django-rest-framework/tests/test_model_serializer.py,863,"Creating the instance, relationship attributes should be set.",
django-rest-framework/tests/test_model_serializer.py,874,Representation should be correct.,
django-rest-framework/tests/test_model_serializer.py,885,Tests for bulk create using `ListSerializer`.,
django-rest-framework/tests/test_model_serializer.py,905,Objects are returned by save().,
django-rest-framework/tests/test_model_serializer.py,910,Objects have been created in the database.,
django-rest-framework/tests/test_model_serializer.py,914,Serializer returns correct data.,
django-rest-framework/tests/test_generics.py,18,Models,
django-rest-framework/tests/test_generics.py,24,Model for regression test for #285,
django-rest-framework/tests/test_generics.py,31,Serializers,
django-rest-framework/tests/test_generics.py,52,Views,
django-rest-framework/tests/test_generics.py,77,Tests,
django-rest-framework/tests/test_generics.py,378,Regression test for #285,
django-rest-framework/tests/test_generics.py,410,Test for particularly ugly regression with m2m in browsable API,
django-rest-framework/tests/test_request.py,169,sanity check that file was processed,
django-rest-framework/tests/test_request.py,202,Pass request object through session middleware so session is,
django-rest-framework/tests/test_request.py,203,available to login and logout functions,
django-rest-framework/tests/test_request.py,241,"The middleware processes the underlying Django request, sets anonymous user",
django-rest-framework/tests/test_request.py,244,The DRF request object does not have a user and should run authenticators,
django-rest-framework/tests/test_request.py,294,ensure the exception message is not for the underlying WSGIRequest,
django-rest-framework/tests/test_request.py,311,ensure that request stream was consumed by json parser,
django-rest-framework/tests/test_request.py,315,"pass same HttpRequest to view, stream already consumed",
django-rest-framework/tests/test_request.py,330,ensure that request stream was consumed by form parser,
django-rest-framework/tests/test_request.py,334,"pass same HttpRequest to view, form data set on underlying request",
django-rest-framework/tests/test_request.py,338,ensure that request stream was consumed by form parser,
django-rest-framework/tests/test_serializer_nested.py,226,"request is empty, therefor 'nested' should not be in serializer.data",
django-rest-framework/tests/test_serializer_nested.py,236,leave querydict empty,
django-rest-framework/tests/test_serializer_nested.py,240,"the querydict is empty, therefor 'nested' should not be in serializer.data",
django-rest-framework/tests/test_serializer_nested.py,260,tests for rests_framework.serializers.raise_errors_on_nested_writes,
django-rest-framework/tests/test_relations_slug.py,44,"TODO: M2M Tests, FKTests (Non-nullable), One2One",
django-rest-framework/tests/test_relations_slug.py,95,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,117,We shouldn't have saved anything to the db yet since save,
django-rest-framework/tests/test_relations_slug.py,118,hasn't been called.,
django-rest-framework/tests/test_relations_slug.py,130,"Ensure target 2 is update, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,148,"Ensure source 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,167,"Ensure target 3 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,213,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,237,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,256,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_slug.py,279,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_validation.py,13,Regression for #666,
django-rest-framework/tests/test_validation.py,31,Regression for #653,
django-rest-framework/tests/test_validation.py,73,"We've set `required=False` on the serializer, but the model",
django-rest-framework/tests/test_validation.py,74,"does not have `blank=True`, so this serializer should not validate.",
django-rest-framework/tests/test_validation.py,117,regression tests for issue: 1493,
django-rest-framework/tests/test_validation.py,165,regression tests for issue: 1533,
django-rest-framework/tests/test_utils.py,207,Encoded string: '查询',
django-rest-framework/tests/test_utils.py,226,Encoded string: '��<script>alert(313)</script>=1',
django-rest-framework/tests/conftest.py,40,We want template errors to raise,
django-rest-framework/tests/conftest.py,69,guardian is optional,
django-rest-framework/tests/conftest.py,70,Note that for the test cases we're installing a version of django-guardian,
django-rest-framework/tests/conftest.py,71,that's only compatible with Django 2.0+.,
django-rest-framework/tests/conftest.py,74,NOQA,
django-rest-framework/tests/conftest.py,90,import rest_framework before pytest re-adds the package root directory.,
django-rest-framework/tests/conftest.py,95,"Manifest storage will raise an exception if static files are not present (ie, a packaging failure).",
django-rest-framework/tests/test_permissions.py,236,"Faulty `get_queryset()` methods should trigger the above ""view does not have a queryset"" assertion.",
django-rest-framework/tests/test_permissions.py,256,"add, change, delete built in to django",
django-rest-framework/tests/test_permissions.py,266,"Custom object-level permission, that includes 'view' permissions",
django-rest-framework/tests/test_permissions.py,319,create users,
django-rest-framework/tests/test_permissions.py,328,"give everyone model level permissions, as we are not testing those",
django-rest-framework/tests/test_permissions.py,343,appropriate object level permissions,
django-rest-framework/tests/test_permissions.py,362,Delete,
django-rest-framework/tests/test_permissions.py,373,Update,
django-rest-framework/tests/test_permissions.py,399,Read,
django-rest-framework/tests/test_permissions.py,419,Read list,
django-rest-framework/tests/test_permissions.py,420,"Note: this previously tested `DjangoObjectPermissionsFilter`, which has",
django-rest-framework/tests/test_permissions.py,421,since been moved to a separate package. These now act as sanity checks.,
django-rest-framework/tests/test_testing.py,87,First request does not yet have an active session,
django-rest-framework/tests/test_testing.py,91,Subsequent requests have an active session,
django-rest-framework/tests/test_testing.py,95,Force authenticating as `None` should also logout the user session.,
django-rest-framework/tests/test_testing.py,252,This is a 1x1 black png,
django-rest-framework/tests/test_testing.py,308,sanity test to ensure that this test module does not have a '/' route,
django-rest-framework/tests/test_decorators.py,195,All HTTP methods should be mappable,
django-rest-framework/tests/test_decorators.py,207,ensure the mapping returns the correct method name,
django-rest-framework/tests/test_decorators.py,216,"by default, generate name from method",
django-rest-framework/tests/test_decorators.py,226,name kwarg supersedes name generation,
django-rest-framework/tests/test_decorators.py,236,suffix kwarg supersedes name generation,
django-rest-framework/tests/test_decorators.py,246,name + suffix is a conflict.,
django-rest-framework/tests/test_decorators.py,261,The secondary handler methods should not have the action attributes,
django-rest-framework/tests/test_templatetags.py,30,Ensure we don't double-escape non-latin characters,
django-rest-framework/tests/test_templatetags.py,31,that are present in the querystring.,
django-rest-framework/tests/test_templatetags.py,32,See #1314.,
django-rest-framework/tests/test_templatetags.py,270,"example from issue #1386, this shouldn't raise an exception",
django-rest-framework/tests/test_routers.py,129,Get action routes (first two are list/detail),
django-rest-framework/tests/test_routers.py,150,Standard action,
django-rest-framework/tests/test_routers.py,154,Additional handler registered with MethodMapper,
django-rest-framework/tests/test_routers.py,160,list and detail,
django-rest-framework/tests/test_routers.py,399,Make sure all these endpoints exist and none have been clobbered,
django-rest-framework/tests/test_routers.py,408,check url listing,
django-rest-framework/tests/test_routers.py,416,check method to function mapping,
django-rest-framework/tests/test_middleware.py,44,Parse body with underlying Django request,
django-rest-framework/tests/test_middleware.py,47,Process request with DRF view,
django-rest-framework/tests/test_middleware.py,50,Ensure request.POST is set as appropriate,
django-rest-framework/tests/test_filters.py,21,"mock it, because not None value needed",
django-rest-framework/tests/test_filters.py,53,Sequence of title/text is:,
django-rest-framework/tests/test_filters.py,54,,
django-rest-framework/tests/test_filters.py,55,z   abc,
django-rest-framework/tests/test_filters.py,56,zz  bcd,
django-rest-framework/tests/test_filters.py,57,zzz cde,
django-rest-framework/tests/test_filters.py,58,...,
django-rest-framework/tests/test_filters.py,160,Filter that dynamically changes search fields,
django-rest-framework/tests/test_filters.py,224,In this test case the attribute of the fk model comes first in the,
django-rest-framework/tests/test_filters.py,225,list of search fields.,
django-rest-framework/tests/test_filters.py,249,Sequence of title/text/attributes is:,
django-rest-framework/tests/test_filters.py,250,,
django-rest-framework/tests/test_filters.py,251,"z   abc [1, 2, 3]",
django-rest-framework/tests/test_filters.py,252,"zz  bcd [1, 2, 3]",
django-rest-framework/tests/test_filters.py,253,"zzz cde [1, 2, 3]",
django-rest-framework/tests/test_filters.py,254,...,
django-rest-framework/tests/test_filters.py,319,Multiple entries on Lennon published in 1979 - distinct should deduplicate,
django-rest-framework/tests/test_filters.py,323,Entry on Lennon *and* a separate entry in 1979 - should not match,
django-rest-framework/tests/test_filters.py,417,Sequence of title/text is:,
django-rest-framework/tests/test_filters.py,418,,
django-rest-framework/tests/test_filters.py,419,zyx abc,
django-rest-framework/tests/test_filters.py,420,yxw bcd,
django-rest-framework/tests/test_filters.py,421,xwv cde,
django-rest-framework/tests/test_filters.py,538,create some related models to aggregate order by,
django-rest-framework/tests/test_filters.py,636,note: no ordering_fields and serializer_class specified,
django-rest-framework/tests/test_filters.py,655,note: no ordering_fields and serializer_class,
django-rest-framework/tests/test_filters.py,656,or get_serializer_class specified,
django-rest-framework/tests/test_filters.py,669,Three different styles of serializer.,
django-rest-framework/tests/test_filters.py,670,"All should allow ordering by username, but not by password.",
django-rest-framework/tests/test_filters.py,723,Note: Inverse username ordering correctly applied.,
django-rest-framework/tests/test_filters.py,750,Note: The passwords are not in order.  Default ordering is used.,
django-rest-framework/tests/test_filters.py,752,PassB,
django-rest-framework/tests/test_filters.py,753,PassC,
django-rest-framework/tests/test_filters.py,754,PassA,
django-rest-framework/tests/test_relations_hyperlink.py,12,Just to ensure we have a request in the serializer context,
django-rest-framework/tests/test_relations_hyperlink.py,31,ManyToMany,
django-rest-framework/tests/test_relations_hyperlink.py,44,ForeignKey,
django-rest-framework/tests/test_relations_hyperlink.py,57,Nullable ForeignKey,
django-rest-framework/tests/test_relations_hyperlink.py,64,Nullable OneToOne,
django-rest-framework/tests/test_relations_hyperlink.py,71,TODO: Add test that .data cannot be accessed prior to .is_valid,
django-rest-framework/tests/test_relations_hyperlink.py,130,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,147,"Ensure target 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,166,"Ensure source 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,185,"Ensure target 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,237,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,259,We shouldn't have saved anything to the db yet since save,
django-rest-framework/tests/test_relations_hyperlink.py,260,hasn't been called.,
django-rest-framework/tests/test_relations_hyperlink.py,272,"Ensure target 2 is update, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,289,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,308,"Ensure target 4 is added, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,355,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,379,"Ensure source 4 is created, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,398,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_relations_hyperlink.py,421,"Ensure source 1 is updated, and everything else is as expected",
django-rest-framework/tests/test_urlpatterns.py,12,A container class for test paths for the test case,
django-rest-framework/tests/test_urlpatterns.py,182,parent url() nesting child path(),
django-rest-framework/tests/test_urlpatterns.py,187,parent path() nesting child url(),
django-rest-framework/tests/test_urlpatterns.py,192,parent path() nesting child path(),
django-rest-framework/tests/test_urlpatterns.py,197,parent url() nesting child url(),
django-rest-framework/tests/test_parsers.py,134,Default to strict,
django-rest-framework/tests/test_multitable_inheritance.py,8,Models,
django-rest-framework/tests/test_multitable_inheritance.py,22,Serializers,
django-rest-framework/tests/test_multitable_inheritance.py,35,Tests,
django-rest-framework/tests/test_atomic_requests.py,94,1 - begin savepoint,
django-rest-framework/tests/test_atomic_requests.py,95,2 - insert,
django-rest-framework/tests/test_atomic_requests.py,96,3 - release savepoint,
django-rest-framework/tests/test_atomic_requests.py,122,1 - begin savepoint,
django-rest-framework/tests/test_atomic_requests.py,123,2 - insert,
django-rest-framework/tests/test_atomic_requests.py,124,3 - rollback savepoint,
django-rest-framework/tests/test_atomic_requests.py,125,4 - release savepoint,
django-rest-framework/tests/test_atomic_requests.py,148,without checking connection.in_atomic_block view raises 500,
django-rest-framework/tests/test_atomic_requests.py,149,due attempt to rollback without transaction,
django-rest-framework/tests/test_pagination.py,303,override the count in our overridden Django Paginator,
django-rest-framework/tests/test_pagination.py,304,"we will only return one page, with one item",
django-rest-framework/tests/test_pagination.py,647,Paging artifact,
django-rest-framework/tests/test_pagination.py,673,Paging artifact,
django-rest-framework/tests/test_pagination.py,696,Regression test for #6504,
django-rest-framework/tests/test_pagination.py,699,"We have a cursor on the element at position 100, but this element doesn't exist",
django-rest-framework/tests/test_pagination.py,700,anymore.,
django-rest-framework/tests/test_pagination.py,705,Loading the page with this cursor doesn't crash,
django-rest-framework/tests/test_pagination.py,708,The previous url doesn't crash either,
django-rest-framework/tests/test_pagination.py,711,And point to things that are not completely off.,
django-rest-framework/tests/test_pagination.py,719,Regression test for #6504,
django-rest-framework/tests/test_pagination.py,722,"We have a cursor on the element at position 100, but this element doesn't exist",
django-rest-framework/tests/test_pagination.py,723,anymore.,
django-rest-framework/tests/test_pagination.py,728,Loading the page with this cursor doesn't crash,
django-rest-framework/tests/test_pagination.py,731,The previous url doesn't crash either,
django-rest-framework/tests/test_pagination.py,734,And point to things that are not completely off.,
django-rest-framework/tests/test_pagination.py,786,Paging artifact,
django-rest-framework/tests/test_pagination.py,812,Paging artifact,
django-rest-framework/tests/test_pagination.py,853,Paging artifact,
django-rest-framework/tests/test_pagination.py,879,Paging artifact,
django-rest-framework/tests/test_pagination.py,1079,"At five pages or less, all pages are displayed, always.",
django-rest-framework/tests/test_pagination.py,1086,Between six and either pages we may have a single page break.,
django-rest-framework/tests/test_pagination.py,1111,"At nine or more pages we may have two page breaks, one on each side.",
django-rest-framework/tests/test_serializer.py,19,Test serializer fields imports.,
django-rest-framework/tests/test_serializer.py,20,-------------------------------,
django-rest-framework/tests/test_serializer.py,37,sanity check,
django-rest-framework/tests/test_serializer.py,52,sanity check,
django-rest-framework/tests/test_serializer.py,59,Tests for core functionality.,
django-rest-framework/tests/test_serializer.py,60,-----------------------------,
django-rest-framework/tests/test_serializer.py,158,Declares a serializer that converts data into an object,
django-rest-framework/tests/test_serializer.py,345,nullable nested serializer testing,
django-rest-framework/tests/test_serializer.py,349,nullable custom field testing,
django-rest-framework/tests/test_serializer.py,380,validation should fail (but not error) since nested fields are required,
django-rest-framework/tests/test_serializer.py,394,validation should pass since no internal validation,
django-rest-framework/tests/test_serializer.py,401,validation should pass since no internal validation,
django-rest-framework/tests/test_serializer.py,520,Same test using model objects to exercise both paths in,
django-rest-framework/tests/test_serializer.py,521,rest_framework.fields.get_attribute() (#5880),
django-rest-framework/tests/test_serializer.py,558,allow_null=True should imply default=None when serializing:,
django-rest-framework/tests/test_serializer.py,624,.context should not cache,
django-rest-framework/tests/test_serializer.py,665,Declaratively setting a field on a child class will *not* prevent,
django-rest-framework/tests/test_serializer.py,666,the ModelSerializer from generating a default field.,
django-rest-framework/tests/test_serializer.py,725,`IntegerField`s should be the 'winners' in field name conflicts,
django-rest-framework/tests/test_serializer.py,726,- `TestSerializer.f2` should override `Base.F2`,
django-rest-framework/tests/test_serializer.py,727,- `A.f3` should override `B.f3`,
django-rest-framework/tests/test_relations.py,43,"The default is 1,000, so sans settings it should be 1,000 plus one.",
django-rest-framework/tests/test_relations.py,58,2 real items plus the 'Cut Off' item.,
django-rest-framework/tests/test_relations.py,62,"Setting it to None should mean no limit; the default limit is 1,000.",
django-rest-framework/tests/test_relations.py,72,The explicit argument should override the settings.,
django-rest-framework/tests/test_one_to_one_with_inheritance.py,6,Models,
django-rest-framework/tests/test_one_to_one_with_inheritance.py,10,Regression test for #4290,
django-rest-framework/tests/test_one_to_one_with_inheritance.py,16,Serializers,
django-rest-framework/tests/test_one_to_one_with_inheritance.py,30,Tests,
django-rest-framework/tests/models.py,25,Models for relations tests,
django-rest-framework/tests/models.py,26,ManyToMany,
django-rest-framework/tests/models.py,36,ForeignKey,
django-rest-framework/tests/models.py,67,Nullable ForeignKey,
django-rest-framework/tests/models.py,95,OneToOne,
django-rest-framework/tests/test_exceptions.py,90,this test largely acts as a sanity test to ensure the translation files are present.,
django-rest-framework/tests/test_renderers.py,44,Generator,
django-rest-framework/tests/test_renderers.py,365,Default to strict,
django-rest-framework/tests/test_renderers.py,382,Fix failing test case which depends on version of JSON library.,
django-rest-framework/tests/test_renderers.py,406,"The \u2028 and \u2029 characters should be escaped,",
django-rest-framework/tests/test_renderers.py,407,even when the non-escaping unicode representation is used.,
django-rest-framework/tests/test_renderers.py,408,Regression test for #2169,
django-rest-framework/tests/test_renderers.py,428,"Tests for caching issue, #346",
django-rest-framework/tests/test_renderers.py,748,get the view instance instead of the view function,
django-rest-framework/tests/test_renderers.py,763,get the view instance instead of the view function,
django-rest-framework/tests/test_renderers.py,781,get the view instance instead of the view function,
django-rest-framework/tests/test_throttling.py,109,Advance the timer by one second,
django-rest-framework/tests/test_throttling.py,143,At this point our client made 4 requests (one was throttled) in a,
django-rest-framework/tests/test_throttling.py,144,"second. If we advance the timer by one additional second, the client",
django-rest-framework/tests/test_throttling.py,145,should be allowed to make 2 more before being throttled by the 2nd,
django-rest-framework/tests/test_throttling.py,146,"throttle class, which has a limit of 6 per minute.",
django-rest-framework/tests/test_throttling.py,156,Just to make sure check again after two more seconds.,
django-rest-framework/tests/test_throttling.py,180,reset,
django-rest-framework/tests/test_throttling.py,302,Should be able to hit x view 3 times per minute.,
django-rest-framework/tests/test_throttling.py,317,Should be able to hit y view 1 time per minute.,
django-rest-framework/tests/test_throttling.py,326,Ensure throttles properly reset by advancing the rest of the minute,
django-rest-framework/tests/test_throttling.py,329,Should still be able to hit x view 3 times per minute.,
django-rest-framework/tests/test_throttling.py,345,Should still be able to hit y view 1 time per minute.,
django-rest-framework/tests/test_serializer_lists.py,496,data_1,
django-rest-framework/tests/test_serializer_lists.py,503,data_2,
django-rest-framework/tests/test_serializer_lists.py,567,data_1,
django-rest-framework/tests/test_serializer_lists.py,572,data_2,
django-rest-framework/tests/test_serializer_lists.py,595,pass an empty array to the serializer,
django-rest-framework/tests/test_serializer_lists.py,604,"pass an ""empty"" QueryDict to the serializer (should be the same as an empty array)",
django-rest-framework/tests/test_templates.py,13,"base.html should be renderable with no context,",
django-rest-framework/tests/test_templates.py,14,so it can be easily extended.,
django-rest-framework/tests/test_templates.py,16,note that this response will not include a valid CSRF token,
django-rest-framework/tests/test_description.py,7,We check that docstrings get nicely un-indented.,
django-rest-framework/tests/test_description.py,31,If markdown is installed we also test it's working,
django-rest-framework/tests/test_description.py,32,(and that our wrapped forces '=' to h2 and '-' to h3),
django-rest-framework/tests/test_description.py,50,We support markdown < 2.1 and markdown >= 2.1,
django-rest-framework/tests/test_description.py,153,use a mock object instead of gettext_lazy to ensure that we can't end,
django-rest-framework/tests/test_description.py,154,up with a test case string in our l10n catalog,
django-rest-framework/tests/test_api_client.py,70,"Return query params in a plain dict, using a list value if more",
django-rest-framework/tests/test_api_client.py,71,than one item is present for a given key.,
django-rest-framework/tests/test_api_client.py,82,"Coerce multidict into regular dict, and remove files to",
django-rest-framework/tests/test_api_client.py,83,make assertions simpler.,
django-rest-framework/tests/test_api_client.py,85,Use a list value if a QueryDict contains multiple items for a key.,
django-rest-framework/tests/test_api_client.py,294,"When no file is included, multipart encoding should still be used.",
django-rest-framework/tests/test_api_client.py,325,Test for `coreapi.utils.File` support.,
django-rest-framework/tests/test_api_client.py,361,URLencoded,
django-rest-framework/tests/test_api_client.py,402,Raw uploads,
django-rest-framework/tests/test_api_client.py,455,Responses,
django-rest-framework/tests/test_response.py,14,Serializer used to test BasicModel,
django-rest-framework/tests/test_response.py,132,"TODO: Clean tests bellow - remove duplicates with above, better unit testing, ...",
django-rest-framework/tests/test_response.py,245,"self.assertContains(resp, 'Text comes here')",
django-rest-framework/tests/test_response.py,246,"self.assertContains(resp, 'Text description.')",
django-rest-framework/tests/test_response.py,284,"self.assertContains(resp, 'Text comes here')",
django-rest-framework/tests/test_response.py,285,"self.assertContains(resp, 'Text description.')",
django-rest-framework/tests/test_requests_client.py,219,Confirm session is not authenticated,
django-rest-framework/tests/test_requests_client.py,235,Perform a login,
django-rest-framework/tests/test_requests_client.py,247,Confirm session is authenticated,
django-rest-framework/tests/authentication/test_authentication.py,124,regression test for issue in 'rest_framework.authentication.BasicAuthentication.authenticate',
django-rest-framework/tests/authentication/test_authentication.py,125,https://github.com/encode/django-rest-framework/issues/4089,
django-rest-framework/tests/authentication/test_authentication.py,225,Set the csrf_token cookie so that CsrfViewMiddleware._get_token() works,
django-rest-framework/tests/authentication/test_authentication.py,229,Post the token matching the cookie value,
django-rest-framework/tests/authentication/test_authentication.py,311,use a nonexistent token key,
django-rest-framework/tests/authentication/test_authentication.py,332,add an 'invalid' unicode character,
django-rest-framework/tests/browsable_api/test_form_rendering.py,40,sanity check for non-browsable API responses,
django-rest-framework/tests/importable/test_installed.py,7,ensure the test app hasn't been removed from the test suite,
django-rest-framework/tests/importable/__init__.py,6,noqa,
django-rest-framework/tests/importable/__init__.py,9,test initializing fields with lazy translations,
django-rest-framework/tests/schemas/test_coreapi.py,796,Accessed from class,
django-rest-framework/tests/schemas/test_coreapi.py,798,???: Do the dummy arguments require a tighter assert?,
django-rest-framework/tests/schemas/test_coreapi.py,810,Adds a field...,
django-rest-framework/tests/schemas/test_coreapi.py,823,Replaces a field...,
django-rest-framework/tests/schemas/test_coreapi.py,949,"tuples are ([field], [expected schema])",
django-rest-framework/tests/schemas/test_coreapi.py,950,TODO: Add remaining cases,
django-rest-framework/tests/schemas/test_coreapi.py,1017,the first and last character are '\n' correctly removed by get_description,
django-rest-framework/tests/schemas/test_coreapi.py,1021,Views for SchemaGenerationExclusionTests,
django-rest-framework/tests/schemas/test_coreapi.py,1080,Not pretty. Mimics internals of EndpointEnumerator to put should_include_endpoint under test,
django-rest-framework/tests/schemas/test_coreapi.py,1180,Fails with method names:,
django-rest-framework/tests/schemas/test_coreapi.py,1205,not important here,
django-rest-framework/tests/schemas/views.py,58,Generics.,
django-rest-framework/tests/schemas/views.py,96,Validators and/or equivalent Field attributes.,
django-rest-framework/tests/schemas/views.py,148,Serializer with model.,
django-rest-framework/tests/schemas/test_openapi.py,259,"there should be no empty 'required' property, see #6834",
django-rest-framework/tests/schemas/test_openapi.py,286,"there should be no empty 'required' property, see #6834",
django-rest-framework/tests/schemas/test_openapi.py,523,TODO this should be changed once the multiple response,
django-rest-framework/tests/schemas/test_openapi.py,524,schema support is there,
django-rest-framework/tests/schemas/test_openapi.py,540,py <= 3.5,
django-rest-framework/tests/schemas/test_managementcommand.py,59,Check valid YAML was output.,
django-rest-framework/tests/schemas/test_managementcommand.py,67,Check valid JSON was output.,
django-rest-framework/tests/schemas/test_managementcommand.py,82,nothing on stdout,
django-rest-framework/tests/schemas/test_managementcommand.py,87,file output identical to stdout output,
