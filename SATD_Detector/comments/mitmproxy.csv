file path,line #,comment,satd
mitmproxy/setup.py,7,Based on https://github.com/pypa/sampleproject/blob/master/setup.py,
mitmproxy/setup.py,8,and https://python-packaging-user-guide.readthedocs.org/,
mitmproxy/setup.py,62,https://packaging.python.org/en/latest/requirements/#install-requires,
mitmproxy/setup.py,63,It is not considered best practice to use install_requires to pin dependencies to specific versions.,
mitmproxy/setup.py,67,no semver here - this should always be on the last release!,
mitmproxy/test/filename_matching.py,1,!/usr/bin/env python3,
mitmproxy/test/filename_matching.py,51,TODO: enable this in the future,
mitmproxy/test/filename_matching.py,52,exitcode += 1,
mitmproxy/test/full_coverage_plugin.py,90,make sure we get the EXIT_TESTSFAILED exit code,
mitmproxy/test/individual_coverage.py,1,!/usr/bin/env python3,
mitmproxy/test/individual_coverage.py,52,"run pytest in a new process, otherwise imports and modules might conflict",
mitmproxy/test/helper_tools/dumperview.py,1,!/usr/bin/env python,
mitmproxy/test/helper_tools/memoryleak.py,5,import os,
mitmproxy/test/helper_tools/memoryleak.py,6,"os.environ[""TK_LIBRARY""] = r""C:\Python27\tcl\tcl8.5""",
mitmproxy/test/helper_tools/memoryleak.py,7,"os.environ[""TCL_LIBRARY""] = r""C:\Python27\tcl\tcl8.5""",
mitmproxy/test/helper_tools/memoryleak.py,9,"Also noteworthy: guppy, objgraph",
mitmproxy/test/helper_tools/memoryleak.py,36,do this to unpollute view,
mitmproxy/test/helper_tools/memoryleak.py,38,"print(""\r\n"".join(str(x)[:100] for x in gc.get_referrers(ssl)))",
mitmproxy/test/helper_tools/inspect_dumpfile.py,9,"tnetstring throw a ValueError on EOF, which is hard to catch",
mitmproxy/test/helper_tools/inspect_dumpfile.py,10,because they raise ValueErrors for a couple of other reasons.,
mitmproxy/test/helper_tools/inspect_dumpfile.py,11,Check for EOF to avoid this.,
mitmproxy/test/pathod/test_pathoc.py,167,This should read a frame and close the websocket reader,
mitmproxy/test/pathod/test_pathod.py,37,"FIXME: Add float values to spec language, reduce test timeout to",
mitmproxy/test/pathod/test_pathod.py,38,increase test performance,
mitmproxy/test/pathod/test_pathod.py,39,This is a bodge - we have some platform difference that causes,
mitmproxy/test/pathod/test_pathod.py,40,different exceptions to be raised here.,
mitmproxy/test/pathod/test_pathod.py,119,FIXME: Other binary data elements,
mitmproxy/test/pathod/test_pathod.py,213,FIXME: Race Condition?,
mitmproxy/test/pathod/protocols/test_websockets.py,1,TODO: write tests,
mitmproxy/test/pathod/protocols/test_http2.py,102,send magic,
mitmproxy/test/pathod/protocols/test_http2.py,106,send empty settings frame,
mitmproxy/test/pathod/protocols/test_http2.py,110,check empty settings frame,
mitmproxy/test/pathod/protocols/test_http2.py,114,check settings acknowledgement,
mitmproxy/test/pathod/protocols/test_http2.py,118,send settings acknowledgement,
mitmproxy/test/pathod/protocols/test_http2.py,139,check magic,
mitmproxy/test/pathod/protocols/test_http2.py,142,check empty settings frame,
mitmproxy/test/pathod/protocols/test_http2.py,146,send empty settings frame,
mitmproxy/test/pathod/protocols/test_http2.py,150,check settings acknowledgement,
mitmproxy/test/pathod/protocols/test_http2.py,154,send settings acknowledgement,
mitmproxy/test/pathod/protocols/test_http2.py,199,check settings acknowledgement,
mitmproxy/test/pathod/protocols/test_http2.py,203,just to keep the connection alive a bit longer,
mitmproxy/test/pathod/protocols/test_http2.py,298,just to keep the connection alive a bit longer,
mitmproxy/test/pathod/protocols/test_http2.py,374,just to keep the connection alive a bit longer,
mitmproxy/test/pathod/protocols/test_http.py,1,TODO: write tests,
mitmproxy/test/pathod/language/test_message.py,1,TODO: write tests,
mitmproxy/test/pathod/language/test_websockets.py,100,Simple server frame,
mitmproxy/test/pathod/language/test_websockets.py,105,Simple client frame,
mitmproxy/test/pathod/language/test_websockets.py,113,"Server frame, mask explicitly set",
mitmproxy/test/pathod/language/test_websockets.py,121,"Client frame, mask explicitly unset",
mitmproxy/test/pathod/language/test_base.py,61,"While pyparsing has a escChar argument for QuotedString,",
mitmproxy/test/pathod/language/test_base.py,62,"escChar only performs scapes single-character escapes and does not work for e.g. r""\x02"".",
mitmproxy/test/pathod/language/test_base.py,63,"Thus, we cannot use that option, which means we cannot have single quotes in strings.",
mitmproxy/test/pathod/language/test_base.py,64,"To fix this, we represent single quotes as r""\x07"".",
mitmproxy/test/pathod/language/test_base.py,80,"self.roundtrip(""\\"")",
mitmproxy/test/pathod/language/test_http.py,249,"While larger values are known to work on linux, len() technically",
mitmproxy/test/pathod/language/test_http.py,250,returns an int and a python 2.7 int on windows has 32bit precision.,
mitmproxy/test/pathod/language/test_http.py,251,"Therefore, we should keep the body length < 2147483647 bytes in our",
mitmproxy/test/pathod/language/test_http.py,252,tests.,
mitmproxy/test/pathod/language/test_exceptions.py,1,TODO: write tests,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,101,calling this again with the same signature is a no-op.,
mitmproxy/test/,105,a different signature should emit a warning though.,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,139,use this protocol just to assemble - not for actual sending,
mitmproxy/test/,202,we need to wait for the test to finish successfully before calling .close() on Windows.,
mitmproxy/test/,203,The workaround here is to signal completion by sending data the other way around.,
mitmproxy/test/,130,Test Configuration,
mitmproxy/test/,152,perf: we want to run tests in parallel,
mitmproxy/test/,153,"should this ever cause an error, travis should catch it.",
mitmproxy/test/,154,shutil.rmtree(cls.confdir),
mitmproxy/test/,163,FIXME: Track down the Windows sync issues,
mitmproxy/test/,355,We need to initialize the chain first so that the normal server gets a correct config.,
mitmproxy/test/,382,First proxy is in normal mode.,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,5,class TestDNTree:,
mitmproxy/test/,6,def test_simple(self):,
mitmproxy/test/,7,d = certs.DNTree(),
mitmproxy/test/,8,"d.add(""foo.com"", ""foo"")",
mitmproxy/test/,9,"d.add(""bar.com"", ""bar"")",
mitmproxy/test/,10,"assert d.get(""foo.com"") == ""foo""",
mitmproxy/test/,11,"assert d.get(""bar.com"") == ""bar""",
mitmproxy/test/,12,"assert not d.get(""oink.com"")",
mitmproxy/test/,13,"assert not d.get(""oink"")",
mitmproxy/test/,14,"assert not d.get("""")",
mitmproxy/test/,15,"assert not d.get(""oink.oink"")",
mitmproxy/test/,16,,
mitmproxy/test/,17,"d.add(""*.match.org"", ""match"")",
mitmproxy/test/,18,"assert not d.get(""match.org"")",
mitmproxy/test/,19,"assert d.get(""foo.match.org"") == ""match""",
mitmproxy/test/,20,"assert d.get(""foo.foo.match.org"") == ""match""",
mitmproxy/test/,21,,
mitmproxy/test/,22,def test_wildcard(self):,
mitmproxy/test/,23,d = certs.DNTree(),
mitmproxy/test/,24,"d.add(""foo.com"", ""foo"")",
mitmproxy/test/,25,"assert not d.get(""*.foo.com"")",
mitmproxy/test/,26,"d.add(""*.foo.com"", ""wild"")",
mitmproxy/test/,27,,
mitmproxy/test/,28,d = certs.DNTree(),
mitmproxy/test/,29,"d.add(""*"", ""foo"")",
mitmproxy/test/,30,"assert d.get(""foo.com"") == ""foo""",
mitmproxy/test/,31,"assert d.get(""*.foo.com"") == ""foo""",
mitmproxy/test/,32,"assert d.get(""com"") == ""foo""",
mitmproxy/test/,63,assert c1 == c2,
mitmproxy/test/,120,TODO: How do we actually attempt to read that file as another user?,
mitmproxy/test/,182,This breaks unless we ignore a decoding error.,
mitmproxy/test/,168,copy creates a different uuid,
mitmproxy/test/,174,to change the state,
mitmproxy/test/,150,pytest.raises keeps a reference here that interferes with the cleanup test,
mitmproxy/test/,151,further down.,
mitmproxy/test/,385,Nonexistent options ignore,
mitmproxy/test/,179,Cyrillic,
mitmproxy/test/,181,Chinese,
mitmproxy/test/,183,Hindi,
mitmproxy/test/,185,Arabic,
mitmproxy/test/,187,Greek,
mitmproxy/test/,189,Hebrew,
mitmproxy/test/,191,Japanese,
mitmproxy/test/,193,Korean,
mitmproxy/test/,195,Latin,
mitmproxy/test/,324,Messages sent by client or server,
mitmproxy/test/,329,Messages sent by client,
mitmproxy/test/,334,Messages sent by server,
mitmproxy/test/,392,Request headers,
mitmproxy/test/,395,Response headers,
mitmproxy/test/,402,Request content-type,
mitmproxy/test/,405,Response content-type,
mitmproxy/test/,463,Messages sent by client or server,
mitmproxy/test/,468,Messages sent by client,
mitmproxy/test/,473,Messages sent by server,
mitmproxy/test/,581,The text is a string with leading and trailing whitespace stripped; if the source is not available it is None.,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,Silence third-party modules,
mitmproxy/test/,57,binding to 0.0.0.0:1 works without special permissions on Windows and macOS Mojave+,
mitmproxy/test/,101,hide warnings on deletion,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,7,prev this  next  next2,
mitmproxy/test/,80,"this is not covered by check_option_type, but still belongs in this module",
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,38,"In Upstream mode with SSL, we may already have a previous CONNECT",
mitmproxy/test/,39,request.,
mitmproxy/test/,58,"In reverse proxy mode, we expect to use the upstream host as our SNI value",
mitmproxy/test/,105,Test that we get the original SSL cert,
mitmproxy/test/,114,Test Non-HTTP traffic,
mitmproxy/test/,115,this results in just 100 random bytes,
mitmproxy/test/,116,mitmproxy responds with bad gateway,
mitmproxy/test/,120,pathoc tries to parse answer as HTTP,
mitmproxy/test/,139,Test that we get the original SSL cert,
mitmproxy/test/,148,Test Non-HTTP traffic,
mitmproxy/test/,149,this results in just 100 random bytes,
mitmproxy/test/,150,mitmproxy responds with bad gateway,
mitmproxy/test/,154,pathoc parses answer as HTTP,
mitmproxy/test/,182,Test that we get the original SSL cert,
mitmproxy/test/,191,Make sure that TCP messages are in the event log.,
mitmproxy/test/,192,Re-enable and fix this when we start keeping TCPFlows in the state.,
mitmproxy/test/,193,"assert any(""305"" in m for m in self.master.tlog)",
mitmproxy/test/,194,"assert any(""306"" in m for m in self.master.tlog)",
mitmproxy/test/,212,"Add a body, so we have a content-length header, which combined with",
mitmproxy/test/,213,HTTP1.1 means the connection is kept alive.,
mitmproxy/test/,216,Lets sanity check that the connection does indeed stay open by,
mitmproxy/test/,217,issuing two requests over the same connection,
mitmproxy/test/,223,Now check that the connection is closed as the client specifies,
mitmproxy/test/,227,"There's a race here, which means we can get any of a number of errors.",
mitmproxy/test/,228,"Rather than introduce yet another sleep into the test suite, we just",
mitmproxy/test/,229,relax the Exception specification.,
mitmproxy/test/,239,"Server has disconnected. Mitmproxy should detect this, and reconnect.",
mitmproxy/test/,408,We only test for a single invalid cert here.,
mitmproxy/test/,409,"Actual testing of different root-causes (invalid hostname, expired, ...)",
mitmproxy/test/,410,is done in mitmproxy.net.,
mitmproxy/test/,448,default value,
mitmproxy/test/,507,read server greeting,
mitmproxy/test/,508,"the request doesn't matter, error response from handshake will be read anyway.",
mitmproxy/test/,521,"the request doesn't matter, error response from handshake will be read anyway.",
mitmproxy/test/,609,test that we notice at least 1 sec delay between timestamps,
mitmproxy/test/,610,in response object,
mitmproxy/test/,615,"timestamp_start might fire a bit late, so we play safe and only require 300ms.",
mitmproxy/test/,620,test that we notice a delay between timestamps in request object,
mitmproxy/test/,624,"call pathod server, wait a second to complete the request",
mitmproxy/test/,635,sanity test for our low level request,
mitmproxy/test/,636,"timestamp_start might fire a bit late, so we play safe and only require 300ms.",
mitmproxy/test/,640,tests that the client_conn a tcp connection has a tcp_setup_timestamp,
mitmproxy/test/,647,a bit hacky: make sure that we don't just read the headers only.,
mitmproxy/test/,678,tests that the ssl timestamp is present when ssl is used,
mitmproxy/test/,686,tests that the ssl timestamp is present when ssl is used,
mitmproxy/test/,699,"This part should have no impact, but it should also not cause any exceptions.",
mitmproxy/test/,705,This is the actual redirection.,
mitmproxy/test/,768,a request with 100k of data but without content-length,
mitmproxy/test/,777,simple request with streaming turned on,
mitmproxy/test/,781,"now send back 100k of data, streamed but not chunked",
mitmproxy/test/,849,Nothing should have hit the server,
mitmproxy/test/,863,The server should have seen a request,
mitmproxy/test/,955,"CONNECT from pathoc to chain[0],",
mitmproxy/test/,958,request from pathoc to chain[0],
mitmproxy/test/,959,"CONNECT from proxy to chain[1],",
mitmproxy/test/,962,request from proxy to chain[1],
mitmproxy/test/,963,request from chain[0] (regular proxy doesn't store CONNECTs),
mitmproxy/test/,968,skip chain[0].,
mitmproxy/test/,1056,First request goes through all three proxies exactly once,
mitmproxy/test/,1067,Upstream sees two requests due to reconnection attempt,
mitmproxy/test/,1072,"Reconnection failed, so we're now disconnected",
mitmproxy/test/,298,We don't send payload to other end,
mitmproxy/test/,388,with pytest.raises(exceptions.TcpDisconnect):,
mitmproxy/test/,413,Reader.safe_read get nothing as result,
mitmproxy/test/,421,Message not appended as the final frame isn't received,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,coding=utf-8,
mitmproxy/test/,27,inspect the log:,
mitmproxy/test/,28,for msg in self.proxy.tmaster.tlog:,
mitmproxy/test/,29,print(msg),
mitmproxy/test/,126,send CONNECT request,
mitmproxy/test/,140,read CONNECT response,
mitmproxy/test/,215,Ignore UnicodeWarning:,
mitmproxy/test/,216,h2/utilities.py:64: UnicodeWarning: Unicode equal comparison,
mitmproxy/test/,217,failed to convert both arguments to Unicode - interpreting,
mitmproxy/test/,218,them as being unequal.,
mitmproxy/test/,219,"elif header[0] in (b'cookie', u'cookie') and len(header[1]) < 20:",
mitmproxy/test/,293,Ignore UnicodeWarning:,
mitmproxy/test/,294,h2/utilities.py:64: UnicodeWarning: Unicode equal comparison,
mitmproxy/test/,295,failed to convert both arguments to Unicode - interpreting,
mitmproxy/test/,296,them as being unequal.,
mitmproxy/test/,297,"elif header[0] in (b'cookie', u'cookie') and len(header[1]) < 20:",
mitmproxy/test/,376,Ignore UnicodeWarning:,
mitmproxy/test/,377,h2/utilities.py:64: UnicodeWarning: Unicode equal comparison,
mitmproxy/test/,378,failed to convert both arguments to Unicode - interpreting,
mitmproxy/test/,379,them as being unequal.,
mitmproxy/test/,380,"elif header[0] in (b'cookie', u'cookie') and len(header[1]) < 20:",
mitmproxy/test/,620,ignore requests initiated by push promises,
mitmproxy/test/,777,the other two bodies might not be transmitted before the reset,
mitmproxy/test/,847,this will exceed MAX_CONCURRENT_STREAMS on the server connection,
mitmproxy/test/,848,and cause mitmproxy to throttle stream creation to the server,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,52,"call pathod server, wait a second to complete the request",
mitmproxy/test/,106,response with 10000 bytes,
mitmproxy/test/,110,request with 10000 bytes,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/,1,coding=utf-8,
mitmproxy/test/,12,Allow underscore,
mitmproxy/test/,16,IP Address Validations,
mitmproxy/test/,24,TLD must be between 2 and 63 chars,
mitmproxy/test/,30,misc characters test,
mitmproxy/test/,38,Every label must be between 1 and 63 chars,
mitmproxy/test/,47,Misc Underscore Test Cases,
mitmproxy/test/,55,Misc Dash/Hyphen/Minus Test Cases,
mitmproxy/test/,63,Misc Combo Test Cases,
mitmproxy/test/,17,record layer,
mitmproxy/test/,18,handshake header,
mitmproxy/test/,152,record layer,
mitmproxy/test/,153,handshake header,
mitmproxy/test/,47,Hang as long as the client connection is alive,
mitmproxy/test/,52,Client connection is dead...,
mitmproxy/test/,102,"We may get an ipv4-mapped ipv6 address here, e.g. ::ffff:127.0.0.1.",
mitmproxy/test/,103,"Those still appear as ""127.0.0.1"" in the table, so we need to strip the prefix.",
mitmproxy/test/,122,port probably already in use,
mitmproxy/test/,239,Verification errors should be saved even if connection isn't aborted,
mitmproxy/test/,240,aborted,
mitmproxy/test/,253,Verification errors should be saved even if connection isn't aborted,
mitmproxy/test/,273,Unknown issuing certificate authority for first certificate,
mitmproxy/test/,426,"Not working for OpenSSL 1.1.1, see",
mitmproxy/test/,427,https://github.com/pyca/pyopenssl/blob/fc802df5c10f0d1cd9749c94887d652fa26db6fb/src/OpenSSL/SSL.py#L1192-L1196,
mitmproxy/test/,449,"Not working for OpenSSL 1.1.1, see",
mitmproxy/test/,450,https://github.com/pyca/pyopenssl/blob/fc802df5c10f0d1cd9749c94887d652fa26db6fb/src/OpenSSL/SSL.py#L1192-L1196,
mitmproxy/test/,496,Exercise SSL.ZeroReturnError,
mitmproxy/test/,513,Exercise SSL.SysCallError,
mitmproxy/test/,672,Test __getattr__,
mitmproxy/test/,152,Test ATYP=0x01 (IPV4),
mitmproxy/test/,165,Test ATYP=0x04 (IPV6),
mitmproxy/test/,1,-*- coding: utf-8 -*-,
mitmproxy/test/,17,"Set str, get raw bytes",
mitmproxy/test/,20,"Set raw bytes, get decoded",
mitmproxy/test/,21,use uppercase so that we can also cover request.method,
mitmproxy/test/,23,"Set bytes, get raw bytes",
mitmproxy/test/,27,Set UTF8,
mitmproxy/test/,30,Don't fail on garbage,
mitmproxy/test/,34,foo.bar = foo.bar should not cause any side effects.,
mitmproxy/test/,53,ResponseData.from_state(),
mitmproxy/test/,235,"""鏄庝集"" is decoded form of \xe6\x98\x8e\xe4\xbc\xaf in gb18030",
mitmproxy/test/,94,path can also be None.,
mitmproxy/test/,103,Test IDNA encoding,
mitmproxy/test/,104,"Set str, get raw bytes",
mitmproxy/test/,107,"Set raw bytes, get decoded",
mitmproxy/test/,110,"Set bytes, get raw bytes",
mitmproxy/test/,113,IDNA encoding is not bijective,
mitmproxy/test/,117,Don't fail on garbage,
mitmproxy/test/,121,foo.bar = foo.bar should not cause any side effects.,
mitmproxy/test/,209,Without host header,
mitmproxy/test/,212,Same port as self.port (22),
mitmproxy/test/,215,Different ports,
mitmproxy/test/,219,Empty host,
mitmproxy/test/,224,Invalid IDNA,
mitmproxy/test/,230,Without host header,
mitmproxy/test/,233,Same port as self.port (22),
mitmproxy/test/,236,Different ports,
mitmproxy/test/,339,no-op if there is no accept_encoding header.,
mitmproxy/test/,38,Invalid IDNA,
mitmproxy/test/,41,Invalid PATH,
mitmproxy/test/,44,Null byte in host,
mitmproxy/test/,47,Invalid IPv6 URL - see http://www.ietf.org/rfc/rfc2732.txt,
mitmproxy/test/,65,Port out of range,
mitmproxy/test/,78,We ignore the byte 126: '~' because of an incompatibility in Python 3.6 and 3.7,
mitmproxy/test/,79,In 3.6 it is escaped as %7E,
mitmproxy/test/,80,In 3.7 it stays as ASCII character '~',
mitmproxy/test/,81,https://bugs.python.org/issue16285,
mitmproxy/test/,92,7E or ~ is excluded!,
mitmproxy/test/,261,Comma Separated Variant of Set-Cookie Headers,
mitmproxy/test/,306,"Invalid expires format, sent to us by Reddit.",
mitmproxy/test/,320,https://github.com/mitmproxy/mitmproxy/issues/773,
mitmproxy/test/,324,https://github.com/mitmproxy/mitmproxy/issues/1118,
mitmproxy/test/,330,https://github.com/mitmproxy/mitmproxy/issues/2250,
mitmproxy/test/,337,Freeze time,
mitmproxy/test/,354,A cookie can be expired,
mitmproxy/test/,355,by setting the expire time in the past,
mitmproxy/test/,358,or by setting Max-Age to 0,
mitmproxy/test/,361,or both,
mitmproxy/test/,87,should be cached,
mitmproxy/test/,91,the other way around as well,
mitmproxy/test/,95,different encoding,
mitmproxy/test/,100,This is not in the cache anymore,
mitmproxy/test/,159,Weird that this is not exact...,
mitmproxy/test/,165,"Cookie refreshing is tested in test_cookies, we just make sure that it's triggered here.",
mitmproxy/test/,162,Expect: 100-continue,
mitmproxy/test/,167,Expect: 100-continue,
mitmproxy/test/,173,http://tools.ietf.org/html/rfc7230#section-3.3,
mitmproxy/test/,188,chunked,
mitmproxy/test/,193,explicit length,
mitmproxy/test/,203,more than 1 content-length headers with same value,
mitmproxy/test/,208,more than 1 content-length headers with conflicting value,
mitmproxy/test/,214,no length,
mitmproxy/test/,281,https://github.com/mitmproxy/mitmproxy/issues/784,
mitmproxy/test/,79,https://github.com/mitmproxy/mitmproxy/issues/186,
mitmproxy/test/,87,https://github.com/mitmproxy/mitmproxy/issues/186,
mitmproxy/test/,15,noqa,
mitmproxy/test/,56,create trusted root CA,
mitmproxy/test/,66,create trusted leaf cert.,
mitmproxy/test/,69,create self-signed cert,
mitmproxy/test/,56,tornado disallows POST without content by default.,
mitmproxy/test/,92,restore,
mitmproxy/test/,316,trigger on_close by opening a second connection.,
mitmproxy/test/,322,"Set some value as constant, so that _tflow.js would not change every time.",
mitmproxy/test/,35,this already causes a redraw,
mitmproxy/test/,11,This runs before each test,
mitmproxy/test/,24,This runs after each test,
mitmproxy/test/,68,Don't let users type a space before starting a command,
mitmproxy/test/,69,as a usability feature,
mitmproxy/test/,93,Do it again to make sure it won't go negative,
mitmproxy/test/,103,Make sure cursor won't go past the text,
mitmproxy/test/,107,Make sure cursor goes left and then back right,
mitmproxy/test/,21,repeated addition causes exception,
mitmproxy/test/,16,invalid utf-8,
mitmproxy/test/,8,utf8 with chinese characters,
mitmproxy/test/,13,File taken from https://github.com/davidpshaw/PyWBXMLDecoder/tree/master/wbxml_samples,
mitmproxy/test/,7,no textual data,
mitmproxy/test/,13,with textual data,
mitmproxy/test/,28,with compressed textual data,
mitmproxy/test/,43,UTF-8 international text - english,
mitmproxy/test/,58,check gamma value,
mitmproxy/test/,64,check aspect value,
mitmproxy/test/,79,check comment,
mitmproxy/test/,87,check background,
mitmproxy/test/,95,check working with color table,
mitmproxy/test/,109,check app0,
mitmproxy/test/,117,check com,
mitmproxy/test/,126,check app1,
mitmproxy/test/,137,check multiple segments,
mitmproxy/test/,18,test .log(),
mitmproxy/test/,25,test .clear(),
mitmproxy/test/,44,overflow,
mitmproxy/test/,65,These all just call update,
mitmproxy/test/,404,Simple add,
mitmproxy/test/,409,Filter change triggers refresh,
mitmproxy/test/,417,An update that results in a flow being added to the view,
mitmproxy/test/,424,An update that does not affect the view just sends update,
mitmproxy/test/,431,An update for a flow in state but not view does not do anything,
mitmproxy/test/,470,Special case - initialising with a view that already contains data,
mitmproxy/test/,477,Start empty,
mitmproxy/test/,487,Try to set to something not in view,
mitmproxy/test/,15,We want this to be speedy for testing,
mitmproxy/test/,67,Disconnect error,
mitmproxy/test/,78,# Port error,
mitmproxy/test/,82,"In upstream mode, we get a 502 response from the upstream proxy server.",
mitmproxy/test/,83,"In upstream mode with ssl, the replay will fail as we cannot establish",
mitmproxy/test/,84,SSL with the upstream proxy.,
mitmproxy/test/,191,"These instances haven't yet added a new command, so they haven't",
mitmproxy/test/,192,yet reloaded their commands from the command file.,
mitmproxy/test/,193,"This is expected, because if the user is filtering a command on",
mitmproxy/test/,194,"another window, we don't want to interfere with that",
mitmproxy/test/,200,"Since the second instanced added a new command, its list of",
mitmproxy/test/,201,saved commands has been updated to have the commands from the,
mitmproxy/test/,202,first instance + its own commands,
mitmproxy/test/,210,Third instance is still empty as it has not yet ran any command,
mitmproxy/test/,203,Folders should work.,
mitmproxy/test/,205,"Files, too.",
mitmproxy/test/,8,heh,
mitmproxy/test/,67,shlex.quote doesn't support a bytes object,
mitmproxy/test/,68,see https://github.com/python/cpython/pull/10871,
mitmproxy/test/,113,shlex.quote doesn't support a bytes object,
mitmproxy/test/,114,see https://github.com/python/cpython/pull/10871,
mitmproxy/test/,31,To make tests quicker,
mitmproxy/test/,119,"Verify that flow has been updated, not duplicated",
mitmproxy/test/,191,Need to test for configure,
mitmproxy/test/,192,Need to test for set_order,
mitmproxy/test/,207,Content length is wrong for some reason -- quick fix,
mitmproxy/test/,115,NOTE: parameters are mutually exclusive in options,
mitmproxy/test/,124,same parameters,
mitmproxy/test/,145,same content,
mitmproxy/test/,147,distint content (note only x-www-form-urlencoded payload is analysed),
mitmproxy/test/,269,same parameters,
mitmproxy/test/,271,ignored parameters !=,
mitmproxy/test/,274,missing parameter,
mitmproxy/test/,277,ignorable parameter added,
mitmproxy/test/,280,not ignorable parameter changed,
mitmproxy/test/,283,not ignorable parameter missing,
mitmproxy/test/,74,Test setting of multiple cookies,
mitmproxy/test/,88,Test setting of weird cookie keys,
mitmproxy/test/,106,Test overwriting of a cookie value,
mitmproxy/test/,121,Test that a cookie is be deleted,
mitmproxy/test/,122,by setting the expire time in the past,
mitmproxy/test/,9,block_global: loopback,
mitmproxy/test/,12,block_global: private,
mitmproxy/test/,21,block_global: global,
mitmproxy/test/,32,block_private: loopback,
mitmproxy/test/,35,block_private: private,
mitmproxy/test/,44,block_private: global,
mitmproxy/test/,5,Intended Syntax Error,
mitmproxy/test/,27,noqa,
mitmproxy/test/,33,The probability of generating a scalar value increases as the depth increase.,
mitmproxy/test/,34,This ensures that we bottom out eventually.,
mitmproxy/test/,1,TODO: write tests,
mitmproxy/test/release/test_cibuild.py,49,"Simulates a PR. We build everything, but don't have access to secret",
mitmproxy/test/release/test_cibuild.py,50,credential env variables.,
mitmproxy/test/release/test_cibuild.py,99,Simulates an ordinary commit on the master branch.,
mitmproxy/test/release/test_cibuild.py,120,Simulates a tagged release on a release branch.,
mitmproxy/test/release/test_cibuild.py,145,Simulates a non-release tag on a branch.,
mitmproxy/test/release/test_cibuild.py,170,Simulates a commit on a development branch on the main repo,
mitmproxy/test/release/test_cibuild.py,193,Simulates a commit on a release maintenance branch on the main repo,
mitmproxy/test/release/test_cibuild.py,254,regular snapshot,
mitmproxy/test/release/test_cibuild.py,255,"forgot to remove "".dev"" on bump",
mitmproxy/test/release/test_cibuild.py,256,"forgot to re-add "".dev""",
mitmproxy/test/release/test_cibuild.py,257,version mismatch,
mitmproxy/test/release/test_cibuild.py,258,regular release,
mitmproxy/test/release/test_cibuild.py,259,non-canonical.,
mitmproxy/test/release/test_cibuild.py,260,tagged test/dev release,
mitmproxy/test/release/test_cibuild.py,261,"tagged, but without v prefix",
mitmproxy/test/examples/test_xss_scanner.py,9,First type of exploit: <script>PAYLOAD</script>,
mitmproxy/test/examples/test_xss_scanner.py,10,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,29,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,35,Second type of exploit: <script>t='PAYLOAD'</script>,
mitmproxy/test/examples/test_xss_scanner.py,36,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,47,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,53,"Third type of exploit: <script>t=""PAYLOAD""</script>",
mitmproxy/test/examples/test_xss_scanner.py,54,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,65,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,71,Fourth type of exploit: <a href='PAYLOAD'>Test</a>,
mitmproxy/test/examples/test_xss_scanner.py,72,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,82,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,88,"Fifth type of exploit: <a href=""PAYLOAD"">Test</a>",
mitmproxy/test/examples/test_xss_scanner.py,89,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,99,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,105,Sixth type of exploit: <a href=PAYLOAD>Test</a>,
mitmproxy/test/examples/test_xss_scanner.py,106,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,116,Non-Exploitable,
mitmproxy/test/examples/test_xss_scanner.py,123,Seventh type of exploit: <html>PAYLOAD</html>,
mitmproxy/test/examples/test_xss_scanner.py,124,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,134,Non-Exploitable,
mitmproxy/test/examples/test_xss_scanner.py,140,Eighth type of exploit: <a href=PAYLOAD>Test</a>,
mitmproxy/test/examples/test_xss_scanner.py,141,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,151,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,158,"Ninth type of exploit: <a href=""STUFF PAYLOAD"">Test</a>",
mitmproxy/test/examples/test_xss_scanner.py,159,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,169,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,176,Tenth type of exploit: <a href='STUFF PAYLOAD'>Test</a>,
mitmproxy/test/examples/test_xss_scanner.py,177,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,187,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,194,Eleventh type of exploit: <a href=STUFF_PAYLOAD>Test</a>,
mitmproxy/test/examples/test_xss_scanner.py,195,Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,205,Non-Exploitable:,
mitmproxy/test/examples/test_xss_scanner.py,349,"self, url: str, injection_point: str, exploit: str, line: str",
mitmproxy/test/examples/test_xss_scanner.py,376,It only uses the request cookies,
mitmproxy/test/examples/test_examples.py,90,Rewrite by reverse proxy mode,
mitmproxy/test/examples/test_har_dump.py,16,Create a dummy flow for testing,
mitmproxy/pathod/pathoc_cmdline.py,225,pragma: no cover,
mitmproxy/pathod/pathod.py,16,noqa,
mitmproxy/pathod/pathod.py,183,"If this is a websocket initiation, we respond with a proper",
mitmproxy/pathod/pathod.py,184,"server response, unless over-ridden.",
mitmproxy/pathod/pathod.py,391,pragma: no cover,
mitmproxy/pathod/pathod.py,433,pragma: no cover,
mitmproxy/pathod/test.py,6,noqa,
mitmproxy/pathod/utils.py,4,noqa,
mitmproxy/pathod/utils.py,21,FIXME: change this name,
mitmproxy/pathod/utils.py,25,pragma: no cover,
mitmproxy/pathod/pathod_cmdline.py,233,pragma: no cover,
mitmproxy/pathod/pathoc.py,129,pragma: no cover,
mitmproxy/pathod/pathoc.py,130,"this is not reliably triggered due to its nature, so we exclude it from coverage.",
mitmproxy/pathod/pathoc.py,158,SSL,
mitmproxy/pathod/pathoc.py,166,HTTP/2,
mitmproxy/pathod/pathoc.py,171,Websockets,
mitmproxy/pathod/pathoc.py,174,Network,
mitmproxy/pathod/pathoc.py,177,Output control,
mitmproxy/pathod/pathoc.py,437,build a dummy request to read the response,
mitmproxy/pathod/pathoc.py,438,ideally this would be returned directly from language.serve,
mitmproxy/pathod/pathoc.py,493,"elif isinstance(r, language.http2.Frame):",
mitmproxy/pathod/pathoc.py,494,TODO: do something,
mitmproxy/pathod/pathoc.py,497,pragma: no cover,
mitmproxy/pathod/pathoc.py,504,"If we are replaying more than once, we must convert the request generators to lists",
mitmproxy/pathod/pathoc.py,505,or they will be exhausted after the first run.,
mitmproxy/pathod/pathoc.py,506,"This is bad for the edge-case where get:/:x10000000 (see 0da3e51) is combined with -n 2,",
mitmproxy/pathod/pathoc.py,507,but does not matter otherwise.,
mitmproxy/pathod/pathoc.py,565,"We consume the queue when we can, so it doesn't build up.",
mitmproxy/pathod/protocols/http2.py,96,more accurate timestamp_start,
mitmproxy/pathod/protocols/http2.py,143,more accurate timestamp_start,
mitmproxy/pathod/protocols/http2.py,243,server announces own settings,
mitmproxy/pathod/protocols/http2.py,244,server acks my settings,
mitmproxy/pathod/protocols/http2.py,250,pragma: no cover,
mitmproxy/pathod/protocols/http2.py,256,pragma: no cover,
mitmproxy/pathod/protocols/http2.py,294,servers must use even stream ids,
mitmproxy/pathod/protocols/http2.py,297,clients must use odd stream ids,
mitmproxy/pathod/protocols/http2.py,340,pragma: no cover,
mitmproxy/pathod/protocols/http2.py,358,pragma: no cover,
mitmproxy/pathod/language/generators.py,52,bytearray has consistent behaviour on both Python 2 and 3,
mitmproxy/pathod/language/generators.py,53,while bytes does not,
mitmproxy/pathod/language/base.py,8,noqa,
mitmproxy/pathod/language/base.py,28,TODO: refactor this into the protocol,
mitmproxy/pathod/language/base.py,73,pragma: no cover,
mitmproxy/pathod/language/base.py,80,pragma: no cover,
mitmproxy/pathod/language/base.py,266,pragma: no cover,
mitmproxy/pathod/language/base.py,340,"If it's a string, we were passed one of the options, so we lower-case",
mitmproxy/pathod/language/base.py,341,it to be canonical. The user can specify a different case by using a,
mitmproxy/pathod/language/base.py,342,string value literal.,
mitmproxy/pathod/language/base.py,346,Find the exact option value in a case-insensitive way,
mitmproxy/pathod/language/base.py,454,This check will fail if we know the length upfront,
mitmproxy/pathod/language/base.py,467,This check will fail if we don't know the length upfront - i.e. for,
mitmproxy/pathod/language/base.py,468,file inputs,
mitmproxy/pathod/language/message.py,2,noqa,
mitmproxy/pathod/language/message.py,74,pragma: no cover,
mitmproxy/pathod/language/message.py,84,Careful not to log any VALUE specs without sanitizing them first.,
mitmproxy/pathod/language/message.py,85,We truncate at 1k.,
mitmproxy/pathod/language/writer.py,5,It's not clear what the upper limit for time.sleep is. It's lower than the,
mitmproxy/pathod/language/writer.py,6,maximum int or float. 1 year should do.,
mitmproxy/pathod/language/writer.py,56,Remainders,
mitmproxy/pathod/language/writer.py,67,pragma: no cover,
mitmproxy/pathod/language/http.py,10,"TODO: use mitmproxy.net.semantics.protocol assemble method,",
mitmproxy/pathod/language/http.py,11,instead of duplicating the HTTP on-the-wire representation here.,
mitmproxy/pathod/language/http.py,12,see http2 language for an example,
mitmproxy/pathod/language/http.py,129,pragma: no cover,
mitmproxy/pathod/language/http.py,148,type: ignore,
mitmproxy/pathod/language/http2.py,58,self.toks(actions._Action),
mitmproxy/pathod/language/actions.py,9,type: ignore,
mitmproxy/pathod/language/actions.py,44,pragma: no cover,
mitmproxy/pathod/language/actions.py,48,pragma: no cover,
mitmproxy/pathod/language/actions.py,104,type: ignore,
mitmproxy/pathod/language/websockets.py,3,noqa,
mitmproxy/pathod/language/websockets.py,82,Bit flags,
mitmproxy/pathod/language/websockets.py,102,Used for nested frames,
mitmproxy/pathod/language/__init__.py,37,"http2.Frame.expr(),",
mitmproxy/pathod/language/__init__.py,59,"http2.Frame.expr(),",
mitmproxy/,97,"Options must be the last attribute here - after that, we raise an",
mitmproxy/,98,error for attribute assigment to unknown options.,
mitmproxy/,118,Notify error handlers,
mitmproxy/,120,Rollback,
mitmproxy/,138,We reuse blinker's safe reference functionality to cope with weakrefs,
mitmproxy/,139,to bound methods.,
mitmproxy/,151,"Our wrapper function goes out of scope immediately, so we have to set",
mitmproxy/,152,"weakrefs to false. This means we need to keep our own weakref, and",
mitmproxy/,153,clean up the hook when it's gone.,
mitmproxy/,175,This is slightly tricky. We allow attributes to be set on the instance,
mitmproxy/,176,"until we have an _options attribute. After that, assignment is sent to",
mitmproxy/,177,"the update function, and will raise an error for unknown options.",
mitmproxy/,386,The short option for a bool goes to whatever is NOT the default,
mitmproxy/,441,Sort data,
mitmproxy/,27,Proxy options,
mitmproxy/,48,"special object we can distinguish from a valid ""None"" reply.",
mitmproxy/,58,Spawn an event loop in the current thread,
mitmproxy/,61,"""start"" -> ""taken"" -> ""committed""",
mitmproxy/,63,Holds the reply value. May change before things are actually committed.,
mitmproxy/,130,"This will be ignored by the interpreter, but emit a warning",
mitmproxy/,22,type: ignore,
mitmproxy/,42,replace enum with bare int,
mitmproxy/,103,mypy doesn't support update with kwargs,
mitmproxy/,116,"Do not include handshake_flow, to prevent recursive serialization!",
mitmproxy/,117,"Since mitmproxy-console currently only displays HTTPFlows,",
mitmproxy/,118,dumping the handshake_flow will include the WebSocketFlow too.,
mitmproxy/,123,replace enum with bare int,
mitmproxy/,21,Conclusively preventing cross-thread races on proxy shutdown turns out to be,
mitmproxy/,22,"very hard. We could build a thread sync infrastructure for this, or we could",
mitmproxy/,23,wait until we ditch threads and move all the protocols into the async loop.,
mitmproxy/,24,"Until then, silence non-critical errors.",
mitmproxy/,87,pragma: no cover,
mitmproxy/,90,pragma: no cover,
mitmproxy/,98,pragma: no cover,
mitmproxy/,124,"Weird band-aid to make sure that self._shutdown() is actually executed,",
mitmproxy/,125,which otherwise hangs the process as the proxy server is threaded.,
mitmproxy/,126,This all needs to be simplified when the proxy server runs on asyncio as well.,
mitmproxy/,127,pragma: no cover,
mitmproxy/,131,Event loop stopped before Future completed.,
mitmproxy/,14,TCP,
mitmproxy/,19,HTTP,
mitmproxy/,26,WebSocket,
mitmproxy/,32,misc,
mitmproxy/,203,pragma: no cover,
mitmproxy/,208,We can use DummyReply objects multiple times. We only clear them up on,
mitmproxy/,209,the next handler so that we can access value and state in the,
mitmproxy/,210,meantime.,
mitmproxy/,240,we gracefully exclude module imports with the same name as hooks.,
mitmproxy/,241,"For example, a user may have ""from mitmproxy import log"" in an addon,",
mitmproxy/,242,"which has the same name as the ""log"" hook. In this particular case,",
mitmproxy/,243,"we end up in an error loop because we ""log"" this error.",
mitmproxy/,6,TODO: There is a lot of work to be done here.,
mitmproxy/,7,"The current implementation is written in a way that _any_ input is valid,",
mitmproxy/,8,which does not make sense once things get more complex.,
mitmproxy/,35,TODO: More of a hack.,
mitmproxy/,15,This is a very thin wrapper on top of :py:class:`mitmproxy.net.http.Request` and,
mitmproxy/,16,may be removed in the future.,
mitmproxy/,47,Is this request replayed?,
mitmproxy/,90,This is a very thin wrapper on top of :py:class:`mitmproxy.net.http.Response` and,
mitmproxy/,91,may be removed in the future.,
mitmproxy/,115,Is this request replayed?,
mitmproxy/,161,mypy doesn't support update with kwargs,
mitmproxy/,245,Do not send any response headers as it breaks proxying non-80 ports on,
mitmproxy/,246,Android emulators using the -http-proxy option.,
mitmproxy/,17,Default expiry must not be too long: https://github.com/mitmproxy/mitmproxy/issues/815,
mitmproxy/,18,= 60 * 60 * 24 * 365 * 3 = 3 years,
mitmproxy/,19,= 60 * 60 * 24 * 365 = 1 year,
mitmproxy/,21,"Generated with ""openssl dhparam"". It's too slow to generate this on startup.",
mitmproxy/,138,manually provided certs (e.g. mitmproxy's --certs),
mitmproxy/,139,"(common_name, sans)",
mitmproxy/,174,mitmproxy<=0.10 doesn't generate a dhparam file.,
mitmproxy/,175,Create it now if necessary.,
mitmproxy/,233,Dump the CA plus private key,
mitmproxy/,244,Dump the certificate in PEM format,
mitmproxy/,251,Create a .cer file with the same contents for Android,
mitmproxy/,258,Dump the certificate in PKCS12 format for Windows devices,
mitmproxy/,264,Dump the certificate and key in a PKCS12 format for Windows devices,
mitmproxy/,366,We only care about dNSName and iPAddress,
mitmproxy/,482,tcp.TCPClient.convert_to_tls assumes that this property only contains DNS altnames for hostname verification.,
mitmproxy/,340,"FUrl is special, because it can be ""naked"".",
mitmproxy/,470,Order is important - multi-char expressions need to come before narrow,
mitmproxy/,471,ones.,
mitmproxy/,478,"This is a bit of a hack to simulate Word(pyparsing_unicode.printables),",
mitmproxy/,479,which has a horrible performance with len(pyparsing.pyparsing_unicode.printables) == 1114060,
mitmproxy/,497,A naked rex is a URL rex:,
mitmproxy/,8,pragma: no cover,
mitmproxy/,44,pragma: no cover,
mitmproxy/,45,"return false here so that arguments are piped through parsearg,",
mitmproxy/,46,which does extended validation.,
mitmproxy/,368,pragma: no cover,
mitmproxy/,373,pragma: no cover,
mitmproxy/,377,"FIXME: validate that all rows have equal length, and all columns have equal types",
mitmproxy/,35,"Eventually, this object is restored from state. We don't have a",
mitmproxy/,36,connection then.,
mitmproxy/,136,"Unfortunately OpenSSL provides no way to expose all TLS extensions, so we do this dance",
mitmproxy/,137,here and use our Kaitai parser.,
mitmproxy/,140,pragma: no cover,
mitmproxy/,141,"if this fails, we don't want everything to go down.",
mitmproxy/,52,"In contrast to most others, this is a user-facing error which needs to look good.",
mitmproxy/,5,workaround for,
mitmproxy/,6,https://github.com/tornadoweb/tornado/issues/2751,
mitmproxy/,7,https://www.tornadoweb.org/en/stable/index.html#installation,
mitmproxy/,28,type: ignore,
mitmproxy/,72,This fails with a CommandException if types are invalid,
mitmproxy/,152,"hasattr is not enough, see https://github.com/mitmproxy/mitmproxy/issues/3794",
mitmproxy/,155,getattr may raise if o implements __getattr__.,
mitmproxy/,9,"Serialization format version. This is displayed nowhere, it just needs to be incremented by one",
mitmproxy/,10,for each change in the file format.,
mitmproxy/,34,Add commit info for non-tagged releases,
mitmproxy/,38,"PyInstaller build indicator, if using precompiled binary",
mitmproxy/,45,pragma: no cover,
mitmproxy/,79,"This requires a bit of explanation. We can't import our IO layer here,",
mitmproxy/,80,because it causes a circular import. Rather than restructuring the,
mitmproxy/,81,"code for this, we use JSON serialization, which has similar primitive",
mitmproxy/,82,"type restrictions as tnetstring, to check for conformance.",
mitmproxy/,2,noqa,
mitmproxy/,6,noqa,
mitmproxy/,48,the default implementation assumes an empty constructor. Override,
mitmproxy/,49,accordingly.,
mitmproxy/,179,"If a flow is intercepted and then duplicated, the duplicated one is not taken.",
mitmproxy/,63,less than 1 sec,
mitmproxy/,91,If IPv6 is mapped to IPv4,
mitmproxy/,31,"Translate control characters to ""safe"" characters. This implementation",
mitmproxy/,32,initially replaced them with the matching control pictures,
mitmproxy/,33,"(http://unicode.org/charts/PDF/U2400.pdf), but that turned out to render badly",
mitmproxy/,34,"with monospace fonts. We are back to ""."" therefore.",
mitmproxy/,36,x + 0x2400 for unicode control group pictures,
mitmproxy/,39,0x2421,
mitmproxy/,76,We always insert a double-quote here so that we get a single-quoted string back,
mitmproxy/,77,https://stackoverflow.com/questions/29019340/why-does-python-use-different-quotes-for-representing-strings-depending-on-their,
mitmproxy/,100,This one is difficult - we use an undocumented Python API here,
mitmproxy/,101,as per http://stackoverflow.com/a/23151714/934719,
mitmproxy/,140,16*2 + 15,
mitmproxy/,20,TODO: move into utils,
mitmproxy/,4,anything more elaborate really fails with mypy at the moment.,
mitmproxy/,10,type: ignore,
mitmproxy/,15,type: ignore,
mitmproxy/,20,type: ignore,
mitmproxy/,25,type: ignore,
mitmproxy/,26,pragma: no cover,
mitmproxy/,100,pragma: no cover,
mitmproxy/,105,pragma: windows no cover,
mitmproxy/,6,noqa,
mitmproxy/,109,pragma: no cover,
mitmproxy/,111,pragma: no cover,
mitmproxy/,139,"If an error propagates to the topmost level,",
mitmproxy/,140,"we send an HTTP error response, which is both",
mitmproxy/,141,understandable by HTTP clients and humans.,
mitmproxy/,51,1. check for filter,
mitmproxy/,65,"2. Always insert a TLS layer, even if there's neither client nor server tls.",
mitmproxy/,66,"An inline script may upgrade from http to https,",
mitmproxy/,67,in which case we need some form of TLS layer.,
mitmproxy/,78,"if the user manually sets a scheme for connect requests, we use this to decide if we",
mitmproxy/,79,want TLS or not.,
mitmproxy/,86,"3. In Http Proxy mode and Upstream Proxy mode, the next layer is fixed.",
mitmproxy/,93,4. Check for other TLS cases (e.g. after CONNECT).,
mitmproxy/,97,4. Check for --tcp,
mitmproxy/,101,5. Check for TLS ALPN (HTTP1/HTTP2),
mitmproxy/,109,6. Check for raw tcp mode,
mitmproxy/,112,expect A-Za-z,
mitmproxy/,118,7. Assume HTTP1 by default,
mitmproxy/,25,"self.handle == ""allow""",
mitmproxy/,3,noqa,
mitmproxy/,4,noqa,
mitmproxy/,13,pragma: no cover,
mitmproxy/,91,fail-safe for unhandled events,
mitmproxy/,92,pragma: no cover,
mitmproxy/,118,"message has the same length, we can reuse the same sizes",
mitmproxy/,124,just re-chunk everything into 4kB frames,
mitmproxy/,125,header len = 4 bytes without masking key and 8 bytes with masking key,
mitmproxy/,141,Use event.response to create the approprate Pong response,
mitmproxy/,7,noqa,
mitmproxy/,31,pragma: no cover,
mitmproxy/,106,swallow the message,
mitmproxy/,131,"At this point, we see only a subset of the proxy modes",
mitmproxy/,164,mypy type hints,
mitmproxy/,173,"We cannot rely on server_conn.tls_established,",
mitmproxy/,174,see https://github.com/mitmproxy/mitmproxy/issues/925,
mitmproxy/,176,Requests happening after CONNECT do not need Proxy-Authorization headers.,
mitmproxy/,212,HTTPS tasting means that ordinary errors like resolution,
mitmproxy/,213,and connection errors can happen here.,
mitmproxy/,222,"if the user specifies a response in the http_connect hook, we do not connect upstream here.",
mitmproxy/,223,https://github.com/mitmproxy/mitmproxy/pull/2473,
mitmproxy/,246,don't throw an error for disconnects that happen,
mitmproxy/,247,before/between requests.,
mitmproxy/,253,The standards are silent on what we should do with a CONNECT,
mitmproxy/,254,"request body, so although it's not common, it's allowed.",
mitmproxy/,272,Re-validate request form in case the user has changed something.,
mitmproxy/,276,TODO: We may have to use send_response_headers for HTTP2,
mitmproxy/,277,here.,
mitmproxy/,287,We optimistically guess there might be an HTTP client on the,
mitmproxy/,288,other end,
mitmproxy/,290,"Request may be malformed at this point, so we unset it.",
mitmproxy/,303,"set first line format to relative in regular mode,",
mitmproxy/,304,see https://github.com/mitmproxy/mitmproxy/issues/1759,
mitmproxy/,308,update host header in reverse proxy mode,
mitmproxy/,312,"Determine .scheme, .host and .port attributes for inline scripts. For",
mitmproxy/,313,"absolute-form requests, they are directly given in the request. For",
mitmproxy/,314,"authority-form requests, we only need to determine the request",
mitmproxy/,315,"scheme. For relative-form requests, we need to determine host and",
mitmproxy/,316,port as well.,
mitmproxy/,318,"Setting request.host also updates the host header, which we want",
mitmproxy/,319,to preserve,
mitmproxy/,323,set again as .host overwrites this.,
mitmproxy/,330,We only support RFC6455 with WebSocket version 13,
mitmproxy/,331,allow inline scripts to manipulate the client handshake,
mitmproxy/,360,"In any case, we try to reconnect at least once. This is",
mitmproxy/,361,necessary because it might be possible that we already,
mitmproxy/,362,initiated an upstream connection after clientconnect that,
mitmproxy/,363,"has already been expired, e.g consider the following event",
mitmproxy/,364,log:,
mitmproxy/,365,> clientconnect (transparent mode destination known),
mitmproxy/,366,> serverconnect (required for client tls handshake),
mitmproxy/,367,> read n% of large request,
mitmproxy/,368,"> server detects timeout, disconnects",
mitmproxy/,369,> read (100-n)% of large request,
mitmproxy/,370,> send large request upstream,
mitmproxy/,373,do not try to reconnect for HTTP2,
mitmproxy/,378,"We may have already consumed some request chunks already,",
mitmproxy/,379,so all we can do is signal downstream that upstream closed the connection.,
mitmproxy/,389,call the appropriate script hook - this is an opportunity for,
mitmproxy/,390,an inline script to set f.stream = True,
mitmproxy/,401,no further manipulation of self.server_conn beyond this point,
mitmproxy/,402,we can safely set it as the final attribute value here.,
mitmproxy/,405,response was set by an inline script.,
mitmproxy/,406,we now need to emulate the responseheaders hook.,
mitmproxy/,413,no streaming:,
mitmproxy/,414,we already received the full response from the server and can,
mitmproxy/,415,send it to the client straight away.,
mitmproxy/,418,streaming:,
mitmproxy/,419,First send the headers and then transfer the response incrementally,
mitmproxy/,433,Handle 101 Switching Protocols,
mitmproxy/,435,"Handle a successful HTTP 101 Switching Protocols Response,",
mitmproxy/,436,received after e.g. a WebSocket upgrade request.,
mitmproxy/,437,Check for WebSocket handshake,
mitmproxy/,453,should never be reached,
mitmproxy/,479,"Make set_upstream_proxy_server always available,",
mitmproxy/,480,even if there's no UpstreamConnectLayer,
mitmproxy/,491,"If there's an existing connection that doesn't match our expectations, kill it.",
mitmproxy/,496,Establish connection is necessary.,
mitmproxy/,74,Workaround for https://github.com/mitmproxy/mitmproxy/issues/313:,
mitmproxy/,75,Charles Proxy sends a CONNECT response with HTTP/1.0,
mitmproxy/,76,and no Content-Length header,
mitmproxy/,4,noqa,
mitmproxy/,11,noqa,
mitmproxy/,42,pragma: no cover,
mitmproxy/,43,stream is already closed - good,
mitmproxy/,66,pragma: no cover,
mitmproxy/,73,pragma: no cover,
mitmproxy/,87,mypy type hints,
mitmproxy/,135,pragma: no cover,
mitmproxy/,136,WebSocket over HTTP/2?,
mitmproxy/,137,CONNECT for proxying?,
mitmproxy/,175,fail-safe for unhandled events,
mitmproxy/,213,always acknowledge receved data with a WINDOW_UPDATE frame,
mitmproxy/,249,Something terrible has happened - kill everything!,
mitmproxy/,265,pushed stream ids should be unique and not dependent on race conditions,
mitmproxy/,266,only the parent stream id must be looked up first,
mitmproxy/,291,this event was already handled during stream creation,
mitmproxy/,292,HeadersFrame + Priority information as RequestReceived,
mitmproxy/,298,"if the stream is already up and running and was sent to the server,",
mitmproxy/,299,use the mapped server stream id to update priority information,
mitmproxy/,319,if the depends-on-stream is already up and running and was sent to the server,
mitmproxy/,320,use the mapped server stream id to update priority information,
mitmproxy/,323,looks like one of the streams wasn't opened yet,
mitmproxy/,324,prevent self-dependent streams which result in ProtocolError,
mitmproxy/,334,pragma: no cover,
mitmproxy/,359,read frame failed: connection closed,
mitmproxy/,372,connection terminated: GoAway,
mitmproxy/,377,pragma: no cover,
mitmproxy/,382,pragma: no cover,
mitmproxy/,435,pragma: no cover,
mitmproxy/,438,pragma: no cover,
mitmproxy/,441,pragma: no cover,
mitmproxy/,445,This layer only handles a single stream.,
mitmproxy/,446,RFC 7540 8.1: An HTTP request/response exchange fully consumes a single stream.,
mitmproxy/,474,pragma: no cover,
mitmproxy/,512,pragma: no cover,
mitmproxy/,524,nothing to do here,
mitmproxy/,533,wait until we get a free slot for a new outgoing stream,
mitmproxy/,538,keep the lock,
mitmproxy/,541,We must not assign a stream id if we are already a zombie.,
mitmproxy/,556,only send priority information if they actually came with the original HeadersFrame,
mitmproxy/,557,and not if they got updated before/after with a PriorityFrame,
mitmproxy/,575,pragma: no cover,
mitmproxy/,584,nothing to do here,
mitmproxy/,624,pragma: no cover,
mitmproxy/,652,pragma: no cover,
mitmproxy/,660,pragma: no cover,
mitmproxy/,661,zombies can be safely terminated - no need to kill them twice,
mitmproxy/,663,pragma: no cover,
mitmproxy/,665,pragma: no cover,
mitmproxy/,667,pragma: no cover,
mitmproxy/,32,https://github.com/openssl/openssl/issues/6234,
mitmproxy/,48,Shutdown connection to the other peer,
mitmproxy/,50,"We can't half-close a connection, so we just close everything here.",
mitmproxy/,51,Sockets will be cleaned up on a higher level.,
mitmproxy/,1,noqa,
mitmproxy/,8,taken from https://testssl.sh/openssl-rfc.mapping.html,
mitmproxy/,38,"0x1c: ,",
mitmproxy/,39,"0x1d: ,",
mitmproxy/,104,"0x8e: ,",
mitmproxy/,105,"0x8f: ,",
mitmproxy/,106,"0x90: ,",
mitmproxy/,107,"0x91: ,",
mitmproxy/,108,"0x92: ,",
mitmproxy/,109,"0x93: ,",
mitmproxy/,110,"0x94: ,",
mitmproxy/,111,"0x95: ,",
mitmproxy/,198,"We manually need to specify this, otherwise OpenSSL may select a non-HTTP2 cipher by default.",
mitmproxy/,199,https://ssl-config.mozilla.org/#config=old,
mitmproxy/,240,"Peek into the connection, read the initial client hello and parse it to obtain SNI and ALPN values.",
mitmproxy/,245,Without knowning the ClientHello we cannot proceed in this connection.,
mitmproxy/,248,Do we need to do a server handshake now?,
mitmproxy/,249,There are two reasons why we would want to establish TLS with the server now:,
mitmproxy/,250,"1. If we already have an existing server connection and server_tls is True,",
mitmproxy/,251,we need to establish TLS now because .connect() will not be called anymore.,
mitmproxy/,252,2. We may need information from the server connection for the client handshake.,
mitmproxy/,253,,
mitmproxy/,254,A couple of factors influence (2):,
mitmproxy/,255,2.1 There actually is (or will be) a TLS-enabled upstream connection,
mitmproxy/,256,2.2 An upstream connection is not wanted by the user if --no-upstream-cert is passed.,
mitmproxy/,257,2.3 An upstream connection is implied by add_upstream_certs_to_client_chain,
mitmproxy/,258,"2.4 The client wants to negotiate an alternative protocol in its handshake, we need to find out",
mitmproxy/,259,what is supported by the server,
mitmproxy/,260,"2.5 The client did not sent a SNI value, we don't know the certificate subject.",
mitmproxy/,287,pragma: no cover,
mitmproxy/,343,This gets triggered if we haven't established an upstream connection yet.,
mitmproxy/,360,"If establishing TLS with the server fails, we try to establish TLS with the client nonetheless",
mitmproxy/,361,to send an error message over TLS.,
mitmproxy/,391,"Some TLS clients will not fail the handshake,",
mitmproxy/,392,"but will immediately throw an ""unexpected eof"" error on the first read.",
mitmproxy/,393,"The reason for this might be difficult to find, so we try to peek here to see if it",
mitmproxy/,394,raises ann error.,
mitmproxy/,411,We only support http/1.1 and h2.,
mitmproxy/,412,"If the server only supports spdy (next to http/1.1), it may select that",
mitmproxy/,413,"and mitmproxy would enter TCP passthrough mode, which we want to avoid.",
mitmproxy/,422,"If the client has already negotiated an ALP, then force the",
mitmproxy/,423,server to use the same. This can only happen if the host gets,
mitmproxy/,424,changed after the initial connection was established. E.g.:,
mitmproxy/,425,"* the client offers http/1.1 and h2,",
mitmproxy/,426,"* the initial host is only capable of http/1.1,",
mitmproxy/,427,"* then the first server connection negotiates http/1.1,",
mitmproxy/,428,"* but after the server_conn change, the new host offers h2",
mitmproxy/,429,* which results in garbage because the layers don' match.,
mitmproxy/,432,"We pass through the list of ciphers send by the client, because some HTTP/2 servers",
mitmproxy/,433,will select a non-HTTP/2 compatible cipher from our default list and then hang up,
mitmproxy/,434,because it's incompatible with h2. :-),
mitmproxy/,478,"In normal operation, the server address should always be known at this point.",
mitmproxy/,479,"However, we may just want to establish TLS so that we can send an error message to the client,",
mitmproxy/,480,in which case the address can be None.,
mitmproxy/,484,Should we incorporate information from the server certificate?,
mitmproxy/,498,Also add SNI values.,
mitmproxy/,504,"RFC 2818: If a subjectAltName extension of type dNSName is present, that MUST be used as the identity.",
mitmproxy/,505,"In other words, the Common Name is irrelevant then.",
mitmproxy/,10,Parse Client Greeting,
mitmproxy/,19,Send Server Greeting,
mitmproxy/,27,Parse Connect Request,
mitmproxy/,36,"We always connect lazily, but we need to pretend to the client that we connected.",
mitmproxy/,41,"dummy value, we don't have an upstream connection yet.",
mitmproxy/,24,,
mitmproxy/,25,Resolver,
mitmproxy/,106,,
mitmproxy/,107,Windows API,
mitmproxy/,109,from Windows' error.h,
mitmproxy/,116,,
mitmproxy/,117,IPv6,
mitmproxy/,118,,
mitmproxy/,120,https://msdn.microsoft.com/en-us/library/windows/desktop/aa366896(v=vs.85).aspx,
mitmproxy/,134,https://msdn.microsoft.com/en-us/library/windows/desktop/aa366905(v=vs.85).aspx,
mitmproxy/,145,,
mitmproxy/,146,IPv4,
mitmproxy/,147,,
mitmproxy/,149,https://msdn.microsoft.com/en-us/library/windows/desktop/aa366913(v=vs.85).aspx,
mitmproxy/,161,https://msdn.microsoft.com/en-us/library/windows/desktop/aa366921(v=vs.85).aspx,
mitmproxy/,215,"no need to update size, that's already done.",
mitmproxy/,236,"no need to update size, that's already done.",
mitmproxy/,243,Auto-Detect local IP. This is required as re-injecting to 127.0.0.1 does not work.,
mitmproxy/,244,https://stackoverflow.com/questions/166506/finding-local-ip-addresses-using-pythons-stdlib,
mitmproxy/,256,"The same goes for IPv6, with the added difficulty that .connect() fails if",
mitmproxy/,257,the target network is not reachable.,
mitmproxy/,335,"If this fails, we most likely have a connection from an external client.",
mitmproxy/,336,"In this, case we always want to proxy the request.",
mitmproxy/,342,"It's not really clear why we need to recalculate the checksum here,",
mitmproxy/,343,but this was identified as necessary in https://github.com/mitmproxy/mitmproxy/pull/3174.,
mitmproxy/,411,really weird linting error here.,
mitmproxy/,412,noqa,
mitmproxy/,437,"print(f""IPv4: {self.ipv4_address}, IPv6: {self.ipv6_address}"")",
mitmproxy/,456,"The proxy server responds to the client. To the client,",
mitmproxy/,457,this response should look like it has been sent by the real target,
mitmproxy/,463,Block all ICMP requests (which are sent on Windows by default).,
mitmproxy/,464,"If we don't do this, our proxy machine may send an ICMP redirect to the client,",
mitmproxy/,465,which instructs the client to directly connect to the real gateway,
mitmproxy/,466,if they are on the same network.,
mitmproxy/,475,TODO: Make sure that server can be killed cleanly. That's a bit difficult as we don't have access to,
mitmproxy/,476,controller.should_exit when this is called.,
mitmproxy/,502,"print("" * Redirect client -> server to proxy"")",
mitmproxy/,503,"print(f""{packet.src_addr}:{packet.src_port} -> {packet.dst_addr}:{packet.dst_port}"")",
mitmproxy/,508,"We do need to inject to an external IP here, 127.0.0.1 does not work.",
mitmproxy/,522,"We need a handle on the NETWORK layer. the local handle is not guaranteed to exist,",
mitmproxy/,523,so we use the response handle.,
mitmproxy/,531,"print("" * Adjust proxy -> client"")",
mitmproxy/,5,Python's socket module does not have these constants,
mitmproxy/,11,Get the original destination on Linux.,
mitmproxy/,12,"In theory, this can be done using the following syscalls:",
mitmproxy/,13,"sock.getsockopt(socket.SOL_IP, SO_ORIGINAL_DST, 16)",
mitmproxy/,14,"sock.getsockopt(SOL_IPV6, SO_ORIGINAL_DST, 28)",
mitmproxy/,15,,
mitmproxy/,16,"In practice, it is a bit more complex:",
mitmproxy/,17,1. We cannot rely on sock.family to decide which syscall to use because of IPv4-mapped,
mitmproxy/,18,"IPv6 addresses. If sock.family is AF_INET6 while sock.getsockname() is ::ffff:127.0.0.1,",
mitmproxy/,19,we need to call the IPv4 version to get a result.,
mitmproxy/,20,"2. We can't just try the IPv4 syscall and then do IPv6 if that doesn't work,",
mitmproxy/,21,because doing the wrong syscall can apparently crash the whole Python runtime.,
mitmproxy/,22,"As such, we use a heuristic to check which syscall to do.",
mitmproxy/,23,either 127.0.0.1 or ::ffff:127.0.0.1,
mitmproxy/,25,"the struct returned here should only have 8 bytes, but invoking sock.getsockopt",
mitmproxy/,26,with buflen=8 doesn't work.,
mitmproxy/,35,noqa,
mitmproxy/,12,"We may get an ipv4-mapped ipv6 address here, e.g. ::ffff:127.0.0.1.",
mitmproxy/,13,"Those still appear as ""127.0.0.1"" in the table, so we need to strip the prefix.",
mitmproxy/,17,ALL tcp 192.168.1.13:57474 -> 23.205.82.58:443       ESTABLISHED:ESTABLISHED,
mitmproxy/,20,ALL tcp 2a01:e35:8bae:50f0:9d9b:ef0d:2de3:b733[58505] -> 2606:4700:30::681f:4ad0[443]       ESTABLISHED:ESTABLISHED,
mitmproxy/,28,strip parentheses for FreeBSD pfctl,
mitmproxy/,10,noqa,
mitmproxy/,22,workaround for https://bugs.python.org/issue29515,
mitmproxy/,23,Python 3.6 for Windows is missing a constant,
mitmproxy/,120,TLS connection was shut down cleanly,
mitmproxy/,123,From the OpenSSL docs:,
mitmproxy/,124,"If the underlying BIO is non-blocking, SSL_read() will also return when the",
mitmproxy/,125,underlying BIO could not satisfy the needs of SSL_read() to continue the,
mitmproxy/,126,operation. In this case a call to SSL_get_error with the return value of,
mitmproxy/,127,SSL_read() will yield SSL_ERROR_WANT_READ or SSL_ERROR_WANT_WRITE.,
mitmproxy/,235,We already indicate that we close our end.,
mitmproxy/,236,"may raise ""Transport endpoint is not connected"" on Linux",
mitmproxy/,239,Section 4.2.2.13 of RFC 1122 tells us that a close() with any pending,
mitmproxy/,240,readable data could lead to an immediate RST being sent (which is the,
mitmproxy/,241,case on Windows).,
mitmproxy/,242,http://ia600609.us.archive.org/22/items/TheUltimateSo_lingerPageOrWhyIsMyTcpNotReliable/the-ultimate-so_linger-page-or-why-is-my-tcp-not-reliable.html,
mitmproxy/,243,,
mitmproxy/,244,This in turn results in the following issue: If we send an error page,
mitmproxy/,245,"to the client and then close the socket, the RST may be received by",
mitmproxy/,246,the client before the error page and the users sees a connection,
mitmproxy/,247,"error rather than the error page. Thus, we try to empty the read",
mitmproxy/,248,buffer on Windows first. (see,
mitmproxy/,249,https://github.com/mitmproxy/mitmproxy/issues/527#issuecomment-93782988),
mitmproxy/,250,,
mitmproxy/,252,pragma: no cover,
mitmproxy/,253,We cannot rely on the shutdown()-followed-by-read()-eof technique,
mitmproxy/,254,proposed by the page above: Some remote machines just don't send,
mitmproxy/,255,"a TCP FIN, which would leave us in the unfortunate situation that",
mitmproxy/,256,"recv() would block infinitely. As a workaround, we set a timeout",
mitmproxy/,257,here even if we are in blocking mode.,
mitmproxy/,260,limit at a megabyte so that we don't read infinitely,
mitmproxy/,262,may raise a timeout/disconnect exception.,
mitmproxy/,266,Now we can close the other half as well.,
mitmproxy/,284,"Ideally, we would use the Buffered IO in Python 3 by default.",
mitmproxy/,285,"Unfortunately, the implementation of .peek() is broken for n>1 bytes,",
mitmproxy/,286,as it may just return what's left in the buffer and not all the bytes we want.,
mitmproxy/,287,"As a workaround, we just use unbuffered sockets directly.",
mitmproxy/,288,https://mail.python.org/pipermail/python-dev/2009-June/089986.html,
mitmproxy/,317,"If we have an SSL connection, wfile.close == connection.close",
mitmproxy/,318,(We call _FileLike.set_descriptor(conn)),
mitmproxy/,319,"Closing the socket is not our task, therefore we don't call close",
mitmproxy/,320,then.,
mitmproxy/,373,"Make sure to close the real socket, not the SSL proxy.",
mitmproxy/,374,"OpenSSL is really good at screwing up, i.e. when trying to recv from a failed connection,",
mitmproxy/,375,it tries to renegotiate...,
mitmproxy/,403,Keep all server certificates in a list,
mitmproxy/,412,some parties (cuckoo sandbox) need to hook this,
mitmproxy/,416,Based on the official socket.create_connection implementation of Python 3.6.,
mitmproxy/,417,https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py,
mitmproxy/,432,pragma: windows no cover  pragma: osx no cover,
mitmproxy/,434,socket.IP_TRANSPARENT might not be available on every OS and Python version,
mitmproxy/,451,pragma: no cover,
mitmproxy/,515,pragma: no cover,
mitmproxy/,561,"First try to bind an IPv6 socket, attempting to enable IPv4 support if the OS supports it.",
mitmproxy/,562,This allows us to accept connections for ::1 and 127.0.0.1 on the same socket.,
mitmproxy/,563,"Only works if self.address == """"",
mitmproxy/,576,"Binding to an IPv6 + IPv4 socket failed, lets fall back to IPv4 only.",
mitmproxy/,587,"Binding to an IPv4 only socket failed, lets fall back to IPv6 only.",
mitmproxy/,601,pragma: no cover,
mitmproxy/,602,This catches situations where the underlying connection is,
mitmproxy/,603,closed beneath us. Syscalls on the connection object at this,
mitmproxy/,604,"point returns EINVAL. If this happens, we close the socket and",
mitmproxy/,605,move on.,
mitmproxy/,651,"If a thread has persisted after interpreter exit, the module might be",
mitmproxy/,652,none.,
mitmproxy/,661,pragma: no cover,
mitmproxy/,4,Allow underscore in host name,
mitmproxy/,5,"Note: This could be a DNS label, a hostname, a FQDN, or an IP",
mitmproxy/,17,RFC1035: 255 bytes or less.,
mitmproxy/,22,DNS hostname,
mitmproxy/,25,IPv4/IPv6 address,
mitmproxy/,44,"defaulting to https/port 443 may annoy some folks, but it's secure-by-default.",
mitmproxy/,50,IPv6 brackets,
mitmproxy/,199,We use tnoa here as ntop is not commonly available on Windows.,
mitmproxy/,1,To enable all SSL methods use: SSLv23,
mitmproxy/,2,then add options to disable certain methods,
mitmproxy/,3,https://bugs.launchpad.net/pyopenssl/+bug/1020632/comments/3,
mitmproxy/,40,SSLv23_METHOD + NO_SSLv2 + NO_SSLv3 == TLS 1.0+,
mitmproxy/,41,TLSv1_METHOD would be TLS 1.0 only,
mitmproxy/,86,"required for functools.wraps, which pyOpenSSL uses.",
mitmproxy/,93,this is a horrendous workaround for https://github.com/mitmproxy/mitmproxy/pull/3692#issuecomment-608454530:,
mitmproxy/,94,OpenSSL 1.1.1f decided to not make connection.master_key() fail in the SSL_CB_HANDSHAKE_DONE callback.,
mitmproxy/,95,"To support various OpenSSL versions and still log master secrets, we now mark connections where this has",
mitmproxy/,96,"happened and then try again on the next event. This is ugly and shouldn't be done, but eventually we",
mitmproxy/,97,replace this with context.set_keylog_callback anyways.,
mitmproxy/,112,careful: exception type changes between pyOpenSSL versions,
mitmproxy/,173,Options (NO_SSLv2/3),
mitmproxy/,177,Verify Options (NONE/PEER and trusted CAs),
mitmproxy/,191,Workaround for,
mitmproxy/,192,https://github.com/pyca/pyopenssl/issues/190,
mitmproxy/,193,https://github.com/mitmproxy/mitmproxy/issues/472,
mitmproxy/,194,Options already set before are not cleared.,
mitmproxy/,197,Cipher List,
mitmproxy/,204,SSLKEYLOGFILE,
mitmproxy/,209,advertise application layer protocols,
mitmproxy/,212,select application layer protocol,
mitmproxy/,216,pragma: no cover,
mitmproxy/,273,SSL_VERIFY_NONE: The handshake will be continued regardless of the verification result.,
mitmproxy/,283,Manually enable hostname verification on the context object.,
mitmproxy/,284,https://wiki.openssl.org/index.php/Hostname_validation,
mitmproxy/,286,"Matching on the CN is disabled in both Chrome and Firefox, so we disable it, too.",
mitmproxy/,287,https://www.chromestatus.com/feature/4981025180483584,
mitmproxy/,296,Client Certs,
mitmproxy/,313,Return true to prevent cert verification error,
mitmproxy/,369,SNI callback happens during do_handshake(),
mitmproxy/,386,"TLS ClientHello magic, works for SSLv3, TLSv1.0, TLSv1.1, TLSv1.2",
mitmproxy/,387,http://www.moserware.com/2009/06/first-few-milliseconds-of-https.html#client-hello,
mitmproxy/,477,exclude handshake header.,
mitmproxy/,163,pragma: no cover,
mitmproxy/,14,This regex extracts & splits the host header into host and port.,
mitmproxy/,15,Handles the edge case of IPv6 addresses containing colons.,
mitmproxy/,16,https://bugzilla.mozilla.org/show_bug.cgi?id=45891,
mitmproxy/,109,"Headers can be list or dict, we differentiate here.",
mitmproxy/,119,Assign this manually to update the content-length header.,
mitmproxy/,209,There's no non-strict mode for IDNA encoding.,
mitmproxy/,210,"We don't want this operation to fail though, so we try",
mitmproxy/,211,utf8 as a last resort.,
mitmproxy/,218,Update host header,
mitmproxy/,242,Update any existing headers.,
mitmproxy/,248,Only add the correct new header.,
mitmproxy/,322,Prefer the original address if host header has an unexpected form,
mitmproxy/,387,This needs to be a tuple so that it's immutable.,
mitmproxy/,388,"Otherwise, this would fail silently:",
mitmproxy/,389,"request.path_components.append(""foo"")",
mitmproxy/,38,See the StickyCookieTest for a weird cookie that only makes sense,
mitmproxy/,39,if we take the last part.,
mitmproxy/,44,"TODO: Should be List[Tuple[str,str]]?",
mitmproxy/,71,Skip the first quote,
mitmproxy/,72,initialize in case the loop doesn't run.,
mitmproxy/,149,Special handling of attributes,
mitmproxy/,151,'expires' values can contain commas in them so they need to,
mitmproxy/,152,be handled separately.,
mitmproxy/,154,We actually bank on the fact that the expires value WILL,
mitmproxy/,155,"contain a comma. Things will fail, if they don't.",
mitmproxy/,157,'3' is just a heuristic we use to determine whether we've,
mitmproxy/,158,only read a part of the expires value and we should read more.,
mitmproxy/,163,"as long as there's a ""="", we consider it a pair",
mitmproxy/,169,comma marks the beginning of a new cookie,
mitmproxy/,309,This can happen when the expires tag is invalid.,
mitmproxy/,310,"reddit.com sends a an expires tag like this: ""Thu, 31 Dec",
mitmproxy/,311,"2037 23:59:59 GMT"", which is valid RFC 1123, but not",
mitmproxy/,312,strictly correct according to the cookie spec. Browsers,
mitmproxy/,313,appear to parse this tolerantly - maybe we should too.,
mitmproxy/,314,"For now, we just ignore this.",
mitmproxy/,355,If no expiration information was provided with the cookie,
mitmproxy/,372,First pair is always a new cookie,
mitmproxy/,32,If boundary is found in value then raise ValueError,
mitmproxy/,14,noqa,
mitmproxy/,17,We have a shared single-element cache for encoding and decoding.,
mitmproxy/,18,"This is quite useful in practice, e.g.",
mitmproxy/,19,"flow.request.content = flow.request.content.replace(b""foo"", b""bar"")",
mitmproxy/,20,"does not require an .encode() call if content does not contain b""foo""",
mitmproxy/,151,"If the zstd stream is streamed without a size header,",
mitmproxy/,152,try decoding with a 10MiB output buffer,
mitmproxy/,50,100,
mitmproxy/,54,200,
mitmproxy/,64,300,
mitmproxy/,71,306 not defined??,
mitmproxy/,74,400,
mitmproxy/,95,500,
mitmproxy/,88,"Headers can be list or dict, we differentiate here.",
mitmproxy/,98,Assign this manually to update the content-length header.,
mitmproxy/,127,Encoding: http://stackoverflow.com/a/16674906/934719,
mitmproxy/,2,noqa,
mitmproxy/,100,A client may illegally specify a byte -> str encoding here (e.g. utf8),
mitmproxy/,125,So we have an invalid content-encoding?,
mitmproxy/,126,Let's remove it!,
mitmproxy/,183,Use GB 18030 as the superset of GB2312 and GBK to fix common encoding problems on Chinese websites.,
mitmproxy/,218,Fall back to UTF-8 and update the content-type header.,
mitmproxy/,24,Size of Ascii character after encoding is 1 byte which is same as its size,
mitmproxy/,25,But non-Ascii character's size after encoding will be more than its size,
mitmproxy/,48,Returns None if port number invalid in Py3.5. Will throw ValueError in Py3.6,
mitmproxy/,6,pylint: line-too-long,
mitmproxy/,8,"A collection of (name, shortcut, string) tuples.",
mitmproxy/,13,noqa,
mitmproxy/,16,noqa,
mitmproxy/,19,noqa,
mitmproxy/,22,noqa,
mitmproxy/,25,noqa,
mitmproxy/,28,noqa,
mitmproxy/,31,noqa,
mitmproxy/,34,noqa,
mitmproxy/,37,noqa,
mitmproxy/,40,noqa,
mitmproxy/,7,See also: http://lucumr.pocoo.org/2013/7/2/the-updated-guide-to-unicode/,
mitmproxy/,10,"While headers _should_ be ASCII, it's not uncommon for certain headers to be utf-8 encoded.",
mitmproxy/,84,content_type -> content-type,
mitmproxy/,93,Headers can be folded,
mitmproxy/,98,Headers are case-insensitive,
mitmproxy/,175,"We get a ValueError if the replacement removed the "": """,
mitmproxy/,176,"There's not much we can do about this, so we just keep the header as-is.",
mitmproxy/,58,more accurate timestamp_start,
mitmproxy/,98,more accurate timestamp_start,
mitmproxy/,194,Determine response size according to,
mitmproxy/,195,http://tools.ietf.org/html/rfc7230#section-3.3,
mitmproxy/,234,Possible leftover from previous message,
mitmproxy/,247,We want to provide a better error message.,
mitmproxy/,296,We want to provide a better error message.,
mitmproxy/,301,handle missing message gracefully,
mitmproxy/,334,"we do have coverage of this, but coverage.py does not detect it.",
mitmproxy/,335,pragma: no cover,
mitmproxy/,339,continued header,
mitmproxy/,18,"RFC 6455, Section 5.2 - Base Framing Protocol",
mitmproxy/,28,"RFC 6455, Section 7.4.1 - Defined Status Codes",
mitmproxy/,135,'!H' pack as 16 bit unsigned short,
mitmproxy/,136,add 2 byte extended payload length,
mitmproxy/,139,'!Q' = pack as 64 bit unsigned long long,
mitmproxy/,140,add 8 bytes extended payload length,
mitmproxy/,163,payload_length > 125 indicates you need to read more bytes,
mitmproxy/,164,to get the actual payload length,
mitmproxy/,169,length_code == 127:,
mitmproxy/,172,masking key only present if mask bit set,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,84,"TODO: Improve this handling. We are technically UTF-8, meaning",
mitmproxy/,85,that characters could be more than one byte long. This will fail if we have,
mitmproxy/,86,characters outside of the US-ASCII range,
mitmproxy/,1,!/usr/bin/env python3,
mitmproxy/,46,empty on init,
mitmproxy/,51,Load up code pages,
mitmproxy/,52,Currently there are 25 code pages as per MS-ASWBXML,
mitmproxy/,55,region Code Page Initialization,
mitmproxy/,56,Code Page 0: AirSync,
mitmproxy/,57,region AirSync Code Page,
mitmproxy/,96,endregion,
mitmproxy/,98,Code Page 1: Contacts,
mitmproxy/,99,region Contacts Code Page,
mitmproxy/,159,endregion,
mitmproxy/,161,Code Page 2: Email,
mitmproxy/,162,region Email Code Page,
mitmproxy/,213,endregion,
mitmproxy/,215,Code Page 3: AirNotify - retired,
mitmproxy/,216,region AirNotify Code Page,
mitmproxy/,221,endregion,
mitmproxy/,223,Code Page 4: Calendar,
mitmproxy/,224,region Calendar Code Page,
mitmproxy/,274,endregion,
mitmproxy/,276,Code Page 5: Move,
mitmproxy/,277,region Move Code Page,
mitmproxy/,291,endregion,
mitmproxy/,293,Code Page 6: ItemEstimate,
mitmproxy/,294,region ItemEstimate Code Page,
mitmproxy/,310,endregion,
mitmproxy/,312,Code Page 7: FolderHierarchy,
mitmproxy/,313,region FolderHierarchy Code Page,
mitmproxy/,335,endregion,
mitmproxy/,337,Code Page 8: MeetingResponse,
mitmproxy/,338,region MeetingResponse Code Page,
mitmproxy/,353,endregion,
mitmproxy/,355,Code Page 9: Tasks,
mitmproxy/,356,region Tasks Code Page,
mitmproxy/,392,endregion,
mitmproxy/,394,Code Page 10: ResolveRecipients,
mitmproxy/,395,region ResolveRecipients Code Page,
mitmproxy/,426,endregion,
mitmproxy/,428,Code Page 11: ValidateCert,
mitmproxy/,429,region ValidateCert Code Page,
mitmproxy/,441,endregion,
mitmproxy/,443,Code Page 12: Contacts2,
mitmproxy/,444,region Contacts2 Code Page,
mitmproxy/,460,endregion,
mitmproxy/,462,Code Page 13: Ping,
mitmproxy/,463,region Ping Code Page,
mitmproxy/,469,"Per MS-ASWBXML, this tag is not used by protocol",
mitmproxy/,478,endregion,
mitmproxy/,480,Code Page 14: Provision,
mitmproxy/,481,region Provision Code Page,
mitmproxy/,540,endregion,
mitmproxy/,542,Code Page 15: Search,
mitmproxy/,543,region Search Code Page,
mitmproxy/,576,endregion,
mitmproxy/,578,Code Page 16: GAL,
mitmproxy/,579,region GAL Code Page,
mitmproxy/,599,endregion,
mitmproxy/,601,Code Page 17: AirSyncBase,
mitmproxy/,602,region AirSyncBase Code Page,
mitmproxy/,630,endregion,
mitmproxy/,632,Code Page 18: Settings,
mitmproxy/,633,region Settings Code Page,
mitmproxy/,677,endregion,
mitmproxy/,679,Code Page 19: DocumentLibrary,
mitmproxy/,680,region DocumentLibrary Code Page,
mitmproxy/,694,endregion,
mitmproxy/,696,Code Page 20: ItemOperations,
mitmproxy/,697,region ItemOperations Code Page,
mitmproxy/,724,endregion,
mitmproxy/,726,Code Page 21: ComposeMail,
mitmproxy/,727,region ComposeMail Code Page,
mitmproxy/,747,endregion,
mitmproxy/,749,Code Page 22: Email2,
mitmproxy/,750,region Email2 Code Page,
mitmproxy/,771,endregion,
mitmproxy/,773,Code Page 23: Notes,
mitmproxy/,774,region Notes Code Page,
mitmproxy/,785,endregion,
mitmproxy/,787,Code Page 24: RightsManagement,
mitmproxy/,788,region RightsManagement Code Page,
mitmproxy/,814,endregion,
mitmproxy/,815,endregion,
mitmproxy/,818,note xmlDoc has .childNodes and .parentNode,
mitmproxy/,833,Version is ignored,
mitmproxy/,836,Public Identifier is ignored,
mitmproxy/,841,Character set,
mitmproxy/,842,"Currently only UTF-8 is supported, throw if something else",
mitmproxy/,847,String table length,
mitmproxy/,848,"This should be 0, MS-ASWBXML does not use string tables",
mitmproxy/,853,Now we should be at the body of the data.,
mitmproxy/,854,Add the declaration,
mitmproxy/,895,not sure if this should be set on every node or not,
mitmproxy/,896,"newNode.setAttribute(""xmlns"", self.codePages[self.currentCodePage].xmlns)",
mitmproxy/,198,All request-attributes are case-sensitive.,
mitmproxy/,203,We just return the first element if,
mitmproxy/,204,multiple elements exist with the same key.,
mitmproxy/,21,"When annotating classmethods, ""self"" is passed as the first argument.",
mitmproxy/,22,"To support both class and static methods, we accept a variable number of arguments",
mitmproxy/,23,and take the last one as our actual hook object.,
mitmproxy/,43,Basic options,
mitmproxy/,54,Proxy options,
mitmproxy/,67,Proxy SSL options,
mitmproxy/,73,Client replay,
mitmproxy/,77,Server replay,
mitmproxy/,84,Replacements,
mitmproxy/,88,Set headers,
mitmproxy/,6,this is here for the version check to work on Python 2.,
mitmproxy/,11,"This must be before any mitmproxy imports, as they already break!",
mitmproxy/,12,Keep all other imports below with the 'noqa' magic comment.,
mitmproxy/,22,noqa,
mitmproxy/,42,"also reduce log verbosity if --options or --commands is passed,",
mitmproxy/,43,we don't want log messages from regular startup then.,
mitmproxy/,64,pragma: no cover,
mitmproxy/,76,To make migration from 2.x to 3.0 bearable.,
mitmproxy/,120,Not supported on Windows,
mitmproxy/,123,Make sure that we catch KeyboardInterrupts on Windows.,
mitmproxy/,124,https://stackoverflow.com/a/36925722/934719,
mitmproxy/,140,pragma: no cover,
mitmproxy/,151,pragma: no cover,
mitmproxy/,165,type: ignore,
mitmproxy/,170,pragma: no cover,
mitmproxy/,15,noqa,
mitmproxy/,42,".alpn_proto_negotiated is bytes, we need to decode that.",
mitmproxy/,48,"There are some bytes in here as well, let's skip it until we have them in the UI.",
mitmproxy/,104,we just need some kind of id.,
mitmproxy/,118,Writing arrays on the top level is ok nowadays.,
mitmproxy/,119,http://flask.pocoo.org/docs/0.11/security/#json-security,
mitmproxy/,169,FIXME: Add a facility to addon.view to safely access the store,
mitmproxy/,185,https://github.com/tornadoweb/tornado/issues/645,
mitmproxy/,198,raise an error if inherited class doesn't specify its own instance.,
mitmproxy/,214,pragma: no cover,
mitmproxy/,401,if error:,
mitmproxy/,402,add event log,
mitmproxy/,465,try:,
mitmproxy/,466,"optmanager.save(self.master.options, CONFIG_PATH, True)",
mitmproxy/,467,except Exception as err:,
mitmproxy/,468,"raise APIError(400, ""{}"".format(err))",
mitmproxy/,498,make mitmweb accessible by IP only to prevent DNS rebinding.,
mitmproxy/,22,We want to overwrite the static files to keep track of the update.,
mitmproxy/,58,don't use raw_content here as this is served with a default content type,
mitmproxy/,64,content_view,
mitmproxy/,88,TODO: make this a command at some point.,
mitmproxy/,104,pragma: no cover,
mitmproxy/,77,Start search at focus + 1,
mitmproxy/,4,noqa,
mitmproxy/,16,noqa,
mitmproxy/,114,we need to pass the message off-band because it's not hashable,
mitmproxy/,127,Give hint that you have to tab for the response.,
mitmproxy/,131,"If the users has a wide terminal, he gets fewer lines; this should not be an issue.",
mitmproxy/,146,round up to the next line.,
mitmproxy/,164,"This will always force an ascii representation of headers. For example, if the server sends a",
mitmproxy/,165,,
mitmproxy/,166,X-Authors: Made with ❤ in Hamburg,
mitmproxy/,167,,
mitmproxy/,168,"header, mitmproxy will display the following:",
mitmproxy/,169,,
mitmproxy/,170,X-Authors: Made with \xe2\x9d\xa4 in Hamburg.,
mitmproxy/,171,,
mitmproxy/,172,The alternative would be to just use the header's UTF-8 representation and maybe,
mitmproxy/,173,"do `str.replace(""\t"", ""\\t"")` to exempt tabs from urwid's special characters escaping [1].",
mitmproxy/,174,"That would in some terminals allow rendering UTF-8 characters, but the mapping",
mitmproxy/,175,"wouldn't be bijective, i.e. a user couldn't distinguish ""\\t"" and ""\t"".",
mitmproxy/,176,"Also, from a security perspective, a mitmproxy user couldn't be fooled by homoglyphs.",
mitmproxy/,177,,
mitmproxy/,178,1) https://github.com/mitmproxy/mitmproxy/issues/1833,
mitmproxy/,179,"https://github.com/urwid/urwid/blob/6608ee2c9932d264abd1171468d833b7a4082e13/urwid/display_common.py#L35-L36,",
mitmproxy/,157,This is essentially a copypasta from urwid.Pile's keypress handler.,
mitmproxy/,158,"So much for ""closed for modification, but open for extension"".",
mitmproxy/,92,Act here,
mitmproxy/,152,This is essentially a copypasta from urwid.Pile's keypress handler.,
mitmproxy/,153,"So much for ""closed for modification, but open for extension"".",
mitmproxy/,5,noqa,
mitmproxy/,44,The stub implementation of positions can go once this issue is resolved:,
mitmproxy/,45,https://github.com/urwid/urwid/issues/294,
mitmproxy/,1,noqa,
mitmproxy/,2,Low-color themes should ONLY use the standard foreground and background,
mitmproxy/,3,colours listed here:,
mitmproxy/,4,,
mitmproxy/,5,http://urwid.org/manual/displayattributes.html,
mitmproxy/,6,,
mitmproxy/,14,Status bar & heading,
mitmproxy/,17,Help,
mitmproxy/,20,Options,
mitmproxy/,24,List and Connections,
mitmproxy/,35,Hex view,
mitmproxy/,38,Grid Editor,
mitmproxy/,41,Commander,
mitmproxy/,107,Status bar & heading,
mitmproxy/,112,Help,
mitmproxy/,117,Options,
mitmproxy/,123,List and Connections,
mitmproxy/,170,Hex view,
mitmproxy/,173,Grid Editor,
mitmproxy/,207,Status bar & heading,
mitmproxy/,212,Help,
mitmproxy/,217,Options,
mitmproxy/,223,List and Connections,
mitmproxy/,270,Hex view,
mitmproxy/,273,Grid Editor,
mitmproxy/,300,Solarized palette in Urwid-style terminal high-colour offsets,
mitmproxy/,301,See: http://ethanschoonover.com/solarized,
mitmproxy/,326,Status bar & heading,
mitmproxy/,331,Help,
mitmproxy/,335,Options,
mitmproxy/,341,List and Connections,
mitmproxy/,380,Hex view,
mitmproxy/,383,Grid Editor,
mitmproxy/,401,Status bar & heading,
mitmproxy/,406,Help,
mitmproxy/,410,Options,
mitmproxy/,416,List and Connections,
mitmproxy/,454,Hex view,
mitmproxy/,457,Grid Editor,
mitmproxy/,4,Show a status message in the action bar,
mitmproxy/,7,Prompt for input,
mitmproxy/,10,Prompt for a path,
mitmproxy/,13,Prompt for a single keystroke,
mitmproxy/,16,Prompt for a command,
mitmproxy/,19,Call a callback in N seconds,
mitmproxy/,22,"Focus the body, footer or header of the main window",
mitmproxy/,25,Fired when settings change,
mitmproxy/,28,Fired when a flow changes,
mitmproxy/,31,Fired when the flow list or focus changes,
mitmproxy/,34,Pop and push view state onto a stack,
mitmproxy/,38,Fired when the key bindings change,
mitmproxy/,197,Bust the focus widget cache,
mitmproxy/,276,This is essentially a copypasta from urwid.Pile's keypress handler.,
mitmproxy/,277,"So much for ""closed for modification, but open for extension"".",
mitmproxy/,41,Make sure that we don't propagate cursor events outside of the widget.,
mitmproxy/,42,"Otherwise, in a horizontal layout, urwid's Pile would change the focused widget",
mitmproxy/,43,if we cannot scroll any further.,
mitmproxy/,45,awkward as they don't implement a full dict api,
mitmproxy/,293,"args: (size, event, button, col, row)",
mitmproxy/,322,"replace urwid's SI/SO, which produce artifacts under WSL.",
mitmproxy/,323,at some point we may figure out what they actually do.,
mitmproxy/,12,noqa,
mitmproxy/,122,"if no EDITOR is set, assume 'vi'",
mitmproxy/,149,read-only to remind the user that this is a view function,
mitmproxy/,161,hm which one should get priority?,
mitmproxy/,250,We're now outside of the call context...,
mitmproxy/,277,We're now outside of the call context...,
mitmproxy/,338,FIME: Also set focus?,
mitmproxy/,408,"This shouldn't be necessary once this command is ""console.edit @focus"",",
mitmproxy/,409,but for now it is.,
mitmproxy/,440,Fix an issue caused by some editors when editing a,
mitmproxy/,441,request/response body. Many editors make it hard to save a,
mitmproxy/,442,file without a terminating newline on the last line. When,
mitmproxy/,443,"editing message bodies, this can cause problems. For now, I",
mitmproxy/,444,just strip the newlines off the end of the body when we return,
mitmproxy/,445,from an editor.,
mitmproxy/,513,type: ignore,
mitmproxy/,8,"Title is only required for windows, not overlay components",
mitmproxy/,6,noqa,
mitmproxy/,76,unicode ellipsis for the end of shortened message,
mitmproxy/,82,First line of messages with a few lines must end with prompt.,
mitmproxy/,175,Timed refresh time in seconds,
mitmproxy/,147,This is extremely awkward. We need a better way to match nav keys only.,
mitmproxy/,173,type: ignore,
mitmproxy/,180,sort operations by timestamp,
mitmproxy/,14,Detect Windows Subsystem for Linux,
mitmproxy/,60,"We use dividechars=2 below, which already adds two empty spaces",
mitmproxy/,148,TODO: unicode?,
mitmproxy/,180,Work around https://github.com/urwid/urwid/pull/330,
mitmproxy/,265,bad URL,
mitmproxy/,272,://,
mitmproxy/,482,shorten to 5 chars max,
mitmproxy/,87,TODO: Next row on enter?,
mitmproxy/,219,"Whatever vals is, make it a list of rows containing lists of column values.",
mitmproxy/,11,noqa,
mitmproxy/,27,This is the same for both edit and display.,
mitmproxy/,46,urwid forces a different name for a subclass.,
mitmproxy/,1,noqa,
mitmproxy/,2,noqa,
mitmproxy/,51,Cursor is always within the range [0:len(buffer)].,
mitmproxy/,77,"Means we just received the leader, so we need to give a blank",
mitmproxy/,78,text to the widget to render or it crashes,
mitmproxy/,150,We don't want to insert a space before the command,
mitmproxy/,20,http://www.xml.com/pub/a/2001/07/25/namingparts.html - this is close enough for what we do.,
mitmproxy/,22,https://www.w3.org/TR/html5/syntax.html#void-elements,
mitmproxy/,84,"This fails for attributes that contain an unescaped "">""",
mitmproxy/,118,Add spacing to first line so that we dedent in cases like this:,
mitmproxy/,119,<li>This is,
mitmproxy/,120,example text,
mitmproxy/,121,over multiple lines,
mitmproxy/,122,</li>,
mitmproxy/,141,<div></div> (start tag),
mitmproxy/,143,<div></div> (end tag),
mitmproxy/,174,this closing tag has no start tag. let's keep indentation as-is.,
mitmproxy/,200,self-closing,
mitmproxy/,209,pragma: no cover,
mitmproxy/,220,TODO:,
mitmproxy/,221,"We should really have the message text as str here,",
mitmproxy/,222,not the message content as bytes.,
mitmproxy/,223,https://github.com/mitmproxy/mitmproxy/issues/1662#issuecomment-266192578,
mitmproxy/,226,TODO:,
mitmproxy/,227,Performance: Don't render the whole document right away.,
mitmproxy/,228,"Let's wait with this until we have a sequence-like interface,",
mitmproxy/,229,this thing is reasonably fast right now anyway.,
mitmproxy/,1,Default view cutoff *in lines*,
mitmproxy/,6,FIXME: This should be either bytes or str ultimately.,
mitmproxy/,35,pragma: no cover,
mitmproxy/,1,noqa,
mitmproxy/,1,noqa,
mitmproxy/,17,noqa,
mitmproxy/,18,noqa,
mitmproxy/,41,TODO: auto-select a different name (append an integer?),
mitmproxy/,137,Third-party viewers can fail in unexpected ways...,
mitmproxy/,151,The order in which ContentViews are added is important!,
mitmproxy/,33,Add newlines,
mitmproxy/,38,"Fix incorrect "":"" placement",
mitmproxy/,40,"Fix no space after "",""",
mitmproxy/,43,indent,
mitmproxy/,63,pragma: no cover,
mitmproxy/,19,there is also a fallback in the auto view for image/*.,
mitmproxy/,48,"r.stream may already be a callable, which we want to preserve.",
mitmproxy/,32,Could be implemented using async libraries,
mitmproxy/,56,This is used for fast look-ups over bodies already dumped to database.,
mitmproxy/,57,This permits to enforce one-to-one relationship between flow and body table.,
mitmproxy/,117,"Some live components of flows cannot be serialized, but they are needed to ensure correct functionality.",
mitmproxy/,118,"We solve this by keeping a list of tuples which ""save"" those components for each flow id, eventually",
mitmproxy/,119,adding them back when needed.,
mitmproxy/,278,A same flow could be at the same time in hot and db storage. We want the most updated version.,
mitmproxy/,45,pragma: no cover,
mitmproxy/,54,"If we have a channel, run script hooks.",
mitmproxy/,60,"In all modes, we directly connect to the server displayed",
mitmproxy/,198,Prepare the flow for replay,
mitmproxy/,203,https://github.com/mitmproxy/mitmproxy/issues/2197,
mitmproxy/,47,We're already streaming - stop the previous stream and restart,
mitmproxy/,5,noqa,
mitmproxy/,11,noqa,
mitmproxy/,141,Handlers,
mitmproxy/,201,TODO: check for multiple auth options,
mitmproxy/,210,Is this connection authenticated by a previous HTTP CONNECT?,
mitmproxy/,23,"the fullname is not unique among scripts, so if there already is an existing script with said",
mitmproxy/,24,"fullname, remove it.",
mitmproxy/,35,type: ignore,
mitmproxy/,105,"We're already running, so we have to explicitly register and",
mitmproxy/,106,configure the addon,
mitmproxy/,186,The machinations below are to ensure that:,
mitmproxy/,187,- Scripts remain in the same order,
mitmproxy/,188,- Scripts are not initialized un-necessarily. If only a,
mitmproxy/,189,"script's order in the script list has changed, it is just",
mitmproxy/,190,moved.,
mitmproxy/,211,"If we're already running, we configure and tell the addon",
mitmproxy/,212,we're up and running.,
mitmproxy/,90,pragma: no cover,
mitmproxy/,91,Need to think about how to test this. This function is scheduled,
mitmproxy/,92,"onto the event loop, where a sys.stdin mock has no effect.",
mitmproxy/,3,noqa,
mitmproxy/,25,type: ignore,
mitmproxy/,27,type: ignore,
mitmproxy/,59,FIXME: We now know that Cookie.py screws up some cookies with,
mitmproxy/,60,valid RFC 822/1123 datetime specifications for expiry. Sigh.,
mitmproxy/,65,Remove the cookie from jar,
mitmproxy/,68,If all cookies of a dom_port_path have been removed,
mitmproxy/,69,then remove it from the jar itself,
mitmproxy/,88,FIXME: we need to formalise this...,
mitmproxy/,2,noqa,
mitmproxy/,79,We should ideally escape here before trying to compile,
mitmproxy/,13,https://stackoverflow.com/questions/40674914/google-chrome-path-in-windows-10,
mitmproxy/,16,Linux binary names from Python's webbrowser module.,
mitmproxy/,28,FIXME: We have a weird bug where the contract for configure is not followed and it is never called with,
mitmproxy/,29,confdir or command_history as updated.,
mitmproxy/,30,pragma: no cover,
mitmproxy/,40,vacuum history so that it doesn't grow indefinitely.,
mitmproxy/,69,Functionality to provide a filtered list that can be iterated through.,
mitmproxy/,7,These get over-ridden by the save execution context. Keep them around so we,
mitmproxy/,8,can log directly.,
mitmproxy/,7,noqa,
mitmproxy/,24,we can already indent here,
mitmproxy/,157,"We hide ""normal"" HTTP 1.",
mitmproxy/,202,This aligns the HTTP response code with the HTTP request method:,
mitmproxy/,203,127.0.0.1:59519: GET http://example.com/,
mitmproxy/,204,<< 304 Not Modified 0b,
mitmproxy/,45,Handlers,
mitmproxy/,35,Handlers,
mitmproxy/,21,a bit of clean-up - these headers should be automatically set by curl/httpie,
mitmproxy/,34,type: ignore,
mitmproxy/,44,shlex.quote doesn't support a bytes object,
mitmproxy/,45,see https://github.com/python/cpython/pull/10871,
mitmproxy/,92,type: ignore,
mitmproxy/,93,type: ignore,
mitmproxy/,24,noqa,
mitmproxy/,26,The underlying sorted list implementation expects the sort key to be stable,
mitmproxy/,27,"for the lifetime of the object. However, if we sort by size, for instance,",
mitmproxy/,28,the sort order changes as the flow progresses through its lifecycle. We,
mitmproxy/,29,address this through two means:,
mitmproxy/,30,,
mitmproxy/,31,- Let order keys cache the sort value by flow ID.,
mitmproxy/,32,,
mitmproxy/,33,- Add a facility to refresh items in the list by removing and re-adding them,
mitmproxy/,34,when they are updated.,
mitmproxy/,41,pragma: no cover,
mitmproxy/,111,Should we show only marked flows?,
mitmproxy/,127,"The sig_view* signals broadcast events that affect the view. That is,",
mitmproxy/,128,an update to a flow in the store but not in the view does not trigger,
mitmproxy/,129,a signal. All signals are called after the view has been updated.,
mitmproxy/,133,Signals that the view should be refreshed completely,
mitmproxy/,136,The sig_store* signals broadcast events that affect the underlying,
mitmproxy/,137,"store. If a flow is removed from just the view, sig_view_remove is",
mitmproxy/,138,triggered. If it is removed from the store while it is also in the,
mitmproxy/,139,"view, both sig_store_remove and sig_view_remove are triggered.",
mitmproxy/,141,Signals that the store should be refreshed completely,
mitmproxy/,188,Reflect some methods to the efficient underlying implementation,
mitmproxy/,218,Focus,
mitmproxy/,260,Order,
mitmproxy/,299,Filter,
mitmproxy/,318,View Updates,
mitmproxy/,341,View Settings,
mitmproxy/,381,Flows,
mitmproxy/,404,We manually pass the index here because multiple flows may have the same,
mitmproxy/,405,"sorting key, and we cannot reconstruct the index from that.",
mitmproxy/,458,"Do this to get a new ID, so we can load the same file N times and",
mitmproxy/,459,get new flows each time. It would be more efficient to just have a,
mitmproxy/,460,.newid() method or something.,
mitmproxy/,488,View Properties,
mitmproxy/,518,Event handlers,
mitmproxy/,571,This is a tad complicated. The sortedcontainers,
mitmproxy/,572,implementation assumes that the order key is stable. If,
mitmproxy/,573,it changes mid-way Very Bad Things happen. We detect when,
mitmproxy/,574,"this happens, and re-fresh the item.",
mitmproxy/,581,The value was not in the view,
mitmproxy/,642,We only have to act if we don't have a focus element,
mitmproxy/,42,FIXME: We're doing this because our proxy core is terminally confused,
mitmproxy/,43,"at the moment. Ideally, we should be able to check if we're in",
mitmproxy/,44,"reverse proxy mode at the HTTP layer, so that scripts can put the",
mitmproxy/,45,proxy in reverse proxy mode for specific requests.,
mitmproxy/,73,type: ignore,
mitmproxy/,98,We're appending to a file that already exists and has content,
mitmproxy/,112,type: ignore,
mitmproxy/,133,type: ignore,
mitmproxy/,24,pragma: no cover,
mitmproxy/,109,FIXME: this will become view.mark later,
mitmproxy/,122,FIXME: this will become view.mark.toggle later,
mitmproxy/,145,FIXME: this will become view.revert later,
mitmproxy/,184,type: ignore,
mitmproxy/,217,type: ignore,
mitmproxy/,8,"will be overridden in the addon, setting this here so that the Flask app can be run standalone.",
mitmproxy/,9,noqa,
mitmproxy/,62,convert_unicode needs to be called for every dual release and the first py3-only release,
mitmproxy/,72,convert_unicode needs to be called for every dual release and the first py3-only release,
mitmproxy/,91,convert_unicode needs to be called for every dual release and the first py3-only release,
mitmproxy/,126,This is an empty migration to transition to the new versioning scheme.,
mitmproxy/,185,pragma: no cover,
mitmproxy/,236,"Historically, we used the mitmproxy minor version tuple as the flow format version.",
mitmproxy/,53,"This uses a deque to collect output fragments in reverse order,",
mitmproxy/,54,then joins them together at the end.  It's measurably faster,
mitmproxy/,55,than creating all the intermediate strings.,
mitmproxy/,102,Use repr() for float rather than str().,
mitmproxy/,103,It round-trips more accurately.,
mitmproxy/,104,Probably unnecessary in later python versions that,
mitmproxy/,105,use David Gay's ftoa routines.,
mitmproxy/,166,Read the length prefix one char at a time.,
mitmproxy/,167,Note that the netstring spec explicitly forbids padding zeros.,
mitmproxy/,169,we want to detect this special case.,
mitmproxy/,216,type: ignore,
mitmproxy/,223,type: ignore,
mitmproxy/,234,"Parse out data length, type and remaining string.",
mitmproxy/,243,"This fires if len(data) < dlen, meaning we don't need",
mitmproxy/,244,to further validate that data is the right length.,
mitmproxy/,246,Parse the data based on the type tag.,
mitmproxy/,2,noqa,
mitmproxy/,40,FIXME: This cast hides a lack of dynamic type checking,
mitmproxy/,54,Error is due to EOF,
mitmproxy/,18,ugly fix to set None in empty str or bytes fields,
mitmproxy/,1,Generated by the protocol buffer compiler.  DO NOT EDIT!,
mitmproxy/,2,source: http.proto,
mitmproxy/,11,@@protoc_insertion_point(imports),
mitmproxy/,718,@@protoc_insertion_point(class_scope:HTTPFlow),
mitmproxy/,725,@@protoc_insertion_point(class_scope:HTTPRequest),
mitmproxy/,732,@@protoc_insertion_point(class_scope:HTTPResponse),
mitmproxy/,739,@@protoc_insertion_point(class_scope:HTTPError),
mitmproxy/,746,@@protoc_insertion_point(class_scope:HTTPHeader),
mitmproxy/,753,@@protoc_insertion_point(class_scope:Address),
mitmproxy/,760,@@protoc_insertion_point(class_scope:ClientConnection),
mitmproxy/,767,@@protoc_insertion_point(class_scope:ServerConnection),
mitmproxy/,774,@@protoc_insertion_point(class_scope:TLSExtension),
mitmproxy/,779,@@protoc_insertion_point(module_scope),
mitmproxy/release/cibuild.py,1,!/usr/bin/env python3,
mitmproxy/release/cibuild.py,23,pragma: no cover,
mitmproxy/release/cibuild.py,128,ZipFile and tarfile have slightly different APIs. Fix that.,
mitmproxy/release/cibuild.py,221,"For production releases, we require strict version equality",
mitmproxy/release/cibuild.py,225,Commits on maintenance branches don't need the dev suffix. This,
mitmproxy/release/cibuild.py,226,allows us to incorporate and test commits between tagged releases.,
mitmproxy/release/cibuild.py,227,"For snapshots, we only ensure that mitmproxy/version.py contains a",
mitmproxy/release/cibuild.py,228,dev release.,
mitmproxy/release/cibuild.py,332,pragma: no cover,
mitmproxy/release/cibuild.py,347,pragma: no cover,
mitmproxy/release/cibuild.py,359,smoke-test the newly built docker image,
mitmproxy/release/cibuild.py,375,pragma: no cover,
mitmproxy/release/cibuild.py,379,PyInstaller 3.2 does not bundle pydivert's Windivert binaries,
mitmproxy/release/cibuild.py,384,https://virtualenv.pypa.io/en/latest/userguide.html#windows-notes,
mitmproxy/release/cibuild.py,385,scripts and executables on Windows go in ENV\Scripts\ instead of ENV/bin/,
mitmproxy/release/cibuild.py,388,PyInstaller < 3.2 does not handle Python 3.5's ucrt correctly.,
mitmproxy/release/cibuild.py,402,We can't have a folder and a file with the same name.,
mitmproxy/release/cibuild.py,405,"This is PyInstaller, so it messes up paths.",
mitmproxy/release/cibuild.py,406,We need to make sure that we are in the spec folder.,
mitmproxy/release/cibuild.py,425,"This is PyInstaller, so setting a",
mitmproxy/release/cibuild.py,426,different log level obviously breaks it :-),
mitmproxy/release/cibuild.py,427,"""--log-level"", ""WARN"",",
mitmproxy/release/cibuild.py,433,Delete the spec file - we're good without.,
mitmproxy/release/cibuild.py,436,Test if it works at all O:-),
mitmproxy/release/cibuild.py,441,Remove _main suffix from mitmproxy executable,
mitmproxy/release/cibuild.py,456,pragma: no cover,
mitmproxy/release/cibuild.py,509,pragma: no cover,
mitmproxy/release/cibuild.py,517,pragma: no cover,
mitmproxy/release/cibuild.py,538,pragma: no cover,
mitmproxy/release/cibuild.py,583,pragma: no cover,
mitmproxy/release/hooks/hook-cryptography.py,1,Taken from the latest pyinstaller master on 2016-11-27 (0729a2b).,
mitmproxy/release/hooks/hook-cryptography.py,2,flake8: noqa,
mitmproxy/release/hooks/hook-cryptography.py,4,-----------------------------------------------------------------------------,
mitmproxy/release/hooks/hook-cryptography.py,5,"Copyright (c) 2005-2016, PyInstaller Development Team.",
mitmproxy/release/hooks/hook-cryptography.py,6,,
mitmproxy/release/hooks/hook-cryptography.py,7,Distributed under the terms of the GNU General Public License with exception,
mitmproxy/release/hooks/hook-cryptography.py,8,for distributing bootloader.,
mitmproxy/release/hooks/hook-cryptography.py,9,,
mitmproxy/release/hooks/hook-cryptography.py,10,"The full license is in the file COPYING.txt, distributed with this software.",
mitmproxy/release/hooks/hook-cryptography.py,11,-----------------------------------------------------------------------------,
mitmproxy/release/hooks/hook-cryptography.py,25,get the package data so we can load the backends,
mitmproxy/release/hooks/hook-cryptography.py,28,Add the backends as hidden imports,
mitmproxy/release/hooks/hook-cryptography.py,31,Add the OpenSSL FFI binding modules as hidden imports,
mitmproxy/release/hooks/hook-cryptography.py,35,Include the cffi extensions as binaries in a subfolder named like the package.,
mitmproxy/release/hooks/hook-cryptography.py,36,The cffi verifier expects to find them inside the package directory for,
mitmproxy/release/hooks/hook-cryptography.py,37,the main module. We cannot use hiddenimports because that would add the modules,
mitmproxy/release/hooks/hook-cryptography.py,38,outside the package.,
mitmproxy/release/hooks/hook-pkg_resources.py,1,flake8: noqa,
mitmproxy/release/hooks/hook-pkg_resources.py,3,temporary fix for https://github.com/pypa/setuptools/issues/1963,
mitmproxy/release/hooks/hook-pkg_resources.py,4,can be removed when we upgrade to PyInstaller 3.7.,
mitmproxy/examples/simple/websocket_messages.py,6,get the latest message,
mitmproxy/examples/simple/websocket_messages.py,9,was the message sent from the client or server?,
mitmproxy/examples/simple/websocket_messages.py,15,manipulate the message content,
mitmproxy/examples/simple/websocket_messages.py,19,kill the message and not send it to the other endpoint,
mitmproxy/examples/simple/send_reply_from_proxy.py,9,"pretty_url takes the ""Host"" header of the request into account, which",
mitmproxy/examples/simple/send_reply_from_proxy.py,10,is useful in transparent mode where we usually only have the IP otherwise.,
mitmproxy/examples/simple/send_reply_from_proxy.py,14,(optional) status code,
mitmproxy/examples/simple/send_reply_from_proxy.py,15,(optional) content,
mitmproxy/examples/simple/send_reply_from_proxy.py,16,(optional) headers,
mitmproxy/examples/simple/wsgi_flask_app.py,18,"Host app at the magic domain ""proxapp.local"" on port 80. Requests to this",
mitmproxy/examples/simple/wsgi_flask_app.py,19,domain and port combination will now be routed to the WSGI app instance.,
mitmproxy/examples/simple/wsgi_flask_app.py,21,"SSL works too, but the magic domain needs to be resolvable from the mitmproxy machine due to mitmproxy's design.",
mitmproxy/examples/simple/wsgi_flask_app.py,22,mitmproxy will connect to said domain and use serve its certificate (unless --no-upstream-cert is set),
mitmproxy/examples/simple/wsgi_flask_app.py,23,but won't send any data.,
mitmproxy/examples/simple/wsgi_flask_app.py,24,"mitmproxy.ctx.master.apps.add(app, ""example.com"", 443)",
mitmproxy/examples/simple/io_write_dumpfile.py,11,noqa,
mitmproxy/examples/simple/redirect_requests.py,8,"pretty_host takes the ""Host"" header of the request into account,",
mitmproxy/examples/simple/redirect_requests.py,9,which is useful in transparent mode where we usually only have the IP,
mitmproxy/examples/simple/redirect_requests.py,10,otherwise.,
mitmproxy/examples/simple/modify_body_inject_iframe.py,1,(this script works best with --anticache),
mitmproxy/examples/simple/link_expander.py,1,This script determines if request is an HTML webpage and if so seeks out,
mitmproxy/examples/simple/link_expander.py,2,"relative links (<a href=""./about.html"">) and expands them to absolute links",
mitmproxy/examples/simple/link_expander.py,3,In practice this can be used to front an indexing spider that may not have the capability to expand relative page links.,
mitmproxy/examples/simple/link_expander.py,4,Usage: mitmdump -s link_expander.py or mitmproxy -s link_expander.py,
mitmproxy/examples/simple/link_expander.py,26,Uncomment the following to print the expansion mapping,
mitmproxy/examples/simple/link_expander.py,27,"print(""{0} -> {1}"".format(*map))",
mitmproxy/examples/simple/modify_form.py,6,"If there's already a form, one can just add items to the dict:",
mitmproxy/examples/simple/modify_form.py,9,One can also just pass new form data.,
mitmproxy/examples/simple/modify_form.py,10,This sets the proper content type and overrides the body.,
mitmproxy/examples/simple/io_read_dumpfile.py,1,!/usr/bin/env python,
mitmproxy/examples/simple/io_read_dumpfile.py,2,,
mitmproxy/examples/simple/io_read_dumpfile.py,3,Simple script showing how to read a mitmproxy dump file,
mitmproxy/examples/simple/io_read_dumpfile.py,4,,
mitmproxy/examples/pathod/test_context.py,10,Start pathod in a separate thread,
mitmproxy/examples/pathod/test_context.py,12,Get a URL for a pathod spec,
mitmproxy/examples/pathod/test_context.py,14,... and request it,
mitmproxy/examples/pathod/test_context.py,17,Check the returned data,
mitmproxy/examples/pathod/test_context.py,21,Check pathod's internal log,
mitmproxy/examples/pathod/libpathod_pathoc.py,1,!/usr/bin/env python,
mitmproxy/examples/pathod/test_setupall.py,21,Clear the pathod logs between tests,
mitmproxy/examples/pathod/test_setupall.py,25,Get a URL for a pathod spec,
mitmproxy/examples/pathod/test_setupall.py,27,... and request it,
mitmproxy/examples/pathod/test_setupall.py,30,Check the returned data,
mitmproxy/examples/pathod/test_setupall.py,34,Check pathod's internal log,
mitmproxy/examples/pathod/test_setup.py,19,Get a URL for a pathod spec,
mitmproxy/examples/pathod/test_setup.py,21,... and request it,
mitmproxy/examples/pathod/test_setup.py,24,Check the returned data,
mitmproxy/examples/pathod/test_setup.py,28,Check pathod's internal log,
mitmproxy/examples/addons/events-websocket-specific.py,6,Websocket lifecycle,
mitmproxy/examples/addons/events-tcp-specific.py,5,TCP lifecycle,
mitmproxy/examples/addons/events-http-specific.py,5,HTTP lifecycle,
mitmproxy/examples/addons/events.py,13,Network lifecycle,
mitmproxy/examples/addons/events.py,42,General lifecycle,
mitmproxy/examples/complex/change_upstream_proxy.py,4,This scripts demonstrates how mitmproxy can switch to a second/different upstream proxy,
mitmproxy/examples/complex/change_upstream_proxy.py,5,in upstream proxy mode.,
mitmproxy/examples/complex/change_upstream_proxy.py,6,,
mitmproxy/examples/complex/change_upstream_proxy.py,7,Usage: mitmdump -U http://default-upstream-proxy.local:8080/ -s change_upstream_proxy.py,
mitmproxy/examples/complex/change_upstream_proxy.py,8,,
mitmproxy/examples/complex/change_upstream_proxy.py,9,"If you want to change the target server, you should modify flow.request.host and flow.request.port",
mitmproxy/examples/complex/change_upstream_proxy.py,13,Poor man's loadbalancing: route every second domain through the alternative proxy.,
mitmproxy/examples/complex/change_upstream_proxy.py,22,"If the decision is done by domain, one could also modify the server address here.",
mitmproxy/examples/complex/change_upstream_proxy.py,23,We do it after CONNECT here to have the request data available as well.,
mitmproxy/examples/complex/change_upstream_proxy.py,27,type: ignore,
mitmproxy/examples/complex/har_dump.py,16,noqa,
mitmproxy/examples/complex/har_dump.py,23,noqa,
mitmproxy/examples/complex/har_dump.py,31,A list of server seen till now is maintained so we can avoid,
mitmproxy/examples/complex/har_dump.py,32,using 'connect' time for entries that use an existing connection.,
mitmproxy/examples/complex/har_dump.py,61,-1 indicates that these values do not apply to current request,
mitmproxy/examples/complex/har_dump.py,75,Calculate raw timings from timestamps. DNS timings can not be calculated,
mitmproxy/examples/complex/har_dump.py,76,for lack of a way to measure it. The same goes for HAR blocked.,
mitmproxy/examples/complex/har_dump.py,77,mitmproxy will open a server connection as soon as it receives the host,
mitmproxy/examples/complex/har_dump.py,78,"and port from the client connection. So, the time spent waiting is actually",
mitmproxy/examples/complex/har_dump.py,79,spent waiting between request.timestamp_end and response.timestamp_start,
mitmproxy/examples/complex/har_dump.py,80,thus it correlates to HAR wait instead.,
mitmproxy/examples/complex/har_dump.py,89,"HAR timings are integers in ms, so we re-encode the raw timings to that format.",
mitmproxy/examples/complex/har_dump.py,95,full_time is the sum of all timings.,
mitmproxy/examples/complex/har_dump.py,96,Timings set to -1 will be ignored as per spec.,
mitmproxy/examples/complex/har_dump.py,101,Response body size and encoding,
mitmproxy/examples/complex/har_dump.py,138,Store binary data as base64,
mitmproxy/examples/complex/har_dump.py,191,HAR only needs some attributes,
mitmproxy/examples/complex/har_dump.py,196,These keys need to be boolean!,
mitmproxy/examples/complex/har_dump.py,200,Expiration time needs to be formatted,
mitmproxy/examples/complex/xss_scanner.py,50,The actual payload is put between a frontWall and a backWall to make it easy,
mitmproxy/examples/complex/xss_scanner.py,51,to locate the payload with regular expressions,
mitmproxy/examples/complex/xss_scanner.py,57,A XSSData is a named tuple with the following fields:,
mitmproxy/examples/complex/xss_scanner.py,58,- url -> str,
mitmproxy/examples/complex/xss_scanner.py,59,- injection_point -> str,
mitmproxy/examples/complex/xss_scanner.py,60,- exploit -> str,
mitmproxy/examples/complex/xss_scanner.py,61,- line -> str,
mitmproxy/examples/complex/xss_scanner.py,67,A SQLiData is named tuple with the following fields:,
mitmproxy/examples/complex/xss_scanner.py,68,- url -> str,
mitmproxy/examples/complex/xss_scanner.py,69,- injection_point -> str,
mitmproxy/examples/complex/xss_scanner.py,70,- regex -> str,
mitmproxy/examples/complex/xss_scanner.py,71,- dbms -> str,
mitmproxy/examples/complex/xss_scanner.py,122,ensure the path ends in a /,
mitmproxy/examples/complex/xss_scanner.py,124,the path must be a string while the payload is bytes,
mitmproxy/examples/complex/xss_scanner.py,155,queries is a list of parameters where each parameter is set to the payload,
mitmproxy/examples/complex/xss_scanner.py,167,"If it is None, then there is no info to log",
mitmproxy/examples/complex/xss_scanner.py,192,Regexes taken from Damn Small SQLi Scanner: https://github.com/stamparm/DSSS/blob/master/dsss.py#L17,
mitmproxy/examples/complex/xss_scanner.py,207,type: ignore,
mitmproxy/examples/complex/xss_scanner.py,216,"A qc is either ' or """,
mitmproxy/examples/complex/xss_scanner.py,225,Whether the next chunk of len(substring) chars is the substring,
mitmproxy/examples/complex/xss_scanner.py,230,Whether this char is escaped with a \,
mitmproxy/examples/complex/xss_scanner.py,290,"if there is a < then lxml will interpret that as a tag, so only search for the stuff before it",
mitmproxy/examples/complex/xss_scanner.py,312,Only convert the body to bytes if needed,
mitmproxy/examples/complex/xss_scanner.py,315,Regex for between 24 and 72 (aka 24*3) characters encapsulated by the walls,
mitmproxy/examples/complex/xss_scanner.py,319,Where the string is injected into the HTML,
mitmproxy/examples/complex/xss_scanner.py,325,Whether you can inject:,
mitmproxy/examples/complex/xss_scanner.py,326,open angle brackets,
mitmproxy/examples/complex/xss_scanner.py,327,close angle brackets,
mitmproxy/examples/complex/xss_scanner.py,328,single quotes,
mitmproxy/examples/complex/xss_scanner.py,329,double quotes,
mitmproxy/examples/complex/xss_scanner.py,330,forward slashes,
mitmproxy/examples/complex/xss_scanner.py,331,semicolons,
mitmproxy/examples/complex/xss_scanner.py,332,equals sign,
mitmproxy/examples/complex/xss_scanner.py,333,e.g. <script>PAYLOAD</script>,
mitmproxy/examples/complex/xss_scanner.py,338,e.g. <script>t='PAYLOAD';</script>,
mitmproxy/examples/complex/xss_scanner.py,343,"e.g. <script>t=""PAYLOAD"";</script>",
mitmproxy/examples/complex/xss_scanner.py,349,e.g. <a href='PAYLOAD'>Test</a>,
mitmproxy/examples/complex/xss_scanner.py,355,"e.g. <a href=""PAYLOAD"">Test</a>",
mitmproxy/examples/complex/xss_scanner.py,361,e.g. <a href=PAYLOAD>Test</a>,
mitmproxy/examples/complex/xss_scanner.py,366,e.g. <html><a href=PAYLOAD>Test</a>,
mitmproxy/examples/complex/xss_scanner.py,371,"e.g. <a href=""PAYLOAD"">Test</a>",
mitmproxy/examples/complex/xss_scanner.py,376,e.g. <a href='PAYLOAD'>Test</a>,
mitmproxy/examples/complex/xss_scanner.py,381,e.g. <a href=PAYLOAD>Test</a>,
mitmproxy/examples/complex/xss_scanner.py,386,e.g. <html>PAYLOAD</html>,
mitmproxy/examples/complex/xss_scanner.py,396,response is mitmproxy's entry point,
mitmproxy/examples/complex/xss_scanner.py,402,Example: http://xss.guru/unclaimedScriptTag.html,
mitmproxy/examples/complex/xss_scanner.py,407,Example: https://daviddworken.com/vulnerableReferer.php,
mitmproxy/examples/complex/xss_scanner.py,411,Example: https://daviddworken.com/vulnerableUA.php,
mitmproxy/examples/complex/xss_scanner.py,416,Example: https://daviddworken.com/vulnerable.php?name=,
mitmproxy/examples/complex/tls_passthrough.py,46,A server_address -> interception results mapping,
mitmproxy/examples/complex/tls_passthrough.py,110,inline script hooks below.,
mitmproxy/examples/complex/tls_passthrough.py,138,We try to intercept.,
mitmproxy/examples/complex/tls_passthrough.py,139,Monkey-Patch the layer to get feedback from the TLSLayer if interception worked.,
mitmproxy/examples/complex/tls_passthrough.py,142,"We don't intercept - reply with a pass-through layer and add a ""skipped"" entry.",
mitmproxy/examples/complex/dup_and_replay.py,5,Avoid an infinite loop by not replaying already replayed requests,
mitmproxy/examples/complex/dup_and_replay.py,9,"Only interactive tools have a view. If we have one, add a duplicate entry",
mitmproxy/examples/complex/dup_and_replay.py,10,for our flow.,
mitmproxy/examples/complex/nonblocking.py,6,Remove this and see what happens,
mitmproxy/examples/complex/nonblocking.py,8,"This is ugly in mitmproxy's UI, but you don't want to use mitmproxy.ctx.log from a different thread.",
mitmproxy/examples/complex/dns_spoofing.py,28,This regex extracts splits the host header into host and port.,
mitmproxy/examples/complex/dns_spoofing.py,29,Handles the edge case of IPv6 addresses containing colons.,
mitmproxy/examples/complex/dns_spoofing.py,30,https://bugzilla.mozilla.org/show_bug.cgi?id=45891,
mitmproxy/examples/complex/block_dns_over_https.py,11,known DoH providers' hostnames and IP addresses to block,
mitmproxy/examples/complex/block_dns_over_https.py,76,additional hostnames to block,
mitmproxy/examples/complex/block_dns_over_https.py,81,additional IPs to block,
mitmproxy/examples/complex/block_dns_over_https.py,88,convert to sets for faster lookups,
mitmproxy/examples/complex/block_dns_over_https.py,130,Header 'Accept: application/dns-json' is required in Cloudflare's DoH JSON API,
mitmproxy/examples/complex/block_dns_over_https.py,131,or they return a 400 HTTP response code,
mitmproxy/examples/complex/block_dns_over_https.py,135,Google's DoH JSON API is https://dns.google/resolve,
mitmproxy/examples/complex/block_dns_over_https.py,151,used in example in RFC 8484 (see https://tools.ietf.org/html/rfc8484#section-4.1.1),
mitmproxy/examples/complex/,1,!/usr/bin/env python,
mitmproxy/examples/complex/,2,,
mitmproxy/examples/complex/,3,Helper tool to enable/disable OS X proxy and wrap mitmproxy,
mitmproxy/examples/complex/,4,,
mitmproxy/examples/complex/,5,Get usage information with:,
mitmproxy/examples/complex/,6,,
mitmproxy/examples/complex/,7,mitmproxywrapper.py -h,
mitmproxy/examples/complex/,8,,
mitmproxy/examples/complex/,144,"parser.add_argument('--honeyproxy', action='store_true', help='run honeyproxy instead of mitmproxy')",
mitmproxy/examples/complex/,157,elif args.honeyproxy:,
mitmproxy/examples/complex/,158,wrapper.wrap_honeyproxy(),
mitmproxy/examples/complex/sslstrip.py,7,noqa,
mitmproxy/examples/complex/sslstrip.py,11,set of SSL/TLS capable hosts,
mitmproxy/examples/complex/sslstrip.py,19,do not force https redirection,
mitmproxy/examples/complex/sslstrip.py,22,proxy connections to SSL-enabled hosts,
mitmproxy/examples/complex/sslstrip.py,27,We need to update the request destination to whatever is specified in the host header:,
mitmproxy/examples/complex/sslstrip.py,28,Having no TLS Server Name Indication from the client and just an IP address as request.host,
mitmproxy/examples/complex/sslstrip.py,29,"in transparent mode, TLS server name certificate validation would fail.",
mitmproxy/examples/complex/sslstrip.py,38,strip links in response body,
mitmproxy/examples/complex/sslstrip.py,41,strip meta tag upgrade-insecure-requests in response body,
mitmproxy/examples/complex/sslstrip.py,45,strip links in 'Location' header,
mitmproxy/examples/complex/sslstrip.py,53,strip upgrade-insecure-requests in Content-Security-Policy header,
mitmproxy/examples/complex/sslstrip.py,60,strip secure flag from 'Set-Cookie' headers,
mitmproxy/docs/render_examples.py,1,!/usr/bin/env python3,
mitmproxy/docs/scripts/filters.py,1,!/usr/bin/env python3,
mitmproxy/docs/scripts/options.py,1,!/usr/bin/env python3,
