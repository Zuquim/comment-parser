file path,line #,comment,satd
celery/setup.py,1,!/usr/bin/env python,
celery/setup.py,2,-*- coding: utf-8 -*-,
celery/setup.py,19,-*- Python Versions -*-,
celery/setup.py,52,-*- Extras -*-,
celery/setup.py,89,-*- Distribution Meta -*-,
celery/setup.py,119,-*- Requirements -*-,
celery/setup.py,167,-*- Long Description -*-,
celery/setup.py,176,-*- Command: setup.py test -*-,
celery/setup.py,190,-*- %%% -*-,
celery/examples/periodic-tasks/myapp.py,35,"XXX The below 'myapp' is the name of this module, for generating",
celery/examples/periodic-tasks/myapp.py,36,task names when executed as __main__.,
celery/examples/periodic-tasks/myapp.py,39,## add result backend here if needed.,
celery/examples/periodic-tasks/myapp.py,40,backend='rpc',
celery/examples/periodic-tasks/myapp.py,53,Calls say('hello') every 10 seconds.,
celery/examples/periodic-tasks/myapp.py,56,See periodic tasks user guide for more examples:,
celery/examples/periodic-tasks/myapp.py,57,http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html,
celery/examples/app/myapp.py,32,## add result backend here if needed.,
celery/examples/app/myapp.py,33,backend='rpc',
celery/examples/next-steps/setup.py,27,"'requests',",
celery/examples/next-steps/proj/,10,"Optional configuration, see the application user guide.",
celery/examples/,1,!/usr/bin/env python,
celery/examples/,7,Assumed to be in the same directory.,
celery/examples/,3,noqa,
celery/examples/,9,Uncomment the next two lines to enable the admin:,
celery/examples/,10,from django.contrib import admin,
celery/examples/,11,admin.autodiscover(),
celery/examples/,5,Django settings for celery_http_gateway project.,
celery/examples/,15,"('Your Name', 'your_email@domain.com'),",
celery/examples/,39,Local time zone for this installation. Choices can be found here:,
celery/examples/,40,https://en.wikipedia.org/wiki/List_of_tz_zones_by_name,
celery/examples/,41,although not all choices may be available on all operating systems.,
celery/examples/,42,If running in a Windows environment this must be set to the same as your,
celery/examples/,43,system time zone.,
celery/examples/,46,Language code for this installation. All choices can be found here:,
celery/examples/,47,http://www.i18nguy.com/unicode/language-identifiers.html,
celery/examples/,52,"If you set this to False, Django will make some optimizations so as not",
celery/examples/,53,to load the internationalization machinery.,
celery/examples/,56,Absolute path to the directory that holds media.,
celery/examples/,57,Example: '/home/media/media.lawrence.com/',
celery/examples/,60,URL that handles the media served from MEDIA_ROOT. Make sure to use a,
celery/examples/,61,trailing slash if there's a path component (optional in other cases).,
celery/examples/,62,"Examples: 'http://media.lawrence.com', 'http://example.com/media/'",
celery/examples/,65,"URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a",
celery/examples/,66,trailing slash.,
celery/examples/,67,"Examples: 'http://foo.com/media/', '/media/'.",
celery/examples/,70,"Make this unique, and don't share it with anybody.",
celery/examples/,71,"XXX TODO FIXME Set this secret key to anything you want, just change it!",
celery/examples/,74,List of callables that know how to import templates from various sources.,
celery/examples/,89,"Put strings here, like '/home/html/django_templates' or",
celery/examples/,90,'C:/www/django/templates'.,
celery/examples/,91,"Always use forward slashes, even on Windows.",
celery/examples/,92,"Don't forget to use absolute paths, not relative paths.",
celery/examples/django/manage.py,1,!/usr/bin/env python,
celery/examples/django/proj/urls.py,3,noqa,
celery/examples/django/proj/urls.py,5,Uncomment the next two lines to enable the admin:,
celery/examples/django/proj/urls.py,6,from django.contrib import admin,
celery/examples/django/proj/urls.py,7,admin.autodiscover(),
celery/examples/django/proj/urls.py,10,Examples:,
celery/examples/django/proj/urls.py,11,"url(r'^$', 'proj.views.home', name='home'),",
celery/examples/django/proj/urls.py,12,"url(r'^proj/', include('proj.foo.urls')),",
celery/examples/django/proj/urls.py,14,Uncomment the admin/doc line below to enable admin documentation:,
celery/examples/django/proj/urls.py,15,"url(r'^admin/doc/', include('django.contrib.admindocs.urls')),",
celery/examples/django/proj/urls.py,17,Uncomment the next line to enable the admin:,
celery/examples/django/proj/urls.py,18,"url(r'^admin/', include(admin.site.urls)),",
celery/examples/django/proj/__init__.py,3,This will make sure the app is always imported when,
celery/examples/django/proj/__init__.py,4,Django starts so that shared_task will use this app.,
celery/examples/django/proj/settings.py,5,^^^ The above is required if you want to import from the celery,
celery/examples/django/proj/settings.py,6,library.  If you don't have this then `from celery.schedules import`,
celery/examples/django/proj/settings.py,7,becomes `proj.celery.schedules` in Python 2.x since it allows,
celery/examples/django/proj/settings.py,8,for relative imports by default.,
celery/examples/django/proj/settings.py,10,Celery settings,
celery/examples/django/proj/settings.py,14,: Only add pickle to this list if your broker is secured,
celery/examples/django/proj/settings.py,15,: from unwanted access (see userguide/security.html),
celery/examples/django/proj/settings.py,34,"Build paths inside the project like this: os.path.join(BASE_DIR, ...)",
celery/examples/django/proj/settings.py,38,Quick-start development settings - unsuitable for production,
celery/examples/django/proj/settings.py,39,See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/,
celery/examples/django/proj/settings.py,41,SECURITY WARNING: keep the secret key used in production secret!,
celery/examples/django/proj/settings.py,44,SECURITY WARNING: don't run with debug turned on in production!,
celery/examples/django/proj/settings.py,50,Application definition,
celery/examples/django/proj/settings.py,93,Database,
celery/examples/django/proj/settings.py,94,https://docs.djangoproject.com/en/2.2/ref/settings/#databases,
celery/examples/django/proj/settings.py,104,Password validation,
celery/examples/django/proj/settings.py,105,https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators,
celery/examples/django/proj/settings.py,123,Internationalization,
celery/examples/django/proj/settings.py,124,https://docs.djangoproject.com/en/2.2/topics/i18n/,
celery/examples/django/proj/settings.py,137,"Static files (CSS, JavaScript, Images)",
celery/examples/django/proj/settings.py,138,https://docs.djangoproject.com/en/2.2/howto/static-files/,
celery/examples/django/proj/,7,set the default Django settings module for the 'celery' program.,
celery/examples/django/proj/,12,Using a string here means the worker doesn't have to serialize,
celery/examples/django/proj/,13,the configuration object to child processes.,
celery/examples/django/proj/,14,- namespace='CELERY' means all celery-related configuration keys,
celery/examples/django/proj/,15,should have a `CELERY_` prefix.,
celery/examples/django/proj/,18,Load task modules from all registered Django app configs.,
celery/examples/django/proj/wsgi.py,20,This application object is used by any WSGI server configured to use this,
celery/examples/django/proj/wsgi.py,21,"file. This includes Django's development server, if the WSGI_APPLICATION",
celery/examples/django/proj/wsgi.py,22,setting points here.,
celery/examples/django/proj/wsgi.py,23,noqa,
celery/examples/django/proj/wsgi.py,29,Apply WSGI middleware here.,
celery/examples/django/proj/wsgi.py,30,from helloworld.wsgi import HelloWorldApplication,
celery/examples/django/proj/wsgi.py,31,application = HelloWorldApplication(application),
celery/examples/django/demoapp/tasks.py,1,Create your tasks here,
celery/examples/django/demoapp/views.py,3,Create your views here.,
celery/examples/django/demoapp/models.py,3,noqa,
celery/examples/django/demoapp/migrations/0001_initial.py,1,Generated by Django 2.2.1 on 2019-05-24 21:37,
celery/examples/resultgraph/tasks.py,1,Example::,
celery/examples/resultgraph/tasks.py,2,>>> R = A.apply_async(),
celery/examples/resultgraph/tasks.py,3,>>> list(joinall(R)),
celery/examples/resultgraph/tasks.py,4,"[['A 0', 'A 1', 'A 2', 'A 3', 'A 4', 'A 5', 'A 6', 'A 7', 'A 8', 'A 9'],",
celery/examples/resultgraph/tasks.py,5,"['B 0', 'B 1', 'B 2', 'B 3', 'B 4', 'B 5', 'B 6', 'B 7', 'B 8', 'B 9'],",
celery/examples/resultgraph/tasks.py,6,"['C 0', 'C 1', 'C 2', 'C 3', 'C 4', 'C 5', 'C 6', 'C 7', 'C 8', 'C 9'],",
celery/examples/resultgraph/tasks.py,7,"['D 0', 'D 1', 'D 2', 'D 3', 'D 4', 'D 5', 'D 6', 'D 7', 'D 8', 'D 9'],",
celery/examples/resultgraph/tasks.py,8,"['E 0', 'E 1', 'E 2', 'E 3', 'E 4', 'E 5', 'E 6', 'E 7', 'E 8', 'E 9'],",
celery/examples/resultgraph/tasks.py,9,"['F 0', 'F 1', 'F 2', 'F 3', 'F 4', 'F 5', 'F 6', 'F 7', 'F 8', 'F 9'],",
celery/examples/resultgraph/tasks.py,10,"['G 0', 'G 1', 'G 2', 'G 3', 'G 4', 'G 5', 'G 6', 'G 7', 'G 8', 'G 9'],",
celery/examples/resultgraph/tasks.py,11,"['H 0', 'H 1', 'H 2', 'H 3', 'H 4', 'H 5', 'H 6', 'H 7', 'H 8', 'H 9']]",
celery/examples/resultgraph/tasks.py,12,,
celery/examples/resultgraph/tasks.py,13,,
celery/examples/resultgraph/tasks.py,14,Joining the graph asynchronously with a callback,
celery/examples/resultgraph/tasks.py,15,"(Note: only two levels, the deps are considered final",
celery/examples/resultgraph/tasks.py,16,when the second task is ready).,
celery/examples/resultgraph/tasks.py,17,,
celery/examples/resultgraph/tasks.py,18,">>> unlock_graph.apply_async((A.apply_async(),",
celery/examples/resultgraph/tasks.py,19,"...                           A_callback.s()), countdown=1)",
celery/examples/gevent/,8,"## Note: Start worker with -P gevent,",
celery/examples/gevent/,9,do not use the worker_pool option.,
celery/examples/eventlet/webcrawler.py,35,noqa,
celery/examples/eventlet/webcrawler.py,37,http://daringfireball.net/2009/11/liberal_regex_for_matching_urls,
celery/examples/eventlet/webcrawler.py,63,"To not destroy the internet, we only fetch URLs on the same domain.",
celery/examples/eventlet/,8,## Start worker with -P eventlet,
celery/examples/eventlet/,9,Never use the worker_pool setting as that'll patch,
celery/examples/eventlet/,10,the worker too late.,
celery/docs/conf.py,1,-*- coding: utf-8 -*-,
celery/docs/conf.py,55,Deprecated broker settings (replaced by broker_url),
celery/docs/conf.py,63,deprecated task settings.,
celery/docs/conf.py,66,"MongoDB settings replaced by URL config.,",
celery/docs/conf.py,69,Database URL replaced by URL config (result_backend = db+...).,
celery/docs/conf.py,72,Redis settings replaced by URL config.,
celery/docs/conf.py,78,Old deprecated AMQP result backend.,
celery/docs/conf.py,82,Experimental,
celery/docs/conf.py,85,Deprecated worker settings.,
celery/docs/_ext/,64,noqa,
celery/docs/_ext/,148,shorten text if '~' is not enabled.,
celery/t/integration/tasks.py,1,-*- coding: utf-8 -*-,
celery/t/integration/tasks.py,54,Allow the task to be in STARTED state for,
celery/t/integration/tasks.py,55,a limited period of time.,
celery/t/integration/conftest.py,7,"we have to import the pytest plugin fixtures here,",
celery/t/integration/conftest.py,8,"in case user did not do the `python setup.py develop` yet,",
celery/t/integration/conftest.py,9,that installs the pytest plugin into the setuptools registry.,
celery/t/integration/conftest.py,16,Tricks flake8 into silencing redefining fixtures warnings.,
celery/t/integration/test_tasks.py,23,retried once,
celery/t/integration/test_tasks.py,28,retried once with priority 7,
celery/t/integration/test_canvas.py,114,This adds in an explicit test for the special case added in commit,
celery/t/integration/test_canvas.py,115,1e3fcaa969de6ad32b52a3ed8e74281e5e5360e6,
celery/t/integration/test_canvas.py,132,Run the chord and wait for the error callback to finish.,
celery/t/integration/test_canvas.py,260,return 3,
celery/t/integration/test_canvas.py,262,return 0 after managing soft timeout,
celery/t/integration/test_canvas.py,570,The total number of active Redis channels at this point,
celery/t/integration/test_canvas.py,571,is the number of chord header tasks multiplied by the,
celery/t/integration/test_canvas.py,572,"total chord tasks, plus the initial channels",
celery/t/integration/test_canvas.py,573,(existing from previous tests).,
celery/t/integration/test_canvas.py,779,first we check the last task,
celery/t/integration/test_canvas.py,782,then the chord callback,
celery/t/integration/test_canvas.py,786,started by one of the chord header tasks.,
celery/t/integration/test_canvas.py,789,check what the chord callback recorded,
celery/t/integration/test_canvas.py,795,ids(i=2),
celery/t/integration/test_canvas.py,801,ids(i=1),
celery/t/integration/test_canvas.py,816,Run the chord and wait for the error callback to finish.,
celery/t/integration/test_canvas.py,826,Got to wait for children to populate.,
celery/t/integration/test_canvas.py,830,Extract the results of the successful tasks from the chord.,
celery/t/integration/test_canvas.py,831,,
celery/t/integration/test_canvas.py,832,"We could do this inside the error handler, and probably would in a",
celery/t/integration/test_canvas.py,833,"real system, but for the purposes of the test it's obnoxious to get",
celery/t/integration/test_canvas.py,834,data out of the error handler.,
celery/t/integration/test_canvas.py,835,,
celery/t/integration/test_canvas.py,836,"So for clarity of our test, we instead do it here.",
celery/t/integration/test_canvas.py,838,Use the error callback's result to find the failed task.,
celery/t/integration/test_canvas.py,843,Use new group_id result metadata to get group ID.,
celery/t/integration/test_canvas.py,847,Use group ID to get preserved group result.,
celery/t/integration/test_canvas.py,854,Validate group result,
celery/t/integration/test_canvas.py,908,test for #2573,
celery/t/benchmarks/bench_worker.py,6,noqa,
celery/t/benchmarks/bench_worker.py,8,noqa,
celery/t/benchmarks/bench_worker.py,9,noqa,
celery/t/benchmarks/bench_worker.py,52,"use internal counter, as ordering can be skewed",
celery/t/benchmarks/bench_worker.py,53,"by previous runs, or the broker.",
celery/t/unit/conftest.py,16,"we have to import the pytest plugin fixtures here,",
celery/t/unit/conftest.py,17,"in case user did not do the `python setup.py develop` yet,",
celery/t/unit/conftest.py,18,that installs the pytest plugin into the setuptools registry.,
celery/t/unit/conftest.py,25,Tricks flake8 into silencing redefining fixtures warnings.,
celery/t/unit/conftest.py,32,noqa,
celery/t/unit/conftest.py,61,Mongo results tests (only executed if installed and running),
celery/t/unit/conftest.py,116,"pytest-cov breaks if a multiprocessing.Process is started,",
celery/t/unit/conftest.py,117,so disable them completely to make sure it doesn't happen.,
celery/t/unit/conftest.py,184,IMPORTANT: We set an .app attribute for every test case class.,
celery/t/unit/conftest.py,203,Make sure no test left the shutdown flags enabled.,
celery/t/unit/conftest.py,205,check for EX_OK,
celery/t/unit/conftest.py,208,check for other true values,
celery/t/unit/conftest.py,256,warn if config module not found,
celery/t/unit/conftest.py,271,Don't want SUBDEBUG log messages at finalization.,
celery/t/unit/conftest.py,279,Make sure test database is removed.,
celery/t/unit/conftest.py,287,Make sure there are no remaining threads at shutdown.,
celery/t/unit/bin/test_worker.py,173,test when there are too few output lines,
celery/t/unit/bin/test_worker.py,174,to draft the ascii art onto,
celery/t/unit/bin/test_,104,no args,
celery/t/unit/bin/test_events.py,39,noqa: E305,
celery/t/unit/bin/test_base.py,16,<-- Used by test_with_custom_app,
celery/t/unit/bin/test_base.py,127,sys.argv,
celery/t/unit/bin/test_base.py,131,pass list,
celery/t/unit/bin/test_base.py,327,noqa,
celery/t/unit/bin/test_beat.py,88,py3k,
celery/t/unit/bin/test_report.py,1,-*- coding: utf-8 -*-,
celery/t/unit/bin/test_report.py,22,Method call order mock obj,
celery/t/unit/bin/test_upgrade.py,1,-*- coding: utf-8 -*-,
celery/t/unit/bin/,3,here for a test,
celery/t/unit/bin/proj/app2.py,3,noqa: F401,
celery/t/unit/app/test_registry.py,32,name is overridden with path,
celery/t/unit/app/test_routes.py,121,"apply_async forwards all arguments, even exchange=None etc,",
celery/t/unit/app/test_routes.py,122,so need to make sure it's merged correctly.,
celery/t/unit/app/test_schedules.py,104,This is needed for test_crontab_parser because datetime.utcnow doesn't pickle,
celery/t/unit/app/test_schedules.py,105,in python 2,
celery/t/unit/app/test_schedules.py,429,*** WARNING ***,
celery/t/unit/app/test_schedules.py,430,This test triggers an infinite loop in case of a regression,
celery/t/unit/app/test_schedules.py,445,Test for #1604 issue with region configuration using DST,
celery/t/unit/app/test_schedules.py,451,Set last_run_at Before DST end,
celery/t/unit/app/test_schedules.py,453,Set now after DST end,
celery/t/unit/app/test_schedules.py,462,Test for #1604 issue with region configuration using DST,
celery/t/unit/app/test_schedules.py,468,Set last_run_at Before DST start,
celery/t/unit/app/test_schedules.py,470,Set now after DST start,
celery/t/unit/app/test_schedules.py,604,AssertionError != builtins.AssertionError in py.test,
celery/t/unit/app/test_schedules.py,645,29th of May 2010 is a saturday,
celery/t/unit/app/test_schedules.py,653,30th of May 2010 is a sunday,
celery/t/unit/app/test_schedules.py,661,31st of May 2010 is a monday,
celery/t/unit/app/test_utils.py,10,TODO: Remove this when we drop Python 2.7 support,
celery/t/unit/app/test_app.py,65,"fixture 'app' sets this, so need to use orig_ function",
celery/t/unit/app/test_app.py,66,set there by that fixture.,
celery/t/unit/app/test_app.py,87,Check that timezone conversion is applied from configuration,
celery/t/unit/app/test_app.py,90,timezone is a cached property,
celery/t/unit/app/test_app.py,100,Verify that timezone setting overrides enable_utc=on setting,
celery/t/unit/app/test_app.py,173,is proxy,
celery/t/unit/app/test_app.py,199,defaults not pickled,
celery/t/unit/app/test_app.py,204,add more defaults after configured,
celery/t/unit/app/test_app.py,717,"not set as current, so ends up as default app after reduce",
celery/t/unit/app/test_app.py,731,weakref removed from list when app goes out of scope.,
celery/t/unit/app/test_app.py,783,Test passing in a string and make sure the string,
celery/t/unit/app/test_app.py,784,gets there untouched,
celery/t/unit/app/test_app.py,789,Try passing in None,
celery/t/unit/app/test_app.py,794,Test passing in a method,
celery/t/unit/app/test_app.py,871,on pypy3 if named on_configure the class function,
celery/t/unit/app/test_app.py,872,"will be called, instead of the mock defined above,",
celery/t/unit/app/test_app.py,873,so we add the underscore.,
celery/t/unit/app/test_log.py,216,setup_logger logs to stderr without logfile argument.,
celery/t/unit/app/test_beat.py,104,"order doesn't matter, see comment in __lt__",
celery/t/unit/app/test_beat.py,105,noqa,
celery/t/unit/app/test_beat.py,107,noqa,
celery/t/unit/app/test_beat.py,351,ensure those 0.2 seconds on now_ts don't get dropped,
celery/t/unit/app/test_beat.py,356,initialise schedule and check heap is not initialized,
celery/t/unit/app/test_beat.py,360,set initial schedule and check heap is updated,
celery/t/unit/app/test_beat.py,366,update schedule and check heap is updated,
celery/t/unit/app/test_beat.py,686,ensure next call on the beginning of next min,
celery/t/unit/backends/test_rpc.py,20,drain_events shouldn't crash when called before start,
celery/t/unit/backends/test_asynchronous.py,17,By default eventlet will patch the DNS resolver when imported.,
celery/t/unit/backends/test_asynchronous.py,26,Check every tenth of a second,
celery/t/unit/backends/test_asynchronous.py,27,Specify a max timeout so it doesn't run forever,
celery/t/unit/backends/test_arangodb.py,15,noqa,
celery/t/unit/backends/test_riak.py,1,-*- coding: utf-8 -*-,
celery/t/unit/backends/test_riak.py,69,should return None,
celery/t/unit/backends/test_riak.py,78,should return None,
celery/t/unit/backends/test_riak.py,88,should return None,
celery/t/unit/backends/test_dynamodb.py,1,-*- coding: utf-8 -*-,
celery/t/unit/backends/test_dynamodb.py,18,noqa,
celery/t/unit/backends/test_dynamodb.py,474,should return None,
celery/t/unit/backends/test_dynamodb.py,497,should return None,
celery/t/unit/backends/test_dynamodb.py,519,should return None,
celery/t/unit/backends/test_s3.py,174,Create AWS s3 Bucket for moto.,
celery/t/unit/backends/test_mongodb.py,63,empty settings,
celery/t/unit/backends/test_mongodb.py,66,uri,
celery/t/unit/backends/test_mongodb.py,73,uri with database name,
celery/t/unit/backends/test_mongodb.py,78,"uri with user, password, database name, replica set",
celery/t/unit/backends/test_mongodb.py,99,"same uri, change some parameters in backend settings",
celery/t/unit/backends/test_mongodb.py,149,"uri with user, password, database name, replica set,",
celery/t/unit/backends/test_mongodb.py,150,DNS seedlist format,
celery/t/unit/backends/test_mongodb.py,262,"Should really check for combinations of these two, to be complete.",
celery/t/unit/backends/test_mongodb.py,280,"Should really check for combinations of these two, to be complete.",
celery/t/unit/backends/test_mongodb.py,449,"note: here tested _forget method, not forget method",
celery/t/unit/backends/test_cosmosdbsql.py,81,ensure database and collection get created on client access...,
celery/t/unit/backends/test_cosmosdbsql.py,88,...but only once per backend instance,
celery/t/unit/backends/test_amqp.py,74,is serialized properly.,
celery/t/unit/backends/test_amqp.py,206,FFWD's to the latest state.,
celery/t/unit/backends/test_amqp.py,215,FFWDs to the last state.,
celery/t/unit/backends/test_amqp.py,219,Caches last known state.,
celery/t/unit/backends/test_amqp.py,227,Returns cache if no new states.,
celery/t/unit/backends/test_amqp.py,231,returns cache if no new states.,
celery/t/unit/backends/test_base.py,83,default is app.conf.accept_content,
celery/t/unit/backends/test_base.py,88,accept parameter,
celery/t/unit/backends/test_base.py,94,accept parameter over result_accept_content,
celery/t/unit/backends/test_base.py,101,conf.result_accept_content if specified,
celery/t/unit/backends/test_filesystem.py,1,-*- coding: utf-8 -*-,
celery/t/unit/backends/test_azureblockblob.py,49,ensure container gets created on client access...,
celery/t/unit/backends/test_azureblockblob.py,54,...but only once per backend instance,
celery/t/unit/backends/test_redis.py,185,PubSub instance not initialized - exception would be raised,
celery/t/unit/backends/test_redis.py,186,when calling .close(),
celery/t/unit/backends/test_redis.py,194,Continues on KeyError,
celery/t/unit/backends/test_redis.py,212,Does not call cancel_for for other states,
celery/t/unit/backends/test_redis.py,222,drain_events shouldn't crash when called before start,
celery/t/unit/backends/test_couchbase.py,17,noqa,
celery/t/unit/backends/test_couchbase.py,60,should return None,
celery/t/unit/backends/test_couchbase.py,70,should return None,
celery/t/unit/backends/test_couchbase.py,79,should return None,
celery/t/unit/backends/test_couchbase.py,88,should return None,
celery/t/unit/backends/test_cassandra.py,27,should raise ImproperlyConfigured when no python-driver,
celery/t/unit/backends/test_cassandra.py,28,installed.,
celery/t/unit/backends/test_cassandra.py,52,no servers raises ImproperlyConfigured,
celery/t/unit/backends/test_cassandra.py,105,Tests behavior when Cluster.connect raises,
celery/t/unit/backends/test_cassandra.py,106,cassandra.OperationTimedOut.,
celery/t/unit/backends/test_cassandra.py,134,shouldn't raise,
celery/t/unit/backends/test_cassandra.py,137,Ensure that Cluster object IS shut down.,
celery/t/unit/backends/test_cassandra.py,167,"Ensure valid auth_provider works properly, and invalid one raises",
celery/t/unit/backends/test_cassandra.py,168,ImproperlyConfigured exception.,
celery/t/unit/backends/test_cassandra.py,177,Valid auth_provider,
celery/t/unit/backends/test_cassandra.py,184,Invalid auth_provider,
celery/t/unit/backends/test_cassandra.py,193,Ensure valid options works properly,
celery/t/unit/backends/test_cassandra.py,197,Valid options,
celery/t/unit/backends/test_cache.py,51,is serialized properly.,
celery/t/unit/backends/test_elasticsearch.py,30,expected result,
celery/t/unit/backends/test_couchdb.py,14,noqa,
celery/t/unit/backends/test_couchdb.py,98,should return None,
celery/t/unit/backends/test_database.py,14,noqa,
celery/t/unit/backends/test_database.py,16,noqa,
celery/t/unit/backends/test_database.py,17,noqa,
celery/t/unit/backends/test_database.py,132,is serialized properly.,
celery/t/unit/utils/test_collections.py,177,make sure heap is not leaking:,
celery/t/unit/utils/test_collections.py,182,purge now enforces rules,
celery/t/unit/utils/test_collections.py,183,cant purge(1) now. but .purge(now=...) still works,
celery/t/unit/utils/test_collections.py,190,expired,
celery/t/unit/utils/test_collections.py,197,not expired,
celery/t/unit/utils/test_collections.py,204,expired -> minsize,
celery/t/unit/utils/test_collections.py,279,revoke is using this,
celery/t/unit/utils/test_collections.py,294,each item is smaller and smaller,
celery/t/unit/utils/test_collections.py,296,last item is zero,
celery/t/unit/utils/test_collections.py,328,heap is refreshed when 15% larger than _data,
celery/t/unit/utils/test_saferepr.py,1,-*- coding: utf-8 -*-,
celery/t/unit/utils/test_saferepr.py,179,"Simple objects, small containers, and classes that overwrite __repr__",
celery/t/unit/utils/test_saferepr.py,180,For those the result should be the same as repr().,
celery/t/unit/utils/test_saferepr.py,181,Ahem.  The docs don't say anything about that -- this appears to,
celery/t/unit/utils/test_saferepr.py,182,"be testing an implementation quirk.  Starting in Python 2.5, it's",
celery/t/unit/utils/test_saferepr.py,183,"not true for dicts:  pprint always sorts dicts by key now; before,",
celery/t/unit/utils/test_saferepr.py,184,it sorted a dict display if and only if the display required,
celery/t/unit/utils/test_saferepr.py,185,"multiple lines.  For that reason, dicts with more than one element",
celery/t/unit/utils/test_saferepr.py,186,aren't tested here.,
celery/t/unit/utils/test_saferepr.py,219,Python 3.5+,
celery/t/unit/utils/test_saferepr.py,221,Python 3.4,
celery/t/unit/utils/test_saferepr.py,228,Python 3.5+,
celery/t/unit/utils/test_saferepr.py,231,Python 3.4,
celery/t/unit/utils/test_dispatcher.py,12,"Some JVM GCs will execute finalizers in a different thread, meaning",
celery/t/unit/utils/test_dispatcher.py,13,we need to wait for that to complete before we go on looking for the,
celery/t/unit/utils/test_dispatcher.py,14,effects of that.,
celery/t/unit/utils/test_dispatcher.py,20,noqa,
celery/t/unit/utils/test_dispatcher.py,21,Collecting weakreferences can take two collections on PyPy.,
celery/t/unit/utils/test_dispatcher.py,26,noqa,
celery/t/unit/utils/test_time.py,52,2013-06-07T20:12:51.775877+00:00,
celery/t/unit/utils/test_time.py,111,Relative,
celery/t/unit/utils/test_time.py,120,Case 1: `start` in UTC and `now` in other timezone,
celery/t/unit/utils/test_time.py,127,assert remaining time is approximately equal to delta,
celery/t/unit/utils/test_time.py,130,Case 2: `start` and `now` in different timezones (other than UTC),
celery/t/unit/utils/test_time.py,145,EST,
celery/t/unit/utils/test_time.py,146,EDT,
celery/t/unit/utils/test_time.py,148,`next_actual_time` is the next time to run (derived from delta),
celery/t/unit/utils/test_time.py,149,EDT,
celery/t/unit/utils/test_time.py,195,needed by min() in Python 3 (None not hashable),
celery/t/unit/utils/test_time.py,227,Mock no utcoffset specified,
celery/t/unit/utils/test_time.py,246,needed by min() in Python 3 (None not hashable),
celery/t/unit/utils/test_serialization.py,111,todo replace below when dropping python 2.7,
celery/t/unit/utils/test_serialization.py,112,"match=""Cannot coerce 'foo' to type bool""):",
celery/t/unit/utils/test_platforms.py,26,pragma: no cover,
celery/t/unit/utils/test_platforms.py,27,noqa,
celery/t/unit/utils/test_term.py,1,-*- coding: utf-8 -*-,
celery/t/unit/utils/test_graph.py,32,C must start before D,
celery/t/unit/utils/test_graph.py,34,and B must start before D,
celery/t/unit/utils/test_graph.py,36,and A must start before C,
celery/t/unit/utils/test_functional.py,95,again,
celery/t/unit/utils/test_functional.py,140,noqa,
celery/t/unit/utils/test_functional.py,248,noqa,
celery/t/unit/utils/test_functional.py,258,noqa,
celery/t/unit/events/test_events.py,125,clear in place,
celery/t/unit/events/test_events.py,171,Disable with no active producer,
celery/t/unit/events/test_events.py,175,does not close manually provided channel,
celery/t/unit/events/test_events.py,182,XXX test compat attribute,
celery/t/unit/events/test_events.py,325,skip consumer (see itercapture),
celery/t/unit/events/test_state.py,424,RECEIVED,
celery/t/unit/events/test_state.py,433,STARTED,
celery/t/unit/events/test_state.py,441,REVOKED,
celery/t/unit/events/test_state.py,448,RETRY,
celery/t/unit/events/test_state.py,457,FAILURE,
celery/t/unit/events/test_state.py,466,SUCCESS,
celery/t/unit/events/test_state.py,475,"children, parent, root",
celery/t/unit/concurrency/test_prefork.py,40,noqa,
celery/t/unit/concurrency/test_prefork.py,41,noqa,
celery/t/unit/concurrency/test_prefork.py,285,Given: a list of integers that could be file descriptors,
celery/t/unit/concurrency/test_prefork.py,288,Given: a mock hub method that does nothing to call,
celery/t/unit/concurrency/test_prefork.py,292,When Calling the helper to iterate_file_descriptors_safely,
celery/t/unit/concurrency/test_prefork.py,298,Then: all items were removed from the managed data source,
celery/t/unit/concurrency/test_prefork.py,302,Given: a list of integers that could be file descriptors,
celery/t/unit/concurrency/test_prefork.py,305,Given: a mock hub method that does nothing to call,
celery/t/unit/concurrency/test_prefork.py,309,When Calling the helper to iterate_file_descriptors_safely,
celery/t/unit/concurrency/test_prefork.py,315,Then: all items were removed from the managed data source,
celery/t/unit/concurrency/test_prefork.py,319,Given: a list of integers that could be file descriptors,
celery/t/unit/concurrency/test_prefork.py,322,Given: a mock hub method that does nothing to call,
celery/t/unit/concurrency/test_prefork.py,326,When Calling the helper to iterate_file_descriptors_safely,
celery/t/unit/concurrency/test_prefork.py,332,Then: all items were removed from the managed data source,
celery/t/unit/concurrency/test_prefork.py,357,KeyError,
celery/t/unit/concurrency/test_concurrency.py,40,No accept callback,
celery/t/unit/contrib/test_pytest.py,4,noqa: F401,
celery/t/unit/contrib/test_sphinx.py,10,noqa: F401,
celery/t/unit/contrib/test_rdb.py,43,set_quit,
celery/t/unit/contrib/test_rdb.py,48,set_trace,
celery/t/unit/contrib/test_rdb.py,58,_close_session,
celery/t/unit/contrib/test_rdb.py,66,do_continue,
celery/t/unit/contrib/test_rdb.py,71,do_quit,
celery/t/unit/contrib/test_migrate.py,19,hack to ignore error at shutdown,
celery/t/unit/contrib/test_migrate.py,265,use separate state,
celery/t/unit/contrib/proj/foo.py,4,noqa,
celery/t/unit/compat_modules/test_compat.py,15,@depends_on_current_app,
celery/t/unit/compat_modules/test_compat.py,41,This assertion may fail if executed in the,
celery/t/unit/compat_modules/test_compat.py,42,"first minute of an hour, thus 59 instead of 60",
celery/t/unit/apps/test_multi.py,396,"without callback, should work",
celery/t/unit/tasks/test_result.py,345,Does not block,
celery/t/unit/tasks/test_result.py,364,has RETRY state,
celery/t/unit/tasks/test_result.py,375,has RETRY state,
celery/t/unit/tasks/test_result.py,709,GroupResult instances with different .parent are not equal,
celery/t/unit/tasks/test_context.py,1,-*- coding: utf-8 -*-',
celery/t/unit/tasks/test_context.py,7,Retrieve the values of all context attributes as a,
celery/t/unit/tasks/test_context.py,8,dictionary in an implementation-agnostic manner.,
celery/t/unit/tasks/test_context.py,13,Ignore pseudo-private attributes,
celery/t/unit/tasks/test_context.py,16,Ignore methods and other non-trivial types,
celery/t/unit/tasks/test_context.py,27,"A bit of a tautological test, since it uses the same",
celery/t/unit/tasks/test_context.py,28,initializer as the default_context constructor.,
celery/t/unit/tasks/test_tasks.py,22,pragma: no cover,
celery/t/unit/tasks/test_tasks.py,27,"Task run functions can't be closures/lambdas, as they're pickled.",
celery/t/unit/tasks/test_tasks.py,256,Couldn't find a better way to mimic an apply_async(),
celery/t/unit/tasks/test_tasks.py,257,request with set priority,
celery/t/unit/tasks/test_tasks.py,281,Remove all messages from memory-transport,
celery/t/unit/tasks/test_tasks.py,306,"Technically, task.priority doesn't need to be set here",
celery/t/unit/tasks/test_tasks.py,307,since push_request() doesn't populate the delivery_info,
celery/t/unit/tasks/test_tasks.py,308,"with it. However, setting task.priority here also doesn't",
celery/t/unit/tasks/test_tasks.py,309,cause any problems.,
celery/t/unit/tasks/test_tasks.py,799,Without arguments.,
celery/t/unit/tasks/test_tasks.py,804,With arguments.,
celery/t/unit/tasks/test_tasks.py,812,send_task,
celery/t/unit/tasks/test_tasks.py,819,With ETA.,
celery/t/unit/tasks/test_tasks.py,830,With countdown.,
celery/t/unit/tasks/test_tasks.py,839,Default argsrepr/kwargsrepr behavior,
celery/t/unit/tasks/test_tasks.py,849,With argsrepr/kwargsrepr,
celery/t/unit/tasks/test_tasks.py,860,Discarding all tasks.,
celery/t/unit/tasks/test_tasks.py,1000,"update_state should accept arbitrary kwargs, which are passed to",
celery/t/unit/tasks/test_tasks.py,1001,the backend store_result method,
celery/t/unit/tasks/test_chord.py,79,didn't retry,
celery/t/unit/tasks/test_chord.py,113,didn't retry,
celery/t/unit/tasks/test_chord.py,174,did retry,
celery/t/unit/tasks/test_chord.py,235,does not modify original signature,
celery/t/unit/tasks/test_chord.py,266,task not part of chord,
celery/t/unit/worker/test_components.py,9,"some of these are tested in test_worker, so I've only written tests",
celery/t/unit/worker/test_components.py,10,here to complete coverage.  Should move everything to this module at some,
celery/t/unit/worker/test_components.py,11,point [-ask],
celery/t/unit/worker/test_autoscale.py,211,the body func scales up or down,
celery/t/unit/worker/test_request.py,1,-*- coding: utf-8 -*-,
celery/t/unit/worker/test_request.py,99,rebuild,
celery/t/unit/worker/test_request.py,944,traverses coverage for decorator without parens,
celery/t/unit/worker/test_bootsteps.py,173,include creates the underlying object and sets,
celery/t/unit/worker/test_bootsteps.py,174,"its x.obj attribute to it, as well as appending",
celery/t/unit/worker/test_bootsteps.py,175,it to the parent.steps list.,
celery/t/unit/worker/test_worker.py,798,Given: a test celery worker instance with auto scaling,
celery/t/unit/worker/test_worker.py,804,Given: This test requires a QoS defined on the worker consumer,
celery/t/unit/worker/test_worker.py,808,Given: We have started the worker pool,
celery/t/unit/worker/test_worker.py,811,Then: the worker pool is the same as the autoscaler pool,
celery/t/unit/worker/test_worker.py,815,Given: Utilize kombu to get the global hub state,
celery/t/unit/worker/test_worker.py,817,Given: Initial call the Async Pool to register events works fine,
celery/t/unit/worker/test_worker.py,820,Create some mock queue message and read from them,
celery/t/unit/worker/test_worker.py,825,Simulate a file descriptor from the list is closed by the OS,
celery/t/unit/worker/test_worker.py,826,auto_scaler.force_scale_down(5),
celery/t/unit/worker/test_worker.py,827,This actually works -- it releases the semaphore properly,
celery/t/unit/worker/test_worker.py,828,Same with calling .terminate() on the process directly,
celery/t/unit/worker/test_worker.py,830,however opening this fd as a file and closing it will do it,
celery/t/unit/worker/test_worker.py,833,Only need to do this once,
celery/t/unit/worker/test_worker.py,835,When: Calling again to register with event loop ...,
celery/t/unit/worker/test_worker.py,838,"Then: test did not raise ""OSError: [Errno 9] Bad file descriptor!""",
celery/t/unit/worker/test_worker.py,840,Finally:  Clean up so the threads before/after fixture passes,
celery/t/unit/worker/test_worker.py,847,Given: a test celery worker instance,
celery/t/unit/worker/test_worker.py,854,Given: This test requires a QoS defined on the worker consumer,
celery/t/unit/worker/test_worker.py,858,Given: We have started the worker pool,
celery/t/unit/worker/test_worker.py,861,Given: Utilize kombu to get the global hub state,
celery/t/unit/worker/test_worker.py,863,Given: Initial call the Async Pool to register events works fine,
celery/t/unit/worker/test_worker.py,866,Given: Mock the Hub to return errors for add and remove,
celery/t/unit/worker/test_worker.py,874,When: Calling again to register with event loop ...,
celery/t/unit/worker/test_worker.py,877,Then: test did not raise OSError,
celery/t/unit/worker/test_worker.py,878,Note: worker.pool is prefork.TaskPool whereas,
celery/t/unit/worker/test_worker.py,879,worker.pool._pool is the asynpool.AsynPool class.,
celery/t/unit/worker/test_worker.py,881,When: Calling the tic method on_poll_start,
celery/t/unit/worker/test_worker.py,883,Then: test did not raise OSError,
celery/t/unit/worker/test_worker.py,885,Given: a mock object that fakes whats required to do whats next,
celery/t/unit/worker/test_worker.py,888,When: Calling again to register with event loop ...,
celery/t/unit/worker/test_worker.py,890,Then: test did not raise OSError,
celery/t/unit/worker/test_worker.py,892,Given:,
celery/t/unit/worker/test_worker.py,895,Finally:  Clean up so the threads before/after fixture passes,
celery/t/unit/worker/test_worker.py,1077,Doesn't close pool if no pool.,
celery/t/unit/worker/test_worker.py,1082,test that stop of None is not attempted,
celery/t/unit/worker/test_consumer.py,52,noqa: F821,
celery/t/unit/worker/test_consumer.py,529,I will win,
celery/t/unit/worker/test_consumer.py,537,I will lose,
celery/t/unit/worker/test_consumer.py,545,I will win,
celery/t/unit/worker/test_loops.py,75,asynloop calls hub.close,
celery/t/unit/worker/test_loops.py,78,need this for create_task_handler,
celery/t/unit/worker/test_loops.py,234,XXX why aren't the errors propagated?!?,
celery/t/unit/worker/test_control.py,16,noqa,
celery/t/unit/worker/test_control.py,184,incremented,
celery/t/unit/worker/test_control.py,193,incremented,
celery/t/unit/worker/test_control.py,404,^ need to keep reference for reserved_tasks WeakSet.,
celery/t/unit/worker/test_control.py,513,unknown task id only revokes,
celery/t/unit/security/test_certificate.py,96,they both end up with the same id,
celery/t/unit/fixups/test_django.py,178,"when a task is eager, don't close connections",
celery/t/unit/fixups/test_django.py,213,ConnectionHandler,
celery/extra/release/attribution.py,1,!/usr/bin/env python,
celery/extra/release/attribution.py,27,maybe later?:,
celery/extra/release/attribution.py,28,seen_emails = {t[1] for t in seen},
celery/extra/release/attribution.py,29,known_emails = {t[1] for t in known},
celery/,1,-*- coding: utf-8 -*-,
celery/,30,- Task,
celery/,82,": Deprecated, use after_task_publish instead.",
celery/,90,- Program: `celery worker`,
celery/,100,- Worker,
celery/,110,- Logging,
celery/,130,- Beat,
celery/,134,- Eventlet,
celery/,143,- Programs,
celery/,19,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,63,: State precedence.,
celery/,64,: None represents the precedence of an unknown state.,
celery/,65,: Lower index means higher precedence.,
celery/,78,: Hash lookup of PRECEDENCE to index,
celery/,128,: Task state is unknown (assumed pending since you know the id).,
celery/,130,: Task was received by a worker (only used in events).,
celery/,132,: Task was started by a worker (:setting:`task_track_started`).,
celery/,134,: Task succeeded,
celery/,136,: Task failed,
celery/,138,: Task was revoked.,
celery/,140,: Task was rejected (only used in events).,
celery/,142,: Task is waiting for retry.,
celery/,1,-*- coding: utf-8 -*-,
celery/,21,used by Proxy class body,
celery/,25,Proxy uses properties to forward the standard,
celery/,26,"class attributes __module__, __name__ and __doc__ to the real",
celery/,27,"object, but these needs to be a string when accessed from",
celery/,28,the Proxy class directly.  This is a hack to make that work.,
celery/,29,-- See Issue #1087.,
celery/,58,Code stolen from werkzeug.local.Proxy.,
celery/,110,pragma: no cover,
celery/,111,not sure what this is about,
celery/,113,pragma: no cover,
celery/,120,pragma: no cover,
celery/,126,pragma: no cover,
celery/,133,pragma: no cover,
celery/,135,Py2,
celery/,140,pragma: no cover,
celery/,292,pragma: no cover,
celery/,294,noqa,
celery/,297,noqa,
celery/,302,pragma: no cover,
celery/,357,pragma: no cover,
celery/,358,May mask errors so ignore,
celery/,372,pragma: no cover,
celery/,384,############# Module Generation,
celery/,386,Utilities to dynamically,
celery/,387,"recreate modules, either for lazy loading or",
celery/,388,to create old modules at runtime instead of,
celery/,389,having them litter the source tree.,
celery/,391,import fails in python 2.5. fallback to reduce in stdlib,
celery/,400,im_func is no longer available in Py3.,
celery/,401,instead the unbound method itself can be used.,
celery/,402,pragma: no cover,
celery/,406,noqa,
celery/,464,: We exclude these from dir(celery),
celery/,478,just need the info attrs.,
celery/,513,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,43,5 minutes,
celery/,97,: The task name,
celery/,100,: The schedule (:class:`~celery.schedules.schedule`),
celery/,103,: Positional arguments to apply.,
celery/,106,: Keyword arguments to apply.,
celery/,109,: Task execution options.,
celery/,112,: The time and date of when this task was last scheduled.,
celery/,115,: Total number of times this task has been scheduled.,
celery/,133,compat,
celery/,142,for 2to3,
celery/,178,"How the object is ordered doesn't really matter, as",
celery/,179,"in the scheduler heap, the order is decided by the",
celery/,180,"preceding members of the tuple ``(time, priority, entry)``.",
celery/,181,,
celery/,182,If all that's left to order on is the entry then it can,
celery/,183,just as well be random.,
celery/,226,: The schedule dict/shelve.,
celery/,229,: Maximum time to sleep between re-checking the schedule.,
celery/,232,: How often to sync the schedule (3 minutes by default),
celery/,235,: How many tasks can be called before a sync is forced.,
celery/,241,compat,
celery/,274,pylint: disable=broad-except,
celery/,313,pylint disable=redefined-outer-name,
celery/,380,"Update time-stamps and run counts before we actually execute,",
celery/,381,so we have that done if an exception is raised (doesn't schedule,
celery/,382,forever.),
celery/,397,pylint: disable=broad-except,
celery/,448,Remove items from disk not in the schedule anymore.,
celery/,452,Update and add new items in the schedule,
celery/,461,callback called for each retry while the connection,
celery/,462,can't be established.,
celery/,520,In some cases there may be different errors from a storage,
celery/,521,backend for corrupted files.  Example - DBPageNotFoundError,
celery/,522,exception from bsddb.  In such case the file will be,
celery/,523,successfully opened but the error will be raised on first key,
celery/,524,retrieving.,
celery/,526,pylint: disable=broad-except,
celery/,535,"Timezone changed, reset db!",
celery/,542,"UTC setting changed, reset db!",
celery/,560,new schedule db,
celery/,569,remove schedule at 2.2.2 upgrade.,
celery/,572,remove schedule at 3.0.8 upgrade,
celery/,575,remove schedule at 3.0.9 upgrade,
celery/,650,block until shutdown done.,
celery/,689,pragma: no cover,
celery/,692,noqa,
celery/,722,Need short max interval to be able to stop thread,
celery/,723,in reasonable time.,
celery/,1,-*- coding: utf-8 -*-,
celery/,19,pragma: no cover,
celery/,26,: States,
celery/,152,pylint: disable=broad-except,
celery/,164,"Not fully started, can safely exit.",
celery/,183,"Will only get here if running green,",
celery/,184,makes sure all greenthreads have exited.,
celery/,301,": Optional step name, will use ``qualname`` if not specified.",
celery/,304,: Optional short name used for graph outputs and in logs.,
celery/,307,: Set this to true if the step is enabled based on some condition.,
celery/,310,: List of other steps that that must be started before this step.,
celery/,311,: Note that all dependencies must be in the same blueprint.,
celery/,314,": This flag is reserved for the workers Consumer,",
celery/,315,: since it is required to always be started last.,
celery/,316,: There can only be one object marked last,
celery/,317,: in every blueprint.,
celery/,320,: This provides the default for :meth:`include_if`.,
celery/,362,: Optional obj created by the :meth:`create` method.,
celery/,363,: This is used by :class:`StartStopStep` to keep the,
celery/,364,: original service object.,
celery/,1,-*- coding: utf-8 -*-,
celery/,69,: Parent result (if part of a chain),
celery/,85,: Error raised for timeouts.,
celery/,88,: The task's UUID.,
celery/,91,: The task result backend to use.,
celery/,95,deprecated,
celery/,230,deprecated alias to :meth:`get`.,
celery/,337,XXX compat alias,
celery/,476,XXX compat,
celery/,483,noqa,
celery/,531,: List of results in in the set.,
celery/,585,don't create new list.,
celery/,608,XXX compat alias.,
celery/,878,noqa,
celery/,902,: The UUID of the group.,
celery/,905,: List/iterator of results in the group,
celery/,939,Included for Py2 backwards compatibility,
celery/,996,pylint: disable=super-init-not-called,
celery/,997,XXX should really not be inheriting from AsyncResult,
celery/,1035,XXX Compat (remove 5.0),
celery/,1078,"earlier backends may just pickle, so check if",
celery/,1079,result is already prepared.,
celery/,1,-*- coding: utf-8 -*-,
celery/,61,Warnings,
celery/,66,Core errors,
celery/,70,Kombu (messaging) errors.,
celery/,73,Task semi-predicates,
celery/,76,Task related errors.,
celery/,82,Billiard task errors.,
celery/,86,Deprecation warnings (forcing Python to emit them).,
celery/,89,Worker shutdown semi-predicates (inherits from SystemExit).,
celery/,130,: Optional message describing context of retry.,
celery/,133,: Exception (if any) that caused the retry to happen.,
celery/,136,": Time of retry (ETA), either :class:`numbers.Real` or",
celery/,137,: :class:`~datetime.datetime`.,
celery/,166,noqa: E305 XXX compat,
celery/,216,XXX Unused,
celery/,256,noqa: E305 XXX compat,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,25,: Global default app used when no current app.,
celery/,28,: Function returning the app provided or the default app if none.,
celery/,29,:,
celery/,30,: The environment variable :envvar:`CELERY_TRACE_APP` is used to,
celery/,31,: trace app leaks.  When enabled an exception is raised if there,
celery/,32,: is no active app.,
celery/,35,": List of all app instances (weakrefs), mustn't be used directly.",
celery/,38,: Global set of functions to call whenever a new app is finalized.,
celery/,39,": Shared tasks, and built-in tasks are created by adding callbacks here.",
celery/,67,: Apps with the :attr:`~celery.app.base.BaseApp.set_as_current` attribute,
celery/,68,": sets this, so it will always contain the last instantiated app,",
celery/,69,: and is the default app returned by :func:`app_or_default`.,
celery/,78,: Function used to push a task to the thread local stack,
celery/,79,: keeping track of the currently executing task.,
celery/,80,: You must remember to pop the task after.,
celery/,83,: Function used to pop a task from the thread local stack,
celery/,84,: keeping track of the currently executing task.,
celery/,96,: creates the global fallback app instance.,
celery/,109,pragma: no cover,
celery/,113,pragma: no cover,
celery/,114,noqa,
celery/,116,noqa+,
celery/,140,: Proxy to current app.,
celery/,143,: Proxy to current task.,
celery/,165,pragma: no cover,
celery/,173,noqa+,
celery/,178,noqa+,
celery/,196,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,3,:copyright: (c) 2015-2016 Ask Solem.  All rights reserved.,
celery/,4,":copyright: (c) 2012-2014 GoPivotal, Inc., All rights reserved.",
celery/,5,":copyright: (c) 2009 - 2012 Ask Solem and individual contributors,",
celery/,6,All rights reserved.,
celery/,7,":license:   BSD (3 Clause), see LICENSE for more details.",
celery/,16,Lazy loading,
celery/,17,noqa,
celery/,28,-eof meta-,
celery/,43,bumpversion can only search for {current_version},
celery/,44,so we have to parse the version here.,
celery/,52,pragma: no cover,
celery/,63,"This is never executed, but tricks static analyzers (PyDev, PyCharm,",
celery/,64,"pylint, etc.) into knowing the types of these symbols, and what",
celery/,65,they contain.,
celery/,68,pragma: no cover,
celery/,69,noqa,
celery/,70,noqa,
celery/,71,noqa,
celery/,72,noqa,
celery/,73,noqa,
celery/,74,noqa,
celery/,78,noqa,
celery/,80,Eventlet/gevent patching must happen before importing,
celery/,81,"anything else, so these tools must be at top-level.",
celery/,118,pragma: no cover,
celery/,119,"Signals aren't working in gevent versions <1.0,",
celery/,120,and aren't monkey patched by patch_all(),
celery/,151,set up eventlet/gevent environments ASAP,
celery/,156,"this just creates a new module, that imports stuff on first attribute",
celery/,157,access.  This makes the library faster to use.,
celery/,158,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,23,fileno used to be in this module,
celery/,33,pragma: no cover,
celery/,52,exitcodes,
celery/,140,: Path to the pid lock file.,
celery/,169,must contain '\n',
celery/,220,flush and sync so that the re-read below works.,
celery/,224,pragma: no cover,
celery/,238,noqa: E305 XXX compat alias,
celery/,316,"octal or decimal, depending on initial zero.",
celery/,343,We need to keep /dev/urandom from closing because,
celery/,344,"shelve needs it, and Beat needs shelve to start.",
celery/,361,first child,
celery/,362,create new session,
celery/,363,pragma: no cover,
celery/,364,second child,
celery/,411,Make sure SIGCLD is using the default handler.,
celery/,415,"Since without stderr any errors will be silently suppressed,",
celery/,416,we need to know that we have access to the logfile.,
celery/,418,"Doesn't actually create the pidfile, but makes sure it's not stale.",
celery/,462,":fun:`setgroups` may have a platform-dependent limit,",
celery/,463,and it's not always possible to know in advance what this limit,
celery/,464,"is, so we use this ugly hack stolen from glibc.",
celery/,470,error from Python's check.,
celery/,474,error from the OS.,
celery/,485,pylint: disable=broad-except,
celery/,493,we shouldn't be allowed to change to this group.,
celery/,503,pragma: no cover,
celery/,506,Python 2.7+,
celery/,536,no point trying to setuid unless we're root.,
celery/,554,"If GID isn't defined, get the primary GID of the user.",
celery/,557,"Must set the GID before initgroups(), as setgid()",
celery/,558,is known to zap the group list on some platforms.,
celery/,560,setgid must happen before setuid (otherwise the setgid operation,
celery/,561,may fail because of insufficient privileges and possibly stay,
celery/,562,in a privileged group).,
celery/,566,at last:,
celery/,568,... and make sure privileges cannot be restored:,
celery/,574,"we should get here: cannot restore privileges,",
celery/,575,everything was fine.,
celery/,623,pragma: no cover,
celery/,625,noqa,
celery/,628,noqa,
celery/,630,pragma: no cover,
celery/,632,noqa,
celery/,633,noqa,
celery/,695,compat,
celery/,696,compat,
celery/,697,compat,
celery/,698,compat,
celery/,725,pragma: no cover,
celery/,731,noqa,
celery/,805,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,22,TODO: Remove this when we drop Python 2.7 support,
celery/,91,noqa,
celery/,283,Wrap around max_ if necessary,
celery/,456,assure the result does not preceed the min or exceed the max,
celery/,508,"Tried 2000 times, we're most likely in an infinite loop",
celery/,550,Calling super's init because the kwargs aren't necessarily passed in,
celery/,551,the same form as they are stored by the superclass,
celery/,555,pylint: disable=redefined-outer-name,
celery/,556,caching global ffwd,
celery/,560,"Sunday is day 0, not day 7",
celery/,619,pylint: disable=redefined-outer-name,
celery/,620,caching global ffwd,
celery/,805,pragma: no cover,
celery/,806,Sun won't rise/set today.  Check again tomorrow,
celery/,807,"(specifically, after the next anti-transit).",
celery/,1,-*- coding: utf-8 -*-,
celery/,39,TODO: Remove this when we drop Python 2.7 support,
celery/,47,json in Python 2.7 borks if dict contains byte keys.,
celery/,53,Issue #1656,
celery/,162,works like dict(d),
celery/,164,Also supports using task class/instance instead of string name.,
celery/,198,Extra options set to None are dismissed,
celery/,200,For callbacks: extra args are prepended to the stored args.,
celery/,221,Extra options set to None are dismissed,
celery/,225,pragma: no cover,
celery/,226,"no tasks for chain, etc to find type",
celery/,228,For callbacks: extra args are prepended to the stored args.,
celery/,233,pylint: disable=too-many-function-args,
celery/,234,"Borks on this, as it's a property",
celery/,260,need to deepcopy options so origins links etc. is not modified.,
celery/,289,pylint: disable=redefined-outer-name,
celery/,290,XXX chord is also a class in outer scope.,
celery/,306,pylint: disable=too-many-function-args,
celery/,307,"Borks on this, as it's a property.",
celery/,401,"These could be implemented in each individual class,",
celery/,402,"I'm sure, but for now we have this.",
celery/,404,group() | task -> chord,
celery/,407,unroll group with one member,
celery/,410,chain | group() -> chain,
celery/,413,task | group() -> chain,
celery/,417,task | chain -> chain,
celery/,421,chain | chain -> chain,
celery/,425,chord | task ->  attach to body,
celery/,432,CHAIN [last item is group] | TASK -> chord,
celery/,438,CHAIN [last item is chord] -> chain with chord body.,
celery/,443,chain | task -> chain,
celery/,446,task | task -> chain,
celery/,474,"for serialization, the task type is lazily loaded,",
celery/,475,and not stored in the dict itself.,
celery/,484,pragma: no cover,
celery/,491,for duck typing compatibility with Task.name,
celery/,506,task not registered,
celery/,531,When we publish groups we reuse the same options dictionary for all of,
celery/,532,the tasks in the group. See:,
celery/,533,https://github.com/celery/celery/blob/fb37cb0b8/celery/canvas.py#L1022.,
celery/,534,Issue #5354 reported that the following type of canvases,
celery/,535,causes a Celery worker to hang:,
celery/,536,group(,
celery/,537,"add.s(1, 1),",
celery/,538,"add.s(1, 1)",
celery/,539,") | tsum.s() | add.s(1) | group(add.s(1), add.s(1))",
celery/,540,The resolution of #5354 in PR #5681 was to only set the `chain` key,
celery/,541,in the options dictionary if it is not present.,
celery/,542,Otherwise we extend the existing list of tasks in the chain with the new,
celery/,543,tasks: options['chain'].extend(chain_).,
celery/,544,Before PR #5681 we overrode the `chain` key in each iteration,
celery/,545,of the loop which applies all the tasks in the group:,
celery/,546,options['chain'] = tasks if not use_link else None,
celery/,547,This caused Celery to execute chains correctly in most cases since,
celery/,548,in each iteration the `chain` key would reset itself to a new value,
celery/,549,and the side effect of mutating the key did not propagate,
celery/,550,to the next task in the group.,
celery/,551,"Since we now mutated the `chain` key, a *list* which is passed",
celery/,552,"by *reference*, the next task in the group will extend the list",
celery/,553,of tasks in the chain instead of setting a new one from the chain_,
celery/,554,variable above.,
celery/,555,"This causes Celery to execute a chain, even though there might not be",
celery/,556,"one to begin with. Alternatively, it causes Celery to execute more tasks",
celery/,557,that were previously present in the previous task in the group.,
celery/,558,The solution is to be careful and never mutate the options dictionary,
celery/,559,to begin with.,
celery/,560,Here is an example of a canvas which triggers this issue:,
celery/,561,"add.s(5, 6) | group((add.s(1) | add.s(2), add.s(3))).",
celery/,562,"The expected result is [14, 14]. However, when we extend the `chain`",
celery/,563,key the `add.s(3)` task erroneously has `add.s(2)` in its chain since,
celery/,564,it was previously applied to `add.s(1)`.,
celery/,565,"Without being careful not to mutate the options dictionary, the result",
celery/,566,"in this case is [16, 14].",
celery/,567,To avoid deep-copying the entire options dictionary every single time we,
celery/,568,run a chain we use a ChainMap and ensure that we never mutate,
celery/,569,"the original `chain` key, hence we use list_a + list_b to create a new",
celery/,570,list.,
celery/,576,"chain option may already be set, resulting in",
celery/,577,"""multiple values for keyword argument 'chain'"" error.",
celery/,578,Issue #3379.,
celery/,579,"If a chain already exists, we need to extend it with the next",
celery/,580,tasks in the chain.,
celery/,581,Issue #5354.,
celery/,582,WARNING: Be careful not to mutate `options['chain']`.,
celery/,596,aaaargh,
celery/,625,Clone chain's tasks assigning sugnatures from link_error,
celery/,626,to each task,
celery/,634,"python is best at unpacking kwargs, so .run is here to do that.",
celery/,647,pylint: disable=redefined-outer-name,
celery/,648,XXX chord is also a class in outer scope.,
celery/,674,pylint: disable=redefined-outer-name,
celery/,675,XXX chord is also a class in outer scope.,
celery/,687,use chain message field for protocol 2 and later.,
celery/,688,this avoids pickle blowing the stack on the recursion,
celery/,689,required by linking task together in a tree structure.,
celery/,690,(why is pickle using recursion? or better yet why cannot python,
celery/,691,do tail call optimization making recursion actually useful?),
celery/,704,NOTE: We are doing this in reverse order.,
celery/,705,"The result is a list of tasks in reverse order, that is",
celery/,706,passed as the ``chain`` message field.,
celery/,707,As it's reversed the worker can just do ``chain.pop()`` to,
celery/,708,get the next task in the chain.,
celery/,718,first task gets partial args from chain,
celery/,728,splice the chain,
celery/,733,"automatically upgrade group(...) | s to chord(group, s)",
celery/,734,for chords we freeze by pretending it's a normal,
celery/,735,signature instead of a group.,
celery/,744,A GroupResult does not have a task_id since it consists,
celery/,745,of multiple tasks.,
celery/,746,"We therefore, have to construct the chord without it.",
celery/,747,"Issues #5467, #3585.",
celery/,754,chain(task_id=id) means task id is set for the last task,
celery/,755,in the chain.  If the chord is part of a chord/group,
celery/,756,then that chord/group must synchronize based on the,
celery/,757,"last task in the chain, so we only set the group_id and",
celery/,758,chord callback for the last task.,
celery/,770,link previous task to this task.,
celery/,786,"If the task is a chord, and the body is a chain",
celery/,787,"the chain has already been prepared, and res is",
celery/,788,set to the last task in the callback chain.,
celery/,790,We need to change that so that it points to the,
celery/,791,group result object.,
celery/,875,"could be function, but must be able to reference as :class:`chain`.",
celery/,877,"This forces `chain(X, Y, Z)` to work the same way as `X | Y | Z`",
celery/,902,need to evaluate generators,
celery/,975,need to evaluate generators,
celery/,1084,"- Special case of group(A.s() | group(B.s(), C.s()))",
celery/,1085,"That is, group with single item that's a chain but the",
celery/,1086,last task in that chain is a group.,
celery/,1087,,
celery/,1088,"We cannot actually support arbitrary GroupResults in chains,",
celery/,1089,but this special case we can.,
celery/,1103,empty group returns GroupResult,
celery/,1115,Simply link to first task,
celery/,1123,See issue #5265.  I don't use isinstance because current tests,
celery/,1124,pass a Mock object as argument.,
celery/,1135,"local sigs are always of type Signature, and we",
celery/,1136,clone them to make sure we don't modify the originals.,
celery/,1139,serialized sigs must be converted to Signature.,
celery/,1142,needs yield_from :(,
celery/,1156,pylint: disable=redefined-outer-name,
celery/,1157,XXX chord is also a class in outer scope.,
celery/,1166,"adding callback to result, such that it will gradually",
celery/,1167,fulfill the barrier.,
celery/,1168,,
celery/,1169,"Using barrier.add would use result.then, but we need",
celery/,1170,to add the weak argument here to only create a weak,
celery/,1171,reference to the object.,
celery/,1175,"<-- r.parent, etc set in the frozen result.",
celery/,1178,"remove task_id and use that as the group_id,",
celery/,1179,if we don't remove it then every task will have the same id...,
celery/,1187,pylint: disable=redefined-outer-name,
celery/,1188,XXX chord is also a class in outer scope.,
celery/,1201,Need to unroll subgroups early so that chord gets the,
celery/,1202,right result instance for chord_unlock etc.,
celery/,1215,pylint: disable=redefined-outer-name,
celery/,1216,XXX chord is also a class in outer scope.,
celery/,1286,Python signatures are better at extracting keys from dicts,
celery/,1287,than manually popping things off.,
celery/,1306,pylint: disable=redefined-outer-name,
celery/,1307,XXX chord is also a class in outer scope.,
celery/,1316,"we need to link the body result back to the group result,",
celery/,1317,"but the body may actually be a chain,",
celery/,1318,so find the first result without a parent,
celery/,1349,"chord([A, B, ...], C)",
celery/,1393,Chains should not be passed to the header tasks. See #3771,
celery/,1395,"Neither should chords, for deeply nested chords to work",
celery/,1410,The execution of a chord body is normally triggered by its header's,
celery/,1411,"tasks completing. If the header is empty this will never happen, so",
celery/,1412,we execute the body manually here.,
celery/,1421,need to make copy of body,
celery/,1438,"changes mutability of header only, not callback.",
celery/,1464,is a group,
celery/,1494,noqa: E305 XXX compat,
celery/,1524,noqa: E305 XXX compat,
celery/,23,"since we have an argument --args, we need to name this differently.",
celery/,58,arguments,
celery/,62,Expires can be int/float.,
celery/,66,or a string describing an ISO 8601 datetime.,
celery/,72,send the task and print the id.,
celery/,1,-*- coding: utf-8 -*-,
celery/,24,Map to coerce strings to other types.,
celery/,51,: List of arguments this command takes.,
celery/,52,": Should contain ``(argument_name, argument_type)`` tuples.",
celery/,55,: Helpful human string representation of what this command returns.,
celery/,56,": May be :const:`None`, to signify the return type is unknown.",
celery/,67,"Might be a custom way to coerce the string value,",
celery/,68,so look in the coercion map.,
celery/,130,: Map of built-in command names -> method names,
celery/,137,: Map of AMQP API commands and their :class:`Spec`.,
celery/,174,XXX Hack to fix Issue #2013,
celery/,285,pylint: disable=broad-except,
celery/,371,pragma: no cover,
celery/,53,"gives list of tuples: ``(did_change, line_contents)``",
celery/,57,did have changes,
celery/,86,"sort by length to avoid, for example, broker_transport overriding",
celery/,87,broker_transport_options.,
celery/,91,only one match per line.,
celery/,1,-*- coding: utf-8 -*-,
celery/,27,"Option is here for backwards compatibility, as third-party commands",
celery/,28,may import it from here.,
celery/,30,pylint: disable=deprecated-module,
celery/,31,pragma: no cover,
celery/,32,noqa,
celery/,36,pragma: no cover,
celery/,43,"always enable DeprecationWarnings, so our users can see them.",
celery/,47,TODO: Remove this once we drop support for Python < 3.6,
celery/,91,argparse checks for existence of this kwarg,
celery/,94,"store_true sets value to ""('NO', 'DEFAULT')"" for some",
celery/,95,"crazy reason, so not to set a sane default here.",
celery/,171,: Arg list used in help.,
celery/,174,: Application version.,
celery/,177,: If false the parser will raise an exception if positional,
celery/,178,: args are provided.,
celery/,181,: List of options (without preload options).,
celery/,184,module Rst documentation to parse help from (if any),
celery/,187,Some programs (multi) does not want to load the app specified,
celery/,188,(Issue #1008).,
celery/,191,: Enable if the application should support config from the cmdline.,
celery/,194,: Default configuration name-space.,
celery/,197,: Text to print at end of --help,
celery/,200,: Text to print in --help before option list.,
celery/,203,: Set to true if this command doesn't have sub-commands,
celery/,206,used by :meth:`say_remote_command_reply`.,
celery/,208,used by :meth:`say_chat`.,
celery/,213,: Name of argparse option used for parsing positional args.,
celery/,237,pylint: disable=method-hidden,
celery/,238,on_error argument to __init__ may override this method.,
celery/,242,pylint: disable=method-hidden,
celery/,243,on_usage_error argument to __init__ may override this method.,
celery/,250,maybe we were forked.,
celery/,282,Should we load any special concurrency environment?,
celery/,286,Dump version and exit if '--version' arg set.,
celery/,291,"In Python 2.7 and below, there is no name instance for exceptions",
celery/,292,TODO: Remove this once we drop support for Python 2.7,
celery/,324,"This is for optparse options, please use add_arguments.",
celery/,426,"Don't want to load configuration to just print the version,",
celery/,427,so we handle --version manually here.,
celery/,433,for compatibility with optparse usage.,
celery/,449,"for backward compatibility with optparse, we automatically",
celery/,450,add arbitrary positional args.,
celery/,493,Default app takes loader from this env (Issue #1066).,
celery/,535,XXX compat,
celery/,605,omit proxy,
celery/,627,<-- take first.,
celery/,153,need to import task modules for custom user-remote control commands.,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,170,: Final exit code.,
celery/,237,fh is an old alias to stdout.,
celery/,248,compat alias,
celery/,258,Reserve the --nosplash|--quiet|-q/--verbose options.,
celery/,278,don't modify callers argv.,
celery/,299,compat,
celery/,458,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,133,pragma: no cover,
celery/,12,pragma: no cover,
celery/,71,pylint: disable=attribute-defined-outside-init,
celery/,102,noqa,
celery/,105,noqa,
celery/,139,pragma: no cover,
celery/,146,pragma: no cover,
celery/,150,pragma: no cover,
celery/,154,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,179,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,40,pylint: disable=broad-except,
celery/,111,Extracts command-line config appearing after '--':,
celery/,112,celery worker -l info -- worker.prefetch_multiplier=10,
celery/,113,This to make sure argparse doesn't gobble it up.,
celery/,138,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,209,parse help from this too,
celery/,219,parse options before detaching so errors can be handled.,
celery/,229,will never return,
celery/,237,Pools like eventlet/gevent needs to patch libs as early,
celery/,238,as possible.,
celery/,248,pragma: no cover,
celery/,255,node format handled by celery.app.log.setup,
celery/,263,this command support custom pools,
celery/,264,that may have to be loaded as early as possible.,
celery/,357,"Fix for setuptools generated scripts, so that it will",
celery/,358,work with multiprocessing fork emulation.,
celery/,359,(see multiprocessing.forking.get_preparation_data()),
celery/,360,pragma: no cover,
celery/,367,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,262,Import commands from other modules,
celery/,264,Cannot use relative imports here due to a Windows issue (#1111).,
celery/,268,noqa,
celery/,312,"Fix for setuptools generated scripts, so that it will",
celery/,313,work with multiprocessing fork emulation.,
celery/,314,(see multiprocessing.forking.get_preparation_data()),
celery/,316,pragma: no cover,
celery/,445,we eat the next argument even though we don't know,
celery/,446,if this option takes an argument or not.,
celery/,447,instead we'll assume what's the command name in the,
celery/,448,return statements below.,
celery/,452,is another option,
celery/,455,is (maybe) a value for this option,
celery/,458,pragma: no cover,
celery/,464,pragma: no cover,
celery/,465,if there are more arguments left then divide and swap,
celery/,466,we assume the first argument in argv[i:] is the command,
celery/,467,name.,
celery/,469,if there are no more arguments then the last arg in rest',
celery/,470,must be the command.,
celery/,491,Issue 1008,
celery/,533,this command supports custom pools,
celery/,534,that may have to be loaded as early as possible.,
celery/,547,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,24,: list of methods that must be classmethods in the old API.,
celery/,59,used by old non-abstract task classes,
celery/,65,- Abstract class: abstract attribute shouldn't be inherited.,
celery/,70,"The 'app' attribute is now a property, with the real app located",
celery/,71,"in the '_app' attribute.  Previously this was a regular attribute,",
celery/,72,so we should support classes defining it.,
celery/,75,Attempt to inherit app from one the bases,
celery/,85,- Automatically generate missing/empty name.,
celery/,91,non decorated tasks must also be shared in case,
celery/,92,an app is created multiple times due to modules,
celery/,93,imported under multiple names.,
celery/,94,"Hairy stuff,  here to be compatible with 2.x.",
celery/,95,"People shouldn't use non-abstract task classes anymore,",
celery/,96,use the task decorator.,
celery/,100,the creation count is used as a safety,
celery/,101,so that the same task isn't added recursively,
celery/,102,to the set of constructors.,
celery/,110,- Create and register class.,
celery/,111,Because of the way import happens (recursively),
celery/,112,we may or may not be the first time the task tries to register,
celery/,113,with the framework.  There should only be one class for each task,
celery/,114,"name, so we always return the registered version.",
celery/,138,- Deprecated compat. attributes -:,
celery/,145,XXX deprecated,
celery/,146,XXX deprecated,
celery/,155,"In old Celery the @task decorator didn't exist, so one would create",
celery/,156,"classes instead and use them directly (e.g., MyTask.apply_async()).",
celery/,157,the use of classmethods was a hack so that it was not necessary,
celery/,158,"to instantiate the class before using it, but it has only",
celery/,159,given us pain (like all magic).,
celery/,174,noqa,
celery/,1,-*- coding: utf-8 -*-,
celery/,23,pragma: no cover,
celery/,24,"This is never executed, but tricks static analyzers (PyDev, PyCharm,",
celery/,25,"pylint, etc.) into knowing the types of these symbols, and what",
celery/,26,they contain.,
celery/,37,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,261,taken from queue,
celery/,263,taken from queue,
celery/,380,pragma: no cover,
celery/,394,- Try specified name-space first.,
celery/,401,- Try all the other namespaces.,
celery/,410,- See if name is a qualname last.,
celery/,1,-*- coding: utf-8 -*-,
celery/,28,TODO: Remove this when we drop Python 2.7 support,
celery/,33,: earliest date supported by time.mktime.,
celery/,36,json in Python 2.7 borks if dict contains byte keys.,
celery/,39,: Human readable queue declaration.,
celery/,66,": If set, this is a subset of queues to consume from.",
celery/,67,: The rest of the queues are then used for routing only.,
celery/,126,docs used to use binding_key as routing key,
celery/,202,using all queues,
celery/,204,using selection,
celery/,225,: compat alias to Connection,
celery/,230,: Cached and prepared routing table.,
celery/,233,: Underlying producer pool instance automatically,
celery/,234,: set by the :attr:`producer_pool`.,
celery/,237,Exchange class/function used when defining automatic queues.,
celery/,238,"For example, you can use ``autoexchange = lambda n: None`` to use the",
celery/,239,AMQP default exchange: a shortcut to bypass routing,
celery/,240,and instead send directly to the queue named in the routing key.,
celery/,243,: Max size of positional argument representation used for,
celery/,244,: logging purposes.,
celery/,247,: Max size of keyword argument representation used for logging purposes.,
celery/,268,"Create new :class:`Queues` instance, using queue defaults",
celery/,269,from the current configuration.,
celery/,321,convert countdown to ETA,
celery/,337,If we retry a task `expires` will already be ISO8601-formatted.,
celery/,346,pragma: no cover,
celery/,354,empty root_id defaults to task_id,
celery/,414,convert countdown to ETA,
celery/,425,pragma: no cover,
celery/,482,XXX compat,
celery/,528,"convert to anon-exchange, when exchange not set and direct ex.",
celery/,532,"not topic exchange, and exchange not undefined",
celery/,538,merge default and custom policy,
celery/,564,XXX deprecated,
celery/,565,protocol version 2,
celery/,571,protocol version 1,
celery/,601,noqa,
celery/,626,compat alias,
celery/,639,We call Dispatcher.publish with a custom producer,
celery/,640,so don't need the diuspatcher to be enabled.,
celery/,1,-*- coding: utf-8 -*-,
celery/,32,: extracts attributes related to publishing a message from an object.,
celery/,36,imm+man is deprecated,
celery/,39,We take __repr__ very seriously around here ;),
celery/,44,: Here for backwards compatibility as tasks no longer use a custom meta-class.,
celery/,85,compat alias to group,
celery/,95,see property,
celery/,135,children must be an empty list for every thread,
celery/,153,set by old base in celery.task.base,
celery/,158,": Execution strategy used, or the qualified name of one.",
celery/,161,": Request class used, or the qualified name of one.",
celery/,164,: The application instance associated with this task class.,
celery/,167,: Name of the task.,
celery/,170,: Enable argument checking.,
celery/,171,: You can set this to false if you don't want the signature to be,
celery/,172,: checked when calling the task.,
celery/,173,: Defaults to :attr:`app.strict_typing <@Celery.strict_typing>`.,
celery/,176,": Maximum number of retries before giving up.  If set to :const:`None`,",
celery/,177,: it will **never** stop retrying.,
celery/,180,: Default time in seconds before a retry of the task should be,
celery/,181,: executed.  3 minutes by default.,
celery/,184,: Rate limit for this task type.  Examples: :const:`None` (no rate,
celery/,185,": limit), `'100/s'` (hundred tasks a second), `'100/m'` (hundred tasks",
celery/,186,": a minute),`'100/h'` (hundred tasks an hour)",
celery/,189,: If enabled the worker won't store task state and return values,
celery/,190,: for this task.  Defaults to the :setting:`task_ignore_result`,
celery/,191,: setting.,
celery/,194,: If enabled the request will keep track of subtasks started by,
celery/,195,": this task, and this information will be sent with the result",
celery/,196,: (``result.children``).,
celery/,199,: If enabled the worker will send monitoring events related to,
celery/,200,: this task (but only if the worker is configured to send,
celery/,201,: task related events).,
celery/,202,: Note that this has no effect on the task-failure event case,
celery/,203,: where a task is not registered (as it will have no task class,
celery/,204,: to check this flag).,
celery/,207,: When enabled errors will be stored even if the task is otherwise,
celery/,208,: configured to ignore results.,
celery/,211,: The name of a serializer that are registered with,
celery/,212,: :mod:`kombu.serialization.registry`.  Default is `'json'`.,
celery/,215,: Hard time limit.,
celery/,216,: Defaults to the :setting:`task_time_limit` setting.,
celery/,219,: Soft time limit.,
celery/,220,: Defaults to the :setting:`task_soft_time_limit` setting.,
celery/,223,: The result store backend used for this task.,
celery/,226,: If disabled this task won't be registered automatically.,
celery/,229,: If enabled the task will report its status as 'started' when the task,
celery/,230,: is executed by a worker.  Disabled by default as the normal behavior,
celery/,231,": is to not report that level of granularity.  Tasks are either pending,",
celery/,232,": finished, or waiting to be retried.",
celery/,233,:,
celery/,234,: Having a 'started' status can be useful for when there are long,
celery/,235,: running tasks and there's a need to report what task is currently,
celery/,236,: running.,
celery/,237,:,
celery/,238,: The application default can be overridden using the,
celery/,239,: :setting:`task_track_started` setting.,
celery/,242,: When enabled messages for this task will be acknowledged **after**,
celery/,243,": the task has been executed, and not *just before* (the",
celery/,244,: default behavior).,
celery/,245,:,
celery/,246,: Please note that this means the task may be executed twice if the,
celery/,247,: worker crashes mid execution.,
celery/,248,:,
celery/,249,: The application default can be overridden with the,
celery/,250,: :setting:`task_acks_late` setting.,
celery/,253,: When enabled messages for this task will be acknowledged even if it,
celery/,254,: fails or times out.,
celery/,255,:,
celery/,256,: Configuring this setting only applies to tasks that are,
celery/,257,: acknowledged **after** they have been executed and only if,
celery/,258,: :setting:`task_acks_late` is enabled.,
celery/,259,:,
celery/,260,: The application default can be overridden with the,
celery/,261,: :setting:`task_acks_on_failure_or_timeout` setting.,
celery/,264,": Even if :attr:`acks_late` is enabled, the worker will",
celery/,265,: acknowledge tasks when the worker process executing them abruptly,
celery/,266,": exits or is signaled (e.g., :sig:`KILL`/:sig:`INT`, etc).",
celery/,267,:,
celery/,268,": Setting this to true allows the message to be re-queued instead,",
celery/,269,": so that the task will execute again by the same worker, or another",
celery/,270,: worker.,
celery/,271,:,
celery/,272,: Warning: Enabling this can cause message loops; make sure you know,
celery/,273,: what you're doing.,
celery/,276,: Tuple of expected exceptions.,
celery/,277,:,
celery/,278,: These are errors that are expected in normal operation,
celery/,279,: and that shouldn't be regarded as a real error by the worker.,
celery/,280,: Currently this means that the state will be updated to an error,
celery/,281,": state, but the worker won't log the event as an error.",
celery/,284,: Default task expiry time.,
celery/,287,: Default task priority.,
celery/,290,: Max length of result representation used in logs and events.,
celery/,293,": Task request stack, the current request will be the topmost.",
celery/,296,: Some may expect a request to exist even if the task hasn't been,
celery/,297,: called.  This should probably be deprecated.,
celery/,300,: Deprecated attribute ``abstract`` here for compatibility.,
celery/,319,set by backend property.,
celery/,321,"- Tasks are lazily bound, so that configuration is not set",
celery/,322,- until the task is actually used,
celery/,329,clear option cache,
celery/,338,decorate with annotations from config.,
celery/,345,PeriodicTask uses this to add itself to the PeriodicTask schedule.,
celery/,364,The app property's __set__  method is not called,
celery/,365,"if Task.app is set (on the class), so must bind on use.",
celery/,398,"- tasks are pickled into the name of the task only, and the receiver",
celery/,399,- simply grabs it from the local registry.,
celery/,400,"- in later versions the module of the task is also included,",
celery/,401,- and the receiving side tries to import that module so that,
celery/,402,- it will work even if the task hasn't been registered.,
celery/,527,pragma: no cover,
celery/,608,sent to anon-exchange,
celery/,615,XXX compat,
celery/,683,"Not in worker or emulated by (apply/always_eager),",
celery/,684,so just raise the original exception.,
celery/,686,"raises orig stack if PyErr_Occurred,",
celery/,687,and augments with exc' if that argument is defined.,
celery/,702,On Py3: will augment any current exception with,
celery/,703,the exc' argument provided (raise exc from orig),
celery/,714,"if task was executed eagerly using apply(),",
celery/,715,then the retry must also be executed eagerly.,
celery/,744,"trace imports Task, so need to import inline.",
celery/,755,"Make sure we get the task instance, not class.",
celery/,1020,"task was not called, but some may still expect a request",
celery/,1021,"to be there, perhaps that should be deprecated.",
celery/,1041,noqa,
celery/,1049,noqa: E305 XXX compat alias,
celery/,1,-*- coding: utf-8 -*-,
celery/,41,Load all builtin tasks,
celery/,42,noqa,
celery/,86,"Given an attribute name and a list of args, gets",
celery/,87,the attribute from the current app and calls it.,
celery/,92,"This is used with multiprocessing.register_after_fork,",
celery/,93,so need to be at module level.,
celery/,96,pylint: disable=broad-except,
celery/,101,"`app.conf` will be of this type before being explicitly configured,",
celery/,102,meaning the app can keep any configuration set directly,
celery/,103,on `app.conf` before the `app.config_from_object` call.,
celery/,104,,
celery/,105,"accessing any key will finalize the configuration,",
celery/,106,replacing `app.conf` with a concrete settings object.,
celery/,128,XXX will not show finalized configuration,
celery/,129,"setdefault will cause `key in d` to happen,",
celery/,130,"so for setdefault to be lazy, so does contains.",
celery/,182,": This is deprecated, use :meth:`reduce_keys` instead",
celery/,188,: Name of the `__main__` module.  Required for standalone scripts.,
celery/,189,:,
celery/,190,: If set this will be used instead of `__main__` when automatically,
celery/,191,: generating task names.,
celery/,194,: Custom options for command-line programs.,
celery/,195,: See :ref:`extending-commandoptions`,
celery/,198,: Custom bootsteps to extend and modify the worker.,
celery/,199,: See :ref:`extending-bootsteps`.,
celery/,218,: Signal sent when app is loading configuration.,
celery/,221,: Signal sent after app has prepared the configuration.,
celery/,224,: Signal sent after app has been finalized.,
celery/,227,: Signal sent by every new process after fork.,
celery/,264,If the class defines a custom __reduce_args__ we need to use,
celery/,265,the old way of pickling apps: pickling a list of,
celery/,266,args instead of the new way that pickles a dict of keywords.,
celery/,269,these options are moved to the config to,
celery/,270,simplify pickling of the app object.,
celery/,285,- Apply fix-ups.,
celery/,287,...store fixup instances in _fixups to keep weakrefs alive.,
celery/,293,Signals,
celery/,295,used to be a method pre 4.0,
celery/,308,the --loader command-line argument sets the environment variable.,
celery/,400,When using execv the task in the original module will point to a,
celery/,401,"different app, so doing things like 'add.request' will point to",
celery/,402,a different task instance.  This makes sure it will always use,
celery/,403,the task instance from the current app.,
celery/,404,Really need a better solution for this :(,
celery/,420,return a proxy object that evaluates on first use,
celery/,457,for some reason __qualname__ cannot be set in type(),
celery/,458,so we have to set it here.,
celery/,464,connects task to this app,
celery/,492,"If Ignore signal occures task shouldn't be retried,",
celery/,493,even if it suits autoretry_for list,
celery/,705,packages argument can be lazy,
celery/,736,XXX compat,
celery/,739,pragma: no cover,
celery/,780,We avoid using the constructor since a custom result class,
celery/,781,"can be used, in which case the constructor may still use",
celery/,782,the old signature.,
celery/,896,XXX compat,
celery/,911,XXX compat,
celery/,964,used to be a method pre 4.0,
celery/,974,"replace in place, as someone may have referenced app.conf,",
celery/,975,"done some changes, accessed a key, and then try to make more",
celery/,976,changes to the reference and not the finalized value.,
celery/,981,load lazy config dict initializers.,
celery/,986,load lazy periodic tasks,
celery/,1094,"Reduce only pickles the configuration changes,",
celery/,1095,so the default configuration doesn't have to be passed,
celery/,1096,between processes.,
celery/,1216,since 4.0: thread.get_ident() is not included when,
celery/,1217,generating the process id.  This is due to how the RPC,
celery/,1218,"backend now dedicates a single thread to receive results,",
celery/,1219,which would not work if each thread has a separate id.,
celery/,1240,noqa,
celery/,1302,noqa: E305 XXX compat,
celery/,1,-*- coding: utf-8 -*-,
celery/,52,: The logging subsystem is only configured once per process.,
celery/,53,": setup_logging_subsystem sets this flag, and subsequent calls",
celery/,54,: will do nothing.,
celery/,113,Configure root logger,
celery/,118,Configure the multiprocessing logger,
celery/,131,then setup the root task logger.,
celery/,141,"This is a hack for multiprocessing's fork+exec, so that",
celery/,142,logging before Process.run works.,
celery/,175,"this is an int for some reason, better to not question why.",
celery/,203,Windows does not support ANSI color codes.,
celery/,206,Only use color if there's no active log file,
celery/,207,and stderr is an actual terminal.,
celery/,252,noqa,
celery/,1,-*- coding: utf-8 -*-,
celery/,35,## ---,
celery/,36,"This is the heart of the worker, the inner loop so to speak.",
celery/,37,"It used to be split up into nice little classes and methods,",
celery/,38,"but in the end it only resulted in bad performance and horrible tracebacks,",
celery/,39,so instead we now use one closure per task class.,
celery/,41,pylint: disable=redefined-outer-name,
celery/,42,"We cache globals and attribute lookups, so disable this warning.",
celery/,43,pylint: disable=broad-except,
celery/,44,We know what we're doing...,
celery/,54,: Format string used to log task success.,
celery/,59,: Format string used to log task failure.,
celery/,64,: Format string used to log task internal error.,
celery/,69,: Format string used to log task ignored.,
celery/,74,: Format string used to log task rejected.,
celery/,79,: Format string used to log task retry.,
celery/,113,: set by :func:`setup_worker_optimizations`,
celery/,149,request.shadow could be None or an empty string.,
celery/,150,"If so, we should use default.",
celery/,183,"the exception raised is the Retry semi-predicate,",
celery/,184,and it's exc' attribute is the original exception raised (if any).,
celery/,210,make sure we only send pickleable exceptions back to parent.,
celery/,261,"Cleared Tb, but einfo still has a reference to Traceback.",
celery/,262,exc cleans up the Traceback at the last moment that can be revealed.,
celery/,278,Ignore the exception raised if the frame is still executing.,
celery/,312,noqa: C901,
celery/,313,pylint: disable=too-many-statements,
celery/,315,If the task doesn't define a custom __call__ method,
celery/,316,"we optimize it away by simply calling the run method directly,",
celery/,317,saving the extra method call and a line less in the stack trace.,
celery/,358,maybe_ does not clone if already,
celery/,370,R      - is the possibly prepared return value.,
celery/,371,I      - is the Info object.,
celery/,372,T      - runtime,
celery/,373,Rstr   - textual representation of return value,
celery/,374,retval - is the always unmodified return value.,
celery/,375,state  - is the resulting task state.,
celery/,377,This function is very long because we've unrolled all the calls,
celery/,378,"for performance reasons, and because the function is so long",
celery/,379,"we want the main variables (I, and R) to stand out visually from the",
celery/,380,"the rest of the variables, so breaking PEP8 is worth it ;)",
celery/,398,-*- PRE -*-,
celery/,409,-*- TRACE -*-,
celery/,434,callback tasks must be applied before the result is,
celery/,435,"stored, so that result.children is populated.",
celery/,437,groups are called inline and will store trail,
celery/,438,"separately, so need to call them separately",
celery/,439,so that the trail's not added multiple times :(,
celery/,440,(Issue #1936),
celery/,469,execute first task in chain,
celery/,498,-* POST *-,
celery/,568,noqa: E305,
celery/,612,make sure custom Task.__call__ methods that calls super,
celery/,613,won't mess up the request/task stack.,
celery/,616,"all new threads start without a current app, so if an app is not",
celery/,617,"passed on to the thread it will fall back to the ""default app"",",
celery/,618,which then could be the wrong app.  So for the worker,
celery/,619,"we set this to always return our app.  This is a hack,",
celery/,620,and means that only a single app can be used for workers,
celery/,621,running in the same process.,
celery/,625,evaluate all task classes by finalizing the app.,
celery/,628,set fast shortcut to task registry,
celery/,658,Patches BaseTask.__call__ in the worker to handle the edge case,
celery/,659,where people override it and also call super.,
celery/,660,,
celery/,661,- The worker optimizes away BaseTask.__call__ and instead,
celery/,662,calls task.run directly.,
celery/,663,- so with the addition of current_task and the request stack,
celery/,664,BaseTask.__call__ now pushes to those stacks so that,
celery/,665,they work when tasks are called directly.,
celery/,666,,
celery/,667,The worker only optimizes away __call__ in the case,
celery/,668,"where it hasn't been overridden, so the request/task stack",
celery/,669,will blow if a custom task class defines __call__ and also,
celery/,670,calls super().,
celery/,1,-*- coding: utf-8 -*-,
celery/,63,pylint: disable=broad-except,
celery/,116,safe is ignored since 4.0,
celery/,117,as no objects will need serialization now that we,
celery/,118,have argsrepr/kwargsrepr.,
celery/,144,"signature used be unary: query_task(ids=[id1, id2])",
celery/,145,we need this to preserve backward compatibility.,
celery/,470,tests pass easier without requiring pattern/matcher to,
celery/,471,always be sent in,
celery/,1,-*- coding: utf-8 -*-,
celery/,27,TODO: Remove this when we drop Python 2.7 support,
celery/,36,: Format used to generate bug-report information.,
celery/,136,this way we also support django's time zone.,
celery/,141,"the last stash is the default settings, so just skip that",
celery/,179,See PendingConfiguration in celery/app/base.py,
celery/,180,first access will read actual configuration.,
celery/,240,have new setting names,
celery/,243,Majority of the settings are old.,
celery/,246,"have old setting names, or a majority of the names are old.",
celery/,250,Majority of the settings are new,
celery/,253,"no settings, just use new format.",
celery/,257,always use new format if prefix is used.,
celery/,260,only raise error for keys that the user didn't provide two keys,
celery/,261,"for (e.g., both ``result_expires`` and ``CELERY_TASK_RESULT_EXPIRES``).",
celery/,264,"user is mixing old/new, or new/old settings, give renaming",
celery/,265,suggestions.,
celery/,348,pylint: disable=broad-except,
celery/,375,"last part was not an attribute, but a module",
celery/,1,-*- coding: utf-8 -*-,
celery/,23,TODO: Remove this when we drop Python 2.7 support,
celery/,29,pragma: no cover,
celery/,30,for support Python 3.7,
celery/,83,expands 'queue',
celery/,86,expands 'queue' in route.,
celery/,94,Route can be a queue name: convenient for direct exchanges.,
celery/,98,"can use defaults from configured queue, but override specific",
celery/,99,things (like the routing_key): great for topic exchanges.,
celery/,124,pre 4.0 router class,
celery/,132,need to instantiate pre 4.0 router classes,
celery/,1,-*- coding: utf-8 -*-,
celery/,50,-- these methods are irrelevant now and will be removed in 4.0,
celery/,1,-*- coding: utf-8 -*-,
celery/,59,"check if the task group is ready, and if so apply the callback.",
celery/,85,pylint: disable=broad-except,
celery/,96,pylint: disable=broad-except,
celery/,147,any partial args are added to all tasks in the group,
celery/,180,- convert back to group if serialized,
celery/,38,pylint: disable=too-many-function-args,
celery/,39,This is a property pylint...,
celery/,1,-*- coding: utf-8 -*-,
celery/,19,: Proxy always returning the app set as default.,
celery/,56,"Set as shared task so that unfinalized apps,",
celery/,57,and future apps will register a copy of this task.,
celery/,62,Force all finalized apps to take this task as well.,
celery/,68,Return a proxy that always gets the task from the current,
celery/,69,apps task registry.,
celery/,1,-*- coding: utf-8 -*-,
celery/,29,"Historically the dashes in UUIDS are removed from AMQ entity names,",
celery/,30,but there's no known reason to.  Hopefully we'll be able to fix,
celery/,31,this in v4.0.,
celery/,162,Polling and using basic_get,
celery/,168,spool ffwd,
celery/,172,no more messages,
celery/,177,"backends are not expected to keep history,",
celery/,178,so we delete everything except the most recent state.,
celery/,190,"no new state, use previous",
celery/,194,result probably pending.,
celery/,196,XXX compat,
celery/,211,Total time spent may exceed a single call to wait(),
celery/,220,got event on the wanted channel.,
celery/,1,-*- coding: utf-8 -*-,
celery/,99,: Exception raised when there are too many messages for a task id.,
celery/,146,clear state for child processes.,
celery/,151,uses direct to queue routing (anon exchange).,
celery/,156,"RPC backend caches the binding, as one queue is used for all tasks.",
celery/,163,Called every time a task is sent when using this backend.,
celery/,164,We declare the queue we receive replies on in advance of sending,
celery/,165,"the message, but we skip this if running in the prefork pool",
celery/,166,"(task_join_will_block), as we know the queue is already declared.",
celery/,176,"Backends didn't always receive the `request`, so we must still",
celery/,177,support old code that relies on current_task.,
celery/,186,Return value here is used as the `declare=` argument,
celery/,187,for Producer.publish.,
celery/,188,By default we don't have to declare anything when sending a result.,
celery/,192,"This usually cancels the queue after the result is received,",
celery/,193,but we don't have to cancel since we have one queue per process.,
celery/,228,"Callback called when a reply for a task is received,",
celery/,229,but we have no idea what do do with it.,
celery/,230,"Since the result is not pending, we put it in a separate",
celery/,231,buffer: probably it will become pending later.,
celery/,241,Polling and using basic_get,
celery/,248,"backends aren't expected to keep history,",
celery/,249,so we delete everything except the most recent state.,
celery/,261,"no new state, use previous",
celery/,265,result probably pending.,
celery/,267,XXX compat,
celery/,290,try property first so we don't have to deserialize,
celery/,291,the payload.,
celery/,294,"message sent by old Celery version, need to deserialize.",
celery/,345,cached here is the app OID: name of queue we receive results on.,
celery/,1,-*- coding: utf-8 -*-,
celery/,22,pragma: no cover,
celery/,24,noqa,
celery/,51,Total time spent may exceed a single call to wait(),
celery/,60,got event on the wanted channel.,
celery/,140,we tell the result consumer to put consumed results,
celery/,141,into these buckets.,
celery/,298,send to buffer in case we received this result,
celery/,299,before it was added to _pending_results.,
celery/,305,"remove bucket for this result, since it's fulfilled",
celery/,310,send to waiter via bucket,
celery/,1,-*- coding: utf-8 -*-,
celery/,36,noqa,
celery/,39,pragma: no cover,
celery/,46,pylint: disable=unpacking-non-sequence,
celery/,47,"This is most definitely a sequence, but pylint thinks it's not.",
celery/,52,noqa,
celery/,119,rencode the keyprefixes,
celery/,1,-*- coding: utf-8 -*-,
celery/,86,: Time to sleep between polling each individual item,
celery/,87,: in `ResultSet.iterate`. as opposed to the `interval`,
celery/,88,: argument which is for each pass.,
celery/,91,: If true the backend must implement :meth:`get_many`.,
celery/,94,: If true the backend must automatically expire results.,
celery/,95,: The daily backend_cleanup periodic task won't be triggered,
celery/,96,: in this case.,
celery/,99,: Set to true if the backend is persistent by default.,
celery/,123,"precedence: accept, conf.result_accept_content, conf.accept_content",
celery/,125,noqa: E501,
celery/,134,"when using maybe_sanitize_url(), ""/"" is added",
celery/,135,we're stripping it for consistency,
celery/,172,Ensure all signatures have an application,
celery/,176,Celery tasks type created with the @task decorator have,
celery/,177,"the __header__ property, but Celery task created from",
celery/,178,Task class do not have this property.,
celery/,179,That's why we have to check if this property exists,
celery/,180,before checking is it partial function.,
celery/,183,workaround to support tasks with bind=True executed as,
celery/,184,link errors. Otherwise retries can't be used,
celery/,192,Task may not be present in this worker.,
celery/,193,We simply send it forward for another worker to consume.,
celery/,194,"If the task is not registered there, the worker will raise",
celery/,195,NotRegistered.,
celery/,199,Previously errback was called as a task so we still,
celery/,200,need to do so if the errback only takes a single task_id arg.,
celery/,233,need below import for test for some crazy reason,
celery/,234,pylint: disable,
celery/,246,pylint: disable=broad-except,
celery/,265,Ignore the exception raised if the frame is still executing.,
celery/,296,Load module and find exception class in that,
celery/,298,The type can contain qualified name with parent classes,
celery/,310,noqa,
celery/,404,args and kwargs need to be encoded properly before saving,
celery/,434,XXX compat,
celery/,612,avoid hammering the CPU checking status.,
celery/,633,noqa: E305 XXX compat,
celery/,644,pragma: no cover,
celery/,645,remove binding,
celery/,712,client returns dict so mapping preserved.,
celery/,718,client returns list so need to recreate mapping.,
celery/,757,don't busy loop.,
celery/,792,"previously this was always pickled, but later this",
celery/,793,"was extended to support other serializers, so the",
celery/,794,structure is kind of weird.,
celery/,815,pylint: disable=broad-except,
celery/,834,pragma: no cover,
celery/,843,pylint: disable=broad-except,
celery/,857,pylint: disable=broad-except,
celery/,877,need this attribute to reset cache in tests.,
celery/,1,-*- coding: utf-8 -*-,
celery/,4,"pylint: disable=W1202,W0703",
celery/,22,noqa,
celery/,51,protocol is not supported in backend url (http is taken as default),
celery/,54,Use str as arangodb key not bytes,
celery/,17,pragma: no cover,
celery/,19,noqa,
celery/,1,-* coding: utf-8 -*-,
celery/,13,pragma: no cover,
celery/,17,pragma: no cover,
celery/,18,noqa,
celery/,68,noqa,
celery/,80,: List of Cassandra servers with format: ``hostname``.,
celery/,83,autoexpire supported via entry_ttl,
celery/,134,also shuts down _session,
celery/,153,"We're forced to do concatenation below, as formatting would",
celery/,154,blow up on superficial %s that'll be processed by Cassandra,
celery/,167,"Only possible writers ""workers"" are allowed to issue",
celery/,168,CREATE TABLE.  This is to prevent conflicting situations,
celery/,169,where both task-creator and task-executor would issue it,
celery/,170,at the same time.,
celery/,172,"Anyway; if you're doing anything critical, you should",
celery/,173,"have created this table in advance, in which case",
celery/,174,this query will be a no-op (AlreadyExists),
celery/,186,a heavily loaded or gone Cassandra cluster failed to respond.,
celery/,187,leave this class in a consistent state,
celery/,189,also shuts down _session,
celery/,193,we did fail after all - reraise,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,14,Python 2 does not have FileNotFoundError and IsADirectoryError,
celery/,51,We need the path and separator as bytes objects,
celery/,58,Lets verify that we've everything setup right,
celery/,1,-*- coding: utf-8 -*-,
celery/,19,pragma: no cover,
celery/,20,noqa,
celery/,25,pragma: no cover,
celery/,26,noqa,
celery/,27,noqa,
celery/,28,pragma: no cover,
celery/,29,noqa,
celery/,31,noqa,
celery/,72,Set option defaults,
celery/,76,"update conf with mongo uri data, only if uri was given",
celery/,81,build the hosts list to create a mongo connection,
celery/,89,"if no database is provided in the uri, use default",
celery/,94,update conf with specific settings,
celery/,100,don't modify original,
celery/,103,these should take over uri conf,
celery/,136,pragma: no cover,
celery/,147,The first pymongo.Connection() argument (host) can be,
celery/,148,a list of ['host:port'] elements or a mongodb connection,
celery/,149,"URI.  If this is the case, don't use self.port",
celery/,150,but let pymongo get the port(s) from the URI instead.,
celery/,151,This enables the use of replica sets and sharding.,
celery/,152,See pymongo.Connection() for more info.,
celery/,157,don't change self.options,
celery/,171,mongodb handles serialization,
celery/,175,serializer which are in a unsupported format (pickle/binary),
celery/,192,Add the _id for mongodb,
celery/,250,"By using safe=True, this will wait until it receives a response from",
celery/,251,"the server.  Likewise, it will raise an OperationsError if the",
celery/,252,response was unable to be completed.,
celery/,295,"Ensure an index on date_done is there, if not process the index",
celery/,296,in the background.  Once completed cleanup will be much faster,
celery/,305,"Ensure an index on date_done is there, if not process the index",
celery/,306,in the background.  Once completed cleanup will be much faster,
celery/,1,-*- coding: utf-8 -*-,
celery/,15,noqa,
celery/,48,noqa,
celery/,95,"document already exists, update it",
celery/,1,-*- coding: utf-8 -*-,
celery/,18,pragma: no cover,
celery/,19,noqa,
celery/,65,TODO: allow using other protocols than protobuf ?,
celery/,66,": default protocol used to connect to Riak, might be `http` or `pbc`",
celery/,69,: default Riak bucket name (`default`),
celery/,72,: default Riak server hostname (`localhost`),
celery/,75,: default Riak server port (8087),
celery/,109,riak bucket must be ascii letters or numbers only,
celery/,1,-*- coding: utf-8 -*-,
celery/,30,Python 2,
celery/,37,pragma: no cover,
celery/,38,noqa,
celery/,39,noqa,
celery/,113,task state might have changed when the connection was down so we,
celery/,114,retrieve meta for all subscribed tasks before going into pubsub mode,
celery/,196,: :pypi:`redis` client module.,
celery/,199,: Maximum number of connections in the pool.,
celery/,239,absent in redis.connection.UnixDomainSocketConnection,
celery/,243,"""redis_backend_use_ssl"" must be a dict with the keys:",
celery/,244,"'ssl_cert_reqs', 'ssl_ca_certs', 'ssl_certfile', 'ssl_keyfile'",
celery/,245,"(the same as ""broker_use_ssl"")",
celery/,254,If we've received SSL parameters via query string or the,
celery/,255,"redis_backend_use_ssl dict, check ssl_cert_reqs is valid. If set",
celery/,256,via query string ssl_cert_reqs will be a string so convert it here,
celery/,296,use 'path' as path to the socket… in this case,
celery/,297,the database number should be given in 'query',
celery/,302,host+port are invalid options when using this connection type.,
celery/,313,"If connparams or query string contain ssl params, raise error",
celery/,320,"The following parameters, if present in the URL, are encoded. We",
celery/,321,must add the decoded values to connparams.,
celery/,327,db may be string and start with / like in kombu.,
celery/,338,Query parameters override other parameters,
celery/,406,Overrides this to avoid calling GroupResult.save,
celery/,407,pylint: disable=method-hidden,
celery/,408,Note that KeyValueStoreBackend.__init__ sets self.apply_chord,
celery/,409,if the implements_incr attr is set.  Redis backend doesn't set,
celery/,410,this flag.,
celery/,455,pylint: disable=broad-except,
celery/,465,pylint: disable=broad-except,
celery/,528,URL looks like sentinel://0.0.0.0:26347/3;sentinel://0.0.0.0:26348/3.,
celery/,538,Adding db/password in connparams to connect to the correct instance,
celery/,1,-*- coding: utf-8 -*-,
celery/,19,pragma: no cover,
celery/,20,noqa,
celery/,25,Helper class that describes a DynamoDB attribute,
celery/,39,: default DynamoDB table name (`default`),
celery/,42,: Read Provisioned Throughput (`default`),
celery/,45,: Write Provisioned Throughput (`default`),
celery/,48,: AWS region (`default`),
celery/,51,: The endpoint URL that is passed to boto3 (local DynamoDB) (`default`),
celery/,54,: Item time-to-live in seconds (`default`),
celery/,57,DynamoDB supports Time to Live as an auto-expiry mechanism.,
celery/,99,"We are using the downloadable, local version of DynamoDB",
celery/,110,If endpoint_url is explicitly set use it instead,
celery/,214,"In case we created the table, wait until it becomes available.",
celery/,225,"If table exists, do not fail, just return the description.",
celery/,245,Required TTL methods.,
celery/,251,Find missing methods.,
celery/,283,Get the current TTL description.,
celery/,305,"Get the table TTL description, and return early when possible.",
celery/,313,"We want TTL enabled, and it is currently enabled or being",
celery/,314,"enabled, and on the correct attribute.",
celery/,328,"We want TTL disabled, and it is currently disabled or being",
celery/,329,disabled.,
celery/,341,The state shouldn't ever have any value beyond the four handled,
celery/,342,"above, but to ease troubleshooting of potential future changes, emit",
celery/,343,a log showing the unknown state.,
celery/,344,pragma: no cover,
celery/,353,"At this point, we have one of the following situations:",
celery/,354,,
celery/,355,"We want TTL enabled,",
celery/,356,,
celery/,357,- and it's currently disabled: Try to enable.,
celery/,358,,
celery/,359,"- and it's being disabled: Try to enable, but this is almost sure to",
celery/,360,raise ValidationException with message:,
celery/,361,,
celery/,362,Time to live has been modified multiple times within a fixed,
celery/,363,interval,
celery/,364,,
celery/,365,"- and it's currently enabling or being enabled, but on the wrong",
celery/,366,"attribute: Try to enable, but this will raise ValidationException",
celery/,367,with message:,
celery/,368,,
celery/,369,TimeToLive is active on a different AttributeName: current,
celery/,370,AttributeName is ttlx,
celery/,371,,
celery/,372,"We want TTL disabled,",
celery/,373,,
celery/,374,- and it's currently enabled: Try to disable.,
celery/,375,,
celery/,376,"- and it's being enabled: Try to disable, but this is almost sure to",
celery/,377,raise ValidationException with message:,
celery/,378,,
celery/,379,Time to live has been modified multiple times within a fixed,
celery/,380,interval,
celery/,381,,
celery/,1,-* coding: utf-8 -*-,
celery/,18,noqa,
celery/,58,noqa,
celery/,114,"document already exists, update it",
celery/,1,-*- coding: utf-8 -*-,
celery/,15,noqa,
celery/,17,noqa,
celery/,24,noqa,
celery/,47,Use str as couchbase key not bytes,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,22,pragma: no cover,
celery/,66,"ResultSet.iterate should sleep this much between each pool,",
celery/,67,to not bombard the database with queries.,
celery/,74,The `url` argument was added later and is used by,
celery/,75,the app to set backend by url (celery.app.backends.by_url),
celery/,139,Exclude the primary key id and task_id columns,
celery/,140,as we should not set it None,
celery/,144,Iterate through the columns name of the table,
celery/,145,to set the value from meta.,
celery/,146,"If the value is not present in meta, set None",
celery/,1,-*- coding: utf-8 -*-,
celery/,12,TODO: Remove this when we drop Python 2.7 support,
celery/,36,we override `register` to return other for use as a decorator.,
celery/,41,pragma: no cover,
celery/,65,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,15,: Billiard sets this when execv is enabled.,
celery/,16,: We use it to find out the name of the original ``__main__``,
celery/,17,": module, so that we can properly rewrite the name of the",
celery/,18,: task to be that of ``App.main``.,
celery/,32,pragma: no cover,
celery/,42,noqa,
celery/,71,pragma: no cover,
celery/,83,Raise a more specific error if the problem is that one of the,
celery/,84,dot-separated segments of the module name is not a package.,
celery/,92,Break out and re-raise the original ImportError,
celery/,93,instead.,
celery/,134,Fix for manage.py shell_plus (Issue #366),
celery/,139,- If the task module is used as the __main__ script,
celery/,140,- we need to rewrite the module part of the task name,
celery/,141,- to match App.main.,
celery/,143,- see comment about :envvar:`MP_MAIN_FILE` above.,
celery/,153,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,28,tmux requires unrecognized OSC sequences to be wrapped with DCS tmux;,
celery/,29,"<sequence> ST, and for all ESCs in <sequence> to be replaced with ESC ESC.",
celery/,30,It only accepts ESC backslash for ST.,
celery/,44,Adapted from http://delete.me.uk/2005/03/iso8601.html,
celery/,1,-*- coding: utf-8 -*-,
celery/,5,noqa,
celery/,1,-*- coding: utf-8 -*-,
celery/,28,: Node representing literal text.,
celery/,29,:   - .value: is the literal text value,
celery/,30,":   - .truncate: specifies if this text can be truncated, for things like",
celery/,31,":                LIT_DICT_END this will be False, as we always display",
celery/,32,":                the ending brackets, e.g:  [[[1, 2, 3, ...,], ..., ]]",
celery/,33,":   - .direction: If +1 the current level is increment by one,",
celery/,34,":                 if -1 the current level is decremented by one, and",
celery/,35,:                 if 0 the current level is unchanged.,
celery/,38,: Node representing a dictionary key.,
celery/,41,": Node representing quoted text, e.g. a string value.",
celery/,45,: Recursion protection.,
celery/,48,: Types that are repsented as chars.,
celery/,51,: Types that are regarded as safe to call repr on.,
celery/,54,: Set types.,
celery/,71,"type: (Any, int, int, Set) -> str",
celery/,87,"type: (Dict, _literal, _literal) -> Iterator[Any]",
celery/,98,type: (List) -> Iterator[Any],
celery/,107,type: (Set) -> str,
celery/,112,type: (AnyStr) -> str,
celery/,117,"is bytes with unrepresentable characters, attempt",
celery/,118,to convert back to unicode,
celery/,124,"type: (bytes, int, str) -> str",
celery/,126,"we don't want to copy all the data, just take what we need.",
celery/,138,type: (bytes) -> str,
celery/,142,"possibly not unicode, but binary data so format as hex.",
celery/,145,pragma: no cover,
celery/,146,Python 3.4,
celery/,149,Python 3.5+,
celery/,154,"type: (AnyStr, int) -> str",
celery/,155,pragma: no cover,
celery/,162,type: (Any) -> str,
celery/,171,"type: (Any, int, int, Set) -> str",
celery/,176,"move rest back to stack, so that we can include",
celery/,177,dangling parens.,
celery/,192,"maxlen exceeded, process any dangling parens.",
celery/,199,"type: (Sequence, _literal, _literal, Any, Any) -> Tuple[Any, ...]",
celery/,200,noqa,
celery/,211,"type: (deque, Set, int, int, Callable) -> Iterator[Any]",
celery/,238,pragma: no cover,
celery/,260,other type of object,
celery/,274,Recurse into the new list/tuple/dict/etc by tacking,
celery/,275,the rest of our iterable onto the new it: this way,
celery/,276,it works similar to a linked list.,
celery/,1,-*- coding: utf-8 -*-,
celery/,24,noqa,
celery/,36,: List of base classes we probably don't want to reduce to.,
celery/,39,pragma: no cover,
celery/,40,py3k,
celery/,48,noqa,
celery/,78,pylint: disable=broad-except,
celery/,110,pylint: disable=broad-except,
celery/,137,: The module of the original exception.,
celery/,140,: The name of the original exception class.,
celery/,143,: The arguments for the original exception.,
celery/,173,pylint: disable=broad-except,
celery/,187,pylint: disable=broad-except,
celery/,224,"See ""Date Time String Format"" in the ECMA-262 specification.",
celery/,275,"Since PyPy 3 targets Python 3.2, 'raise exc from None' will",
celery/,276,raise a TypeError so we need to look for Python 3.3 or newer,
celery/,277,pragma: no cover,
celery/,279,for flake8,
celery/,1,-*- coding: utf-8 -*-,
celery/,36,Sets up our logging hierarchy.,
celery/,37,,
celery/,38,"Every logger in the celery package inherits from the ""celery""",
celery/,39,"logger, and every task logger inherits from the ""celery.task""",
celery/,40,logger.,
celery/,58,pragma: no cover,
celery/,63,PlaceHolder does not have handlers,
celery/,91,pragma: no cover,
celery/,131,: Loglevel -> Color mapping.,
celery/,156,reset exception info later for other handlers...,
celery/,161,safe_str will repr the color object,
celery/,162,and color will break on non-string objects,
celery/,163,so need to reorder calls based on type.,
celery/,164,Issue #427,
celery/,169,pragma: no cover,
celery/,170,skip colors,
celery/,171,pylint: disable=broad-except,
celery/,200,pylint: disable=redefined-outer-name,
celery/,201,"Note that the logger global is redefined here, be careful changing.",
celery/,207,Make the logger handlers dump internal errors to,
celery/,208,:data:`sys.__stderr__` instead of :data:`sys.stderr` to circumvent,
celery/,209,infinite loops.,
celery/,211,pragma: no cover,
celery/,219,see python issue 5971,
celery/,229,"Logger is logging back to this file, so stop recursing.",
celery/,240,type: (Sequence[str]) -> None,
celery/,250,This object is not buffered so any :meth:`flush`,
celery/,251,requests are ignored.,
celery/,255,"when the object is closed, no write requests are",
celery/,256,forwarded to the logging object anymore.,
celery/,268,pragma: no cover,
celery/,278,pragma: no cover,
celery/,281,pragma: no cover,
celery/,288,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,67,This code is moved in __init__ to execute it as late as possible,
celery/,68,See get_default_timezone().,
celery/,91,pragma: no cover,
celery/,94,The base tzinfo class no longer implements a DST,
celery/,95,offset aware .fromutc() in Python 3 (Issue #2306).,
celery/,97,"I'd rather rely on pytz to do this, than port",
celery/,98,the C code from cpython's fromutc [asksol],
celery/,118,pylint: disable=redefined-outer-name,
celery/,128,pragma: no cover,
celery/,131,"tz=None is a special case since Python 3.3, and will",
celery/,132,convert to the current local timezone (Issue #2306).,
celery/,137,noqa,
celery/,211,DST started/ended,
celery/,217,pragma: no cover,
celery/,244,"Show original day name in exception, instead of abbr.",
celery/,292,works on pytz timezones,
celery/,302,Ensure timezone aware datetime,
celery/,305,Always safe to call astimezone on utc zones,
celery/,308,non-pytz tz,
celery/,342,pylint: disable=redefined-outer-name,
celery/,343,weekday is also a function in outer scope.,
celery/,399,Will be zero if factor equals 0,
celery/,401,Full jitter according to,
celery/,402,https://www.awsarchitectureblog.com/2015/03/backoff.html,
celery/,405,Adjust according to maximum wait time and account for negative values.,
celery/,1,-*- coding: utf-8 -*-,
celery/,18,pragma: no cover,
celery/,19,Windows doesn't have getloadavg,
celery/,20,noqa,
celery/,1,-*- coding: utf-8 -*-,
celery/,21,TODO: Remove this when we drop Python 2.7 support,
celery/,27,pypy: dicts are ordered in recent versions,
celery/,35,noqa,
celery/,37,noqa,
celery/,52,type: (Any) -> Mapping,
celery/,60,"type: (Mapping, Mapping) -> Mapping",
celery/,73,pragma: no cover,
celery/,75,type: () -> Any,
celery/,76,"return value of od.keys does not support __next__,",
celery/,77,but this version will also not create a copy of the list.,
celery/,80,pragma: no cover,
celery/,82,type: () -> Any,
celery/,83,iterkeys is iterable.,
celery/,87,type: () -> Any,
celery/,91,pragma: no cover,
celery/,94,"type: (Any, bool) -> None",
celery/,96,"we don't use this argument, and the only way to",
celery/,97,implement this on PyPy seems to be O(n): creating a,
celery/,98,"copy with the order changed, so we just raise.",
celery/,105,"type: (Any, bool) -> None",
celery/,131,type: (str) -> Any,
celery/,141,"type: (str, Any) -> None",
celery/,160,type: (Any) -> None,
celery/,164,type: (Any) -> Any,
celery/,168,"type: (Any, Any) -> None",
celery/,172,"type: (Any, Any) -> Any",
celery/,179,"type: (Any, Any) -> None",
celery/,184,type: (Any) -> Any,
celery/,191,"type: (Any, Any) -> Any",
celery/,195,type: (Any) -> bool,
celery/,199,type: () -> Iterable,
celery/,204,type: () -> Iterable,
celery/,208,type: () -> Iterable,
celery/,214,type: () -> Iterable,
celery/,219,pragma: no cover,
celery/,226,type: () -> List[Any],
celery/,230,"type: () -> List[Tuple[Any, Any]]",
celery/,234,type: () -> List[Any],
celery/,238,noqa: E305,
celery/,251,"type: (*Mapping, **Any) -> None",
celery/,261,type: (Mapping) -> None,
celery/,267,"type: (Any, *Any) -> Any",
celery/,275,type: (Any) -> Any,
celery/,279,type: (Any) -> Any,
celery/,283,type: (Any) -> Any,
celery/,293,"type: (Any, Any) -> None",
celery/,297,type: (Any) -> None,
celery/,304,type: () -> None,
celery/,308,"type: (Any, Any) -> Any",
celery/,315,type: () -> int,
celery/,322,type: (Any) -> bool,
celery/,327,type: () -> bool,
celery/,329,Py2,
celery/,332,"type: (Any, Any) -> None",
celery/,338,"type: (*Any, **Any) -> Any",
celery/,345,type: () -> str,
celery/,351,"type: (type, Iterable, *Any) -> 'ChainMap'",
celery/,356,type: () -> 'ChainMap',
celery/,358,Py2,
celery/,361,type: (Callable) -> Iterable,
celery/,362,"defaults must be first in the stream, so values in",
celery/,363,changes take precedence.,
celery/,364,pylint: disable=bad-reversed-sequence,
celery/,365,Someone should teach pylint about properties.,
celery/,369,type: () -> Iterable,
celery/,374,type: () -> Iterable,
celery/,379,type: () -> Iterable,
celery/,386,pragma: no cover,
celery/,391,noqa,
celery/,393,type: () -> List[Any],
celery/,397,"type: () -> List[Tuple[Any, Any]]",
celery/,401,type: () -> List[Any],
celery/,421,"type: (Mapping, Mapping, List[str], str) -> None",
celery/,430,type: (str) -> Sequence[str],
celery/,438,type: (str) -> Any,
celery/,448,support subclasses implementing __missing__,
celery/,457,"type: (str, Any) -> Any",
celery/,461,type: (*str) -> Any,
celery/,465,"type: (str, Any) -> Any",
celery/,472,type: () -> None,
celery/,477,type: (str) -> bool,
celery/,482,type: (ConfigurationView) -> None,
celery/,552,"type: (int, float, Mapping, int) -> None",
celery/,560,import items from data,
celery/,570,type: () -> None,
celery/,576,type: () -> None,
celery/,581,type: () -> None,
celery/,587,"type: (Any, float) -> None",
celery/,599,type: (Iterable) -> None,
celery/,608,revokes are sent as a dict,
celery/,611,in case someone uses ._data directly for sending update,
celery/,620,"XXX AVOID THIS, it could keep old data if more parties",
celery/,621,exchange them all over and over again,
celery/,626,type: (Any) -> None,
celery/,627,"mark an existing item as removed.  If KeyError is not found, pass.",
celery/,633,type: (float) -> None,
celery/,645,time based expiring:,
celery/,650,oldest item hasn't expired yet,
celery/,654,type: (Any) -> Any,
celery/,667,type: () -> Dict,
celery/,683,type: (Any) -> bool,
celery/,687,type: (Any) -> bool,
celery/,691,type: () -> str,
celery/,697,type: () -> Iterable,
celery/,701,type: () -> int,
celery/,705,type: (Any) -> bool,
celery/,709,type: () -> Any,
celery/,714,type: () -> bool,
celery/,716,Py2,
celery/,720,type: () -> float,
celery/,725,noqa: E305,
celery/,734,type: () -> None,
celery/,739,type: (int) -> None,
celery/,746,type: () -> None,
celery/,762,"type: (int, Iterable, Any) -> None",
celery/,771,type: (Any) -> None,
celery/,776,type: (Iterable) -> None,
celery/,781,type: (*Any) -> Any,
celery/,790,type: () -> None,
celery/,794,type: () -> str,
celery/,800,type: () -> Iterable,
celery/,808,type: () -> int,
celery/,812,type: () -> bool,
celery/,816,type: () -> Iterable,
celery/,820,type: (Any) -> Any,
celery/,825,type: () -> int,
celery/,829,noqa: E305,
celery/,844,"type: (int, Iterable, int) -> None",
celery/,853,"type: (Any, Any) -> None",
celery/,856,least recently used.,
celery/,860,"type: (Any, Iterable) -> None",
celery/,866,"type: (Any, *Any) -> Any",
celery/,879,mark as LRU,
celery/,888,type: (Any) -> Messagebuffer,
celery/,896,type: () -> Messagebuffer,
celery/,900,type: (*Any) -> Any,
celery/,904,type: () -> None,
celery/,911,"buffer empty, remove it from mapping.",
celery/,914,we removed one item,
celery/,916,"if buffer is empty now, remove it from mapping.",
celery/,920,move to least recently used.,
celery/,925,type: () -> str,
celery/,932,type: () -> int,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,16,------------------------------------------------------------------------,
celery/,17,> XXX Compat,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,42,pragma: no cover,
celery/,71,for 2to3,
celery/,83,pragma: no cover,
celery/,88,pragma: no cover,
celery/,89,"we lost the race at interpreter shutdown,",
celery/,90,so gc collected built-in modules.,
celery/,1,-*- coding: utf-8 -*-,
celery/,18,noqa,
celery/,78,pragma: no cover,
celery/,88,pragma: no cover,
celery/,150,pragma: no cover,
celery/,169,pragma: no cover,
celery/,180,get a map of threads by their ID so we can print their names,
celery/,181,during the traceback dump,
celery/,188,skip old junk (left-overs from a fork),
celery/,1,-*- coding: utf-8 -*-,
celery/,45,: Set to :const:`True` after the object has been evaluated.,
celery/,180,must be subclass of list so that json can encode.,
celery/,183,pylint: disable=super-init-not-called,
celery/,184,"UserList creates a new list and sets .data, so we don't",
celery/,185,want to call init here.,
celery/,258,"we could use inspect.Signature here, but that implementation",
celery/,259,is very slow since it implements the argument checking,
celery/,260,in pure-Python.  Instead we use exec to create a new function,
celery/,261,"with an empty body, meaning it has the same performance as",
celery/,262,as just calling a function.,
celery/,277,pragma: no cover,
celery/,280,pylint: disable=exec-used,
celery/,281,"Tasks are rarely, if ever, created at runtime - exec here is fine.",
celery/,311,noqa,
celery/,346,find the type of the largest sequence,
celery/,348,convert the smallest list to the type of the largest sequence.,
celery/,1,-*- coding: utf-8 -*-,
celery/,15,TODO: Remove this when we drop Python 2.7 support,
celery/,36,type: (str) -> List[str],
celery/,44,"type: (str, int) -> str",
celery/,50,"type: (str, int, str) -> str",
celery/,56,"type: (str, int, str) -> str",
celery/,62,"type: (str, str) -> str",
celery/,68,"type: (str, str, int) -> str",
celery/,77,"type: (str, int, str) -> str",
celery/,87,"type: (str, int) -> str",
celery/,99,"type: (str, int, str) -> str",
celery/,105,"type: (str, int, str) -> str",
celery/,113,"type: (int, str, str) -> str",
celery/,121,"type: (str, int, int, str, **Any) -> str",
celery/,134,"type: (str, str) -> str",
celery/,139,"type: (str, Mapping[str, str], Pattern, str) -> str",
celery/,159,"type: (str, str) -> str",
celery/,168,"This is used by e.g. repr(chain), to remove repeating module names.",
celery/,169,- extract the module part of the task name,
celery/,175,"type: (str, str) -> str",
celery/,191,find the first occurrence of substr in the string.,
celery/,195,leave the first occurrence of substr untouched.,
celery/,197,strip seen substr from the rest of the string.,
celery/,1,-*- coding: utf-8 -*-,
celery/,14,: Exchange for worker direct queues.,
celery/,17,: Format for worker direct queue names.,
celery/,20,: Separator for worker node name and hostname.,
celery/,1,-*- coding: utf-8 -*-,
celery/,17,pragma: no cover,
celery/,19,noqa,
celery/,22,noqa,
celery/,23,pragma: no cover,
celery/,25,noqa,
celery/,27,noqa,
celery/,71,pylint: disable=broad-except,
celery/,77,exiting by normal means won't work,
celery/,84,pragma: no cover,
celery/,85,"we lost the race at interpreter shutdown,",
celery/,86,so gc collected built-in modules.,
celery/,211,pylint: disable=assigning-non-slot,
celery/,212,This attribute is defined now.,
celery/,238,get_current_worker_task uses this to find,
celery/,239,the original task that was executed by the worker.,
celery/,328,pragma: no cover,
celery/,330,pragma: no cover,
celery/,331,- See #706,
celery/,332,since each thread has its own greenlet we can just use those as,
celery/,333,identifiers for the context.  If greenlets aren't available we,
celery/,334,fall back to the  current thread ident.,
celery/,335,noqa,
celery/,1,-*- coding: utf-8 -*-,
celery/,22,noqa,
celery/,29,pragma: no cover,
celery/,33,see Issue #2475,
celery/,55,Bound method,
celery/,58,Not a bound method,
celery/,79,pragma: no cover,
celery/,89,: Holds a dictionary of,
celery/,90,: ``{receiverkey (id): weakref(receiver)}`` mappings.,
celery/,100,For convenience we create empty caches even if they are not used.,
celery/,101,"A note about caching: if use_caching is defined, then for each",
celery/,102,distinct sender we cache the receivers that sender has in,
celery/,103,'sender_receivers_cache'.  The cache is cleaned when .connect() or,
celery/,104,.disconnect() is called and populated on .send().,
celery/,177,if there's no dispatch_uid then we need to set the,
celery/,178,dispatch uid to the original func id so we can look,
celery/,179,it up later with the original func id,
celery/,289,pylint: disable=broad-except,
celery/,298,Compat with Django interface.,
celery/,301,Warning: caller is assumed to hold self.lock,
celery/,320,We could end up here with NO_RECEIVERS even if we do check this,
celery/,321,case in .send() prior to calling _Live_receivers()  due to,
celery/,322,concurrent .send() call.,
celery/,337,Note: we must cache the weakref versions.,
celery/,342,Dereference the weak reference.,
celery/,352,"Mark that the self..receivers first has dead weakrefs. If so,",
celery/,353,"we will clean those up in connect, disconnect and _live_receivers",
celery/,354,while holding self.lock.  Note that doing the cleanup here isn't a,
celery/,355,"good idea, _remove_receiver() will be called as a side effect of",
celery/,356,"garbage collection, and so the call can happen wh ile we are already",
celery/,357,holding self.lock.,
celery/,37,The self-weakref trick is needed to avoid creating a,
celery/,38,reference cycle.,
celery/,1,-*- coding: utf-8 -*-,
celery/,8,type: (*str) -> str,
celery/,14,type: () -> bytes,
celery/,1,-*- coding: utf-8 -*-,
celery/,18,: Warns if configuration file is missing if :envvar:`C_WNOCONF` is set.,
celery/,37,billiard sets this if forked using execv,
celery/,1,-*- coding: utf-8 -*-,
celery/,103,"Prior to this point loggers are not yet set up properly, need to",
celery/,104,"check responses manually and reraised exceptions if any, otherwise",
celery/,105,"they'll be silenced, making it incredibly difficult to debug.",
celery/,137,Path includes attribute so can just jump,
celery/,138,"here (e.g., ``os.path:abspath``).",
celery/,141,Not sure if path is just a module name or if it includes an,
celery/,142,"attribute name (e.g., ``os.path``, vs, ``os.path.abspath``).",
celery/,146,"Not a module name, so try module + attribute.",
celery/,180,## find key/value,
celery/,181,ns.key=value|ns_key=value (case insensitive),
celery/,185,## find name-space.,
celery/,186,.key=value|_key=value expands to default name-space.,
celery/,190,find name-space part of key,
celery/,195,(type)value makes cast to custom type.,
celery/,206,display key name in error message.,
celery/,256,Django 1.7 allows for speciying a class name in INSTALLED_APPS.,
celery/,257,(Issue #2248).,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,29,this module is considered experimental,
celery/,30,we don't care about coverage.,
celery/,37,pragma: no cover,
celery/,73,include spacing,
celery/,152,pylint: disable=broad-except,
celery/,174,pylint: disable=broad-except,
celery/,232,enter,
celery/,371,-- Footer,
celery/,375,Selected Task Info,
celery/,399,Make ellipsis bold,
celery/,407,Workers,
celery/,415,Info,
celery/,428,Help,
celery/,446,exception states,
celery/,448,successful state,
celery/,450,revoked state,
celery/,452,greeting,
celery/,454,started state,
celery/,485,pragma: no cover,
celery/,498,pragma: no cover,
celery/,518,pragma: no cover,
celery/,539,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,40,TODO: Remove this when we drop Python 2.7 support,
celery/,46,pylint: disable=redefined-outer-name,
celery/,47,"We cache globals and attribute lookups, so disable this warning.",
celery/,48,pylint: disable=too-many-function-args,
celery/,49,"For some reason pylint thinks ._event is a method, when it's a property.",
celery/,51,: Set if running PyPy,
celery/,54,: The window (in percentage) is added to the workers heartbeat,
celery/,55,": frequency.  If the time between updates exceeds this window,",
celery/,56,: then the worker is considered to be offline.,
celery/,59,: Max drift between event timestamp and time of event received,
celery/,60,: before we alert that clocks may be unsynchronized.,
celery/,75,: Mapping of task event names to task state.,
celery/,112,noqa: E305,
celery/,117,we use memoize here so the warning is only logged once per hostname,
celery/,127,"some json implementations returns decimal.Decimal objects,",
celery/,128,which aren't compatible with float.,
celery/,173,pragma: no cover,
celery/,221,pragma: no cover,
celery/,276,pragma: no cover,
celery/,279,: How to merge out of order events.,
celery/,280,": Disorder is detected by logical ordering (e.g., :event:`task-received`",
celery/,281,: must've happened before a :event:`task-failed` event).,
celery/,282,:,
celery/,283,: A merge rule consists of a state and a list of fields to keep from,
celery/,284,": that state. ``(RECEIVED, ('name', 'args')``, means the name and args",
celery/,285,": fields are always taken from the RECEIVED state, and any values for",
celery/,286,: these fields received before or after is simply ignored.,
celery/,294,: meth:`info` displays these fields by default.,
celery/,326,using .get is faster than catching KeyError in this case.,
celery/,329,"sets, for example, self.succeeded to the timestamp.",
celery/,332,custom state,
celery/,334,note that precedence here is reversed,
celery/,335,see implementation in celery.states.state.__lt__,
celery/,338,"this state logically happens-before the current state, so merge.",
celery/,347,update current state with info from this event.,
celery/,399,issue github.com/mher/flower/issues/648,
celery/,407,issue github.com/mher/flower/issues/648,
celery/,444,"type: Mapping[TaskName, WeakSet[Task]]",
celery/,450,"type: Mapping[Hostname, WeakSet[Task]]",
celery/,532,noqa: C901,
celery/,533,pylint: disable=too-many-statements,
celery/,534,"This code is highly optimized, but not for reusability.",
celery/,543,"Removing events from task heap is an O(n) operation,",
celery/,544,so easier to just account for the common number of events,
celery/,545,for each task (PENDING->RECEIVED->STARTED->final),
celery/,546,: an O(n) operation,
celery/,552,avoid updating LRU entry at getitem,
celery/,596,"task-sent event is sent by client, not worker",
celery/,616,remove oldest event if exceeding the limit.,
celery/,621,most events will be dated later than the previous.,
celery/,634,add to tasks_by_type index,
celery/,1,-*- coding: utf-8 -*-,
celery/,47,need to flush so that output can be piped.,
celery/,50,pragma: no cover,
celery/,107,pragma: no cover,
celery/,14,: Exchange used to send events on.,
celery/,15,": Note: Use :func:`get_exchange` instead, as the type of",
celery/,16,: exchange will vary depending on the broker connection.,
celery/,61,quick hack for Issue #436,
celery/,54,set of callbacks to be called when :meth:`enabled`.,
celery/,57,set of callbacks to be called when :meth:`disabled`.,
celery/,159,pylint: disable=broad-except,
celery/,215,list.clear,
celery/,231,XXX compat,
celery/,1,-*- coding: utf-8 -*-,
celery/,76,flush all received events.,
celery/,1,-*- coding: utf-8 -*-,
celery/,107,clients never sync so cannot use their clock value,
celery/,129,celery 4.0: List of events,
celery/,1,-*- coding: utf-8 -*-,
celery/,48,pylint: disable=redefined-outer-name,
celery/,49,"We cache globals and attribute lookups, so disable this warning.",
celery/,55,unpack_from supports memoryview in 2.7.6 and 3.3+,
celery/,58,noqa,
celery/,59,<- memoryview,
celery/,61,pragma: no cover,
celery/,63,noqa,
celery/,69,noqa,
celery/,71,noqa,
celery/,72,<-- BytesIO,
celery/,81,: Constant sent by child process when started (ready to accept work),
celery/,84,: A process must've started before this timeout (in secs.) expires.,
celery/,103,gi_frame is None when generator stopped.,
celery/,113,is a weakref,
celery/,178,Workaround for celery/celery#4513,
celery/,179,TODO: Remove the fallback to the first arg of the exception,
celery/,180,once we drop Python 2.7.,
celery/,208,TODO Delete when drop py2 support as FileNotFoundError is py3,
celery/,229,uses the current iterations value for fd,
celery/,234,Track stale FDs for cleanup possibility,
celery/,237,Handle using the correct arguments to the hub method,
celery/,239,Call the hub method,
celery/,245,take note of stale fd,
celery/,246,Remove now defunct fds from the managed list,
celery/,252,then not a list/set ... try dict,
celery/,263,our version sends a WORKER_UP message when the process is ready,
celery/,264,"to accept work, this will tell the parent that the inqueue fd",
celery/,265,is writable.,
celery/,276,add our custom message handler,
celery/,289,header,
celery/,347,process gone,
celery/,364,pylint: disable=method-hidden,
celery/,365,register_with_event_loop overrides this,
celery/,369,"This is always used, since we do not start any threads.",
celery/,376,flush the processes outqueues until they've all terminated.,
celery/,380,make sure tasks with a time limit will time out.,
celery/,382,cannot iterate and remove at the same time,
celery/,400,process already found terminated,
celery/,401,this means its outqueue has already been processed,
celery/,402,by the worker lost handler.,
celery/,446,create queue-pairs for all our processes in advance.,
celery/,451,inqueue fileno -> process mapping,
celery/,453,outqueue fileno -> process mapping,
celery/,455,synqueue fileno -> process mapping,
celery/,458,We keep track of processes that haven't yet,
celery/,459,sent a WORKER_UP message.  If a process fails to send,
celery/,460,this message within _proc_alive_timeout we terminate it,
celery/,461,and hope the next process will recover.,
celery/,468,denormalized set of all inqueues.,
celery/,471,Set of fds being written to (busy),
celery/,474,Set of active co-routines currently writing jobs.,
celery/,477,Set of fds that are busy (executing task),
celery/,481,Holds jobs waiting to be written to child processes.,
celery/,489,"create initial mappings, these will be updated",
celery/,490,"as processes are recycled, or found lost elsewhere.",
celery/,502,Issue #2927,
celery/,506,This method is called whenever the process sentinel is readable.,
celery/,515,we need to duplicate the fd here to carefully,
celery/,516,"control when the fd is removed from the process table,",
celery/,517,as once the original fd is closed we cannot unregister,
celery/,518,"the fd from epoll(7) anymore, causing a 100% CPU poll loop.",
celery/,520,Safely call hub.add_reader for the determined fd,
celery/,539,Add handler for when a process exits (calls maintain_pool),
celery/,541,Handle_result_event is called whenever one of the,
celery/,542,result queues are readable.,
celery/,547,Timers include calling maintain_pool at a regular interval,
celery/,548,to be certain processes are restarted.,
celery/,576,out of scope,
celery/,584,only used by async pool.,
celery/,592,job ready,
celery/,597,remove tref,
celery/,601,only used by async pool.,
celery/,605,job ready,
celery/,609,remove tref,
celery/,631,is a weakref,
celery/,642,If we got the same fd as a previous process then we'll also,
celery/,643,"receive jobs in the old buffer, so we need to reset the",
celery/,644,job._write_to and job._scheduled_for attributes used to recover,
celery/,645,message boundaries when processes exit.,
celery/,654,maintain_pool is called whenever a process exits.,
celery/,659,handle_result_event is called when the processes outqueue is,
celery/,660,readable.,
celery/,671,this remove the file descriptors for a process from,
celery/,672,the indices.  we have to make sure we don't overwrite,
celery/,673,"another processes fds, as the fds may be reused.",
celery/,681,fd hasn't been reused so we can remove it from index.,
celery/,751,puts back at the end of the queue,
celery/,758,"XXX linear lookup, should find a better way,",
celery/,759,but this happens rarely and is here to protect against races.,
celery/,764,"called for every event loop iteration, and if there",
celery/,765,are messages pending this will schedule writing one message,
celery/,766,by registering the 'schedule_writes' function for all currently,
celery/,767,inactive inqueues (not already being written to),
celery/,769,consolidate means the event loop will merge them,
celery/,770,and call the callback once with the list writable fds as,
celery/,771,argument.  Using this means we minimize the risk of having,
celery/,772,the same fd receive every task if the pipe read buffer is not,
celery/,773,full.,
celery/,776,Determine which io descriptors are not busy,
celery/,779,Determine hub_add vs hub_remove strategy conditional,
celery/,781,outbound buffer present and idle workers exist,
celery/,783,default is add when data exists in outbound buffer,
celery/,786,calling hub_add vs hub_remove,
celery/,796,Makes sure the fd is removed from tracking when,
celery/,797,"the connection is closed, this is essential as fds may be reused.",
celery/,812,Schedule write operation to ready file descriptor.,
celery/,813,"The file descriptor is writable, but that does not",
celery/,814,mean the process is currently reading from the socket.,
celery/,815,The socket is buffered so writable simply means that,
celery/,816,the buffer can accept at least 1 byte of data.,
celery/,818,This means we have to cycle between the ready fds.,
celery/,819,"the first version used shuffle, but this version",
celery/,820,using `total_writes % ready_fds` is about 30% faster,
celery/,821,"with many processes, and also leans more towards fairness",
celery/,822,in write stats when used with many processes,
celery/,823,"[XXX On macOS, this may vary depending",
celery/,824,"on event loop implementation (i.e, select/poll vs epoll), so",
celery/,825,have to test further],
celery/,832,already writing to this fd,
celery/,835,worker is already busy with another task,
celery/,843,"no more messages, remove all inactive fds from the hub.",
celery/,844,this is important since the fds are always writable,
celery/,845,"as long as there's 1 byte left in the buffer, and so",
celery/,846,this may create a spinloop where the event loop,
celery/,847,always wakes up.,
celery/,853,job not accepted by another worker,
celery/,855,keep track of what process the write operation,
celery/,856,was scheduled for.,
celery/,859,write was scheduled for this fd but the process,
celery/,860,has since exited and the message must be sent to,
celery/,861,another process.,
celery/,870,"Try to write immediately, in case there's an error.",
celery/,883,Schedule writing job request for when one of the process,
celery/,884,inqueues are writable.,
celery/,888,"index 1,0 is the job ID.",
celery/,903,writes job to the worker process.,
celery/,904,Operation must complete if more than one byte of data,
celery/,905,was written.  If the broker connection is lost,
celery/,906,and no data was written the operation shall be canceled.,
celery/,910,job result keeps track of what process the job is sent to.,
celery/,915,write header,
celery/,919,pylint: disable=broad-except,
celery/,922,suspend until more data,
celery/,931,write body,
celery/,935,pylint: disable=broad-except,
celery/,938,suspend until more data,
celery/,949,"message written, so this fd is now available",
celery/,951,is a weakref,
celery/,954,Only used when synack is enabled.,
celery/,955,Schedule writing ack response for when the fd is writable.,
celery/,966,writes ack back to the worker if synack enabled.,
celery/,967,"this operation *MUST* complete, otherwise",
celery/,968,the worker process will hang waiting for the ack.,
celery/,974,"process died, we can safely discard the ack at this",
celery/,975,point.,
celery/,980,write header,
celery/,984,pylint: disable=broad-except,
celery/,989,write body,
celery/,993,pylint: disable=broad-except,
celery/,996,suspend until more data,
celery/,1001,"message written, so this fd is now available",
celery/,1007,cancel all tasks that haven't been accepted so that NACK is sent.,
celery/,1012,clear the outgoing buffer as the tasks will be redelivered by,
celery/,1013,the broker anyway.,
celery/,1020,...but we must continue writing the payloads we already started,
celery/,1021,to keep message boundaries.,
celery/,1022,The messages may be NACK'ed later if synack is enabled.,
celery/,1024,flush outgoing buffers,
celery/,1037,hasn't started writing the job so can,
celery/,1038,"discard the task, but we must also remove",
celery/,1039,it from the Pool._cache.,
celery/,1045,removes from Pool._cache,
celery/,1057,workers may have exited in the meantime.,
celery/,1059,don't busyloop,
celery/,1071,process exited,
celery/,1105,NOTE: Pipes must be set O_NONBLOCK at creation time (the original,
celery/,1106,"fd), otherwise it won't be possible to change the flags until",
celery/,1107,there's an actual reader/writer on the other side.,
celery/,1140,job was partially written,
celery/,1143,"job was only scheduled to be written to this process,",
celery/,1144,but no data was sent so put it back on the outbound_buffer.,
celery/,1224,this is only used by the original pool that used a shared,
celery/,1225,queue for all processes.,
celery/,1228,"these attributes are unused by this class, but we'll still",
celery/,1229,have to initialize them for compatibility.,
celery/,1271,worker terminated by signal:,
celery/,1272,"we cannot reuse the sockets again, because we don't know if",
celery/,1273,"the process wrote/read anything frmo them, and if so we cannot",
celery/,1274,restore the message boundaries.,
celery/,1276,"job was not acked, so find another worker to send it to.",
celery/,1285,Replace queues to avoid reuse,
celery/,1332,unused,
celery/,1336,Pool._help_stuff_finished is a classmethod so we have to use this,
celery/,1337,trick to modify the arguments passed to it.,
celery/,1342,pylint: disable=arguments-differ,
celery/,1,-*- coding: utf-8 -*-,
celery/,58,: set to true if the pool can be shutdown from within,
celery/,59,: a signal handler.,
celery/,62,: set to true if pool uses greenlets.,
celery/,69,: only used by multiprocessing pool,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,31,"from 3.5, it is calculated from number of CPUs",
celery/,51,TODO use a public api to retrieve the current number of threads,
celery/,52,in the executor when available. (Currently not available).,
celery/,1,-*- coding: utf-8 -*-,
celery/,12,pragma: no cover,
celery/,13,noqa,
celery/,17,pylint: disable=redefined-outer-name,
celery/,18,"We cache globals and attribute lookups, so disable this warning.",
celery/,1,-*- coding: utf-8 -*-,
celery/,27,: List of signals to reset when a child process starts.,
celery/,32,: List of signals to ignore when a child process starts.,
celery/,52,This is for Windows and other platforms not supporting,
celery/,53,fork().  Note that init_worker makes sure it's only,
celery/,54,run once per process.,
celery/,59,logfile path will differ so need to set up logging again.,
celery/,67,pool did execv after fork,
celery/,73,enables fast_trace_task optimization.,
celery/,74,rebuild execution handler for all tasks.,
celery/,119,Create proxy methods,
celery/,125,FIXME add to billiard,
celery/,1,-*- coding: utf-8 -*-,
celery/,5,Import from kombu directly as it's used,
celery/,6,"early in the import stage, where celery.utils loads",
celery/,7,"too much (e.g., for eventlet patching)",
celery/,17,XXX compat alias,
celery/,21,noqa: F401,
celery/,1,-*- coding: utf-8 -*-,
celery/,7,noqa,
celery/,10,noqa,
celery/,12,noqa,
celery/,22,": Warn if we couldn't patch early enough,",
celery/,23,: and thread/socket depending celery modules have already been loaded.,
celery/,25,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,61,use raw message body.,
celery/,67,"remove compression header, as this will be inserted again",
celery/,68,when the message is recompressed.,
celery/,273,start migrating messages.,
celery/,276,pragma: no cover,
celery/,322,declare all queues on the new broker.,
celery/,387,adding the limit means that we don't have to consume any more,
celery/,388,when we've found everything.,
celery/,404,<- name of task,
celery/,14,pylint: disable=redefined-outer-name,
celery/,15,"Well, they're called fixtures....",
celery/,20,add the pytest.mark.celery() marker registration to the pytest.ini [markers] section,
celery/,21,this prevents pytest 4.5 and newer from issueing a warning about an unknown marker,
celery/,22,and shows helpful marker documentation when running pytest --markers.,
celery/,33,"type: (Any, **Any) -> Celery",
celery/,48,type: () -> bool,
celery/,63,type: (Any) -> Celery,
celery/,83,"type: (Any, Celery, Sequence[str], str) -> WorkController",
celery/,96,type: () -> bool,
celery/,103,type: () -> Sequence[str],
celery/,114,"type: () -> Union[str, Any]",
celery/,125,"type: () -> Mapping[str, Any]",
celery/,136,"type: () -> Mapping[str, Any]",
celery/,147,"type: () -> Mapping[str, Any]",
celery/,180,"type: (Any, Celery, Sequence[str], str) -> WorkController",
celery/,1,-*- coding: utf-8 -*-,
celery/,66,: Holds the currently active debugger.,
celery/,177,this raises a BdbQuit exception that we're unable to catch.,
celery/,1,-*- coding: utf-8 -*-,
celery/,39,pragma: no cover,
celery/,41,Py2,
celery/,42,noqa,
celery/,70,Normally checks if *self.object* is really defined in the module,
celery/,71,given by *self.modname*. But since functions decorated with the @task,
celery/,72,"decorator are instances living in the celery.local, we have to check",
celery/,73,the wrapped function instead.,
celery/,89,Celery tasks created with the @task decorator have the property,
celery/,90,"that *obj.__doc__* and *obj.__class__.__doc__* are equal, which",
celery/,91,trips up the logic in sphinx.ext.autodoc that is supposed to,
celery/,92,suppress repetition of class documentation in an instance of the,
celery/,93,class. This overrides that behavior.,
celery/,1,-*- coding: utf-8 -*-,
celery/,131,"TODO: store_result requires all four arguments to be set,",
celery/,132,but only state should be updated here,
celery/,18,"type: (str, str, Sequence, Mapping, Sequence[Signature],",
celery/,19,"Sequence[Signature], Sequence[Signature],",
celery/,20,"str, bool, **Any) -> Any",
celery/,43,"type: (str, str, Sequence, Mapping, Sequence[Signature],",
celery/,44,"Sequence[Signature], Sequence[Signature]) -> Any",
celery/,68,"type: (Celery, Signature, bool, Any) -> Any",
celery/,9,type: () -> str,
celery/,12,: Contains the default configuration values for the test app.,
celery/,33,Workaround to allow unittest.mock to patch this object,
celery/,34,in Python 3.8 and above.,
celery/,51,noqa,
celery/,33,"type: (*Any, **Any) -> None",
celery/,38,type: (celery.worker.consumer.Consumer) -> None,
celery/,45,type: () -> None,
celery/,64,"type: (Celery, int, str, Union[str, int],",
celery/,65,"str, bool, float, **Any) -> # Iterable",
celery/,96,"type: (Celery, int, str, Union[str, int], str, Any, **Any) -> Iterable",
celery/,104,Make sure we can connect to the broker,
celery/,115,not allowed to override TestWorkController.on_consumer_ready,
celery/,142,"type (Celery, int, str, Union[int, str], str, **Any) -> Iterable",
celery/,158,"type: (Celery, Union[str, int], str) -> None",
celery/,34,"type: (float, bool, TextIO, TextIO) -> None",
celery/,42,"type: (str, str) -> None",
celery/,46,type: (Sequence[AsyncResult]) -> Sequence[str],
celery/,53,"type: (Callable, Sequence[Any], str, Tuple, Dict, Callable,",
celery/,54,"int, float, float, float, bool, **Any) -> Any",
celery/,315,Numbers in args always refers to the index in the list of names.,
celery/,316,"(e.g., `start foo bar baz -c:1` where 1 is foo, 2 is bar, and so on).",
celery/,1,-*- coding: utf-8 -*-,
celery/,49,XXX use scheduler,
celery/,118,flake8: noqa,
celery/,126,Run the worker init handler.,
celery/,127,(Usually imports task modules and such.),
celery/,1,-*- coding: utf-8 -*-,
celery/,95,this signal can be used to set up configuration for,
celery/,96,workers by name.,
celery/,121,apply task execution optimizations,
celery/,122,-- This will finalize the app!,
celery/,129,"this signal can be used to, for example, change queues after",
celery/,130,the -Q option has been applied.,
celery/,147,Dump configuration to screen so we have some basic information,
celery/,148,for when users sends bug reports.,
celery/,173,pragma: no cover,
celery/,197,pragma: no cover,
celery/,224,integrate the ASCII art.,
celery/,238,Install signal handler so SIGHUP restarts the worker.,
celery/,240,"only install HUP handler if detached from terminal,",
celery/,241,so closing the terminal window doesn't restart the worker,
celery/,242,into the background.,
celery/,244,macOS can't exec from a process using threads.,
celery/,245,See https://github.com/celery/celery/issues#issue/152,
celery/,292,pragma: no cover,
celery/,297,pragma: no cover,
celery/,307,pragma: no cover,
celery/,312,pragma: no cover,
celery/,338,Jython/PyPy does not have sys._current_frames,
celery/,339,pragma: no cover,
celery/,350,pragma: no cover,
celery/,356,gevent does not pass standard signal handler args,
celery/,1,-*- coding: utf-8 -*-,
celery/,37,pylint: disable=redefined-outer-name,
celery/,38,"We cache globals and attribute lookups, so disable this warning.",
celery/,50,this is also called by celery.app.trace.setup_worker_optimizations,
celery/,57,noqa: E305,
celery/,59,Localize,
celery/,81,pragma: no cover,
celery/,129,"timezone means the message is timezone-aware, and the only timezone",
celery/,130,supported at this point is UTC.,
celery/,167,this is a reference pass to avoid memory usage burst,
celery/,289,XXX compat,
celery/,292,noqa,
celery/,298,XXX compat,
celery/,301,noqa,
celery/,307,used by rpc backend when failures reported by parent process,
celery/,312,used similarly to reply_to,
celery/,343,cannot create weakref to None,
celery/,357,acknowledge task as being processed.,
celery/,363,pylint: disable=unpacking-non-sequence,
celery/,364,"payload is a property, so pylint doesn't think it's a tuple.",
celery/,392,is a weakref,
celery/,431,Convert monotonic time_accepted to absolute time,
celery/,499,(acks_late) acknowledge after result stored.,
celery/,514,supporting the behaviour where a task failed and,
celery/,515,need to be removed from prefetched local queue,
celery/,518,These are special cases where the process would not have had time,
celery/,519,to write the result.,
celery/,523,already sent revoked event,
celery/,525,only mark as failure if task has not been requeued,
celery/,592,used by backend.mark_as_failure when failure is reported,
celery/,593,by parent process,
celery/,594,pylint: disable=unpacking-non-sequence,
celery/,595,"payload is a property, so pylint doesn't think it's a tuple.",
celery/,601,used by backend.mark_as_failure when failure is reported,
celery/,602,by parent process,
celery/,603,pylint: disable=unpacking-non-sequence,
celery/,604,"payload is a property, so pylint doesn't think it's a tuple.",
celery/,610,used by backend.on_chord_part_return when failures reported,
celery/,611,by parent process,
celery/,618,pylint: disable=unpacking-non-sequence,
celery/,619,"payload is a property, so pylint doesn't think it's a tuple.",
celery/,654,cannot create weakref to None,
celery/,655,pylint: disable=attribute-defined-outside-init,
celery/,15,pylint: disable=redefined-outer-name,
celery/,16,"We cache globals and attribute lookups, so disable this warning.",
celery/,24,pylint: disable=broad-except,
celery/,33,negotiated,
celery/,55,"did_start_ok will verify that pool processes were able to start,",
celery/,56,"but this will only work the first time we start, as",
celery/,57,maxtasksperchild will mess up metrics.,
celery/,61,consumer.consume() may have prefetched up to our,
celery/,62,limit - drain an event so we're in a clean state,
celery/,63,prior to starting our event loop.,
celery/,67,FIXME: Use loop.run_forever,
celery/,68,"Tried and works, but no time to test properly before release.",
celery/,76,We only update QoS when there's no more messages to read.,
celery/,77,"This groups together qos calls, and makes sure that remote",
celery/,78,control commands will be prioritized over task messages.,
celery/,89,pylint: disable=broad-except,
celery/,1,-*- coding: utf-8 -*-,
celery/,30,: Worker software/platform information.,
celery/,37,: maximum number of revokes to keep in memory.,
celery/,40,: how many seconds a revoke will be active before,
celery/,41,: being expired when the max limit has been exceeded.,
celery/,44,: Mapping of reserved task_id->Request.,
celery/,47,: set of all reserved :class:`~celery.worker.request.Request`'s.,
celery/,50,: set of currently active :class:`~celery.worker.request.Request`'s.,
celery/,53,": count of tasks accepted by the worker, sorted by type.",
celery/,56,: count of all tasks accepted by the worker,
celery/,59,: the list of currently revoked tasks.  Persistent if ``statedb`` set.,
celery/,116,pragma: no cover,
celery/,142,noqa,
celery/,154,noqa,
celery/,240,purge expired items at boot,
celery/,249,(pre 3.0.18) used to be stored as a dict,
celery/,1,-*- coding: utf-8 -*-,
celery/,45,global dict.,
celery/,46,"-""-",
celery/,79,-- App,
celery/,89,XXX < backwards compatible,
celery/,104,-- Task,
celery/,148,pylint: disable=redefined-outer-name,
celery/,149,XXX Note that this redefines `terminate`:,
celery/,150,Outside of this scope that is a function.,
celery/,151,supports list argument since 3.1,
celery/,200,pylint: disable=redefined-outer-name,
celery/,201,XXX Note that this redefines `terminate`:,
celery/,202,Outside of this scope that is a function.,
celery/,253,-- Events,
celery/,305,-- Worker,
celery/,310,pylint: disable=redefined-outer-name,
celery/,311,XXX Note that this redefines `revoked`:,
celery/,312,Outside of this scope that is a function.,
celery/,413,-- Debugging,
celery/,420,pragma: no cover,
celery/,455,pragma: no cover,
celery/,462,-- Pool,
celery/,523,-- Queues,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,24,pylint: disable=redefined-outer-name,
celery/,25,"We cache globals and attribute lookups, so disable this warning.",
celery/,32,pylint: disable=pointless-statement,
celery/,76,pylint: disable=pointless-statement,
celery/,115,task event related,
celery/,116,(optimized to avoid calling request.send_event),
celery/,1,-*- coding: utf-8 -*-,
celery/,41,does not use dedicated timer thread.,
celery/,45,"Default Timer is set by the pool, as for example, the",
celery/,46,eventlet pool needs a custom timer implementation.,
celery/,91,make clock use dummy lock,
celery/,93,multiprocessing's ApplyResult uses this lock.,
celery/,96,pragma: no cover,
celery/,142,pragma: no cover,
celery/,1,-*- coding: utf-8 -*-,
celery/,44,pragma: no cover,
celery/,45,noqa,
celery/,50,: Default socket timeout at shutdown.,
celery/,78,: contains the exit code if a :exc:`SystemExit` event is handled.,
celery/,113,Set default concurrency,
celery/,120,Options,
celery/,124,"this connection won't establish, only used for params",
celery/,134,Initialize bootsteps,
celery/,189,"Update celery_include to have all known task modules, so that we",
celery/,190,ensure all task modules are imported in case an execv happens.,
celery/,234,Issue 877,
celery/,267,if blueprint does not exist it means that we had an,
celery/,268,error before the bootsteps could be initialized.,
celery/,270,Issue 975,
celery/,362,O maps to -O=fair,
celery/,367,XXX use pool,
celery/,368,XXX use statedb,
celery/,369,XXX use time_limit,
celery/,370,XXX use soft_time_limit,
celery/,371,XXX use scheduler,
celery/,1,-*- coding: utf-8 -*-,
celery/,34,Make event dispatcher start/stop us when enabled/disabled.,
celery/,38,Only send heartbeat_sent signal if it has receivers.,
celery/,42,just increase clock as clients usually don't,
celery/,43,have a valid clock to adjust with.,
celery/,58,delete my own response,
celery/,67,pylint: disable=broad-except,
celery/,30,- RabbitMQ 3.3 completely redefines how basic_qos works..,
celery/,31,"This will detect if the new qos smenatics is in effect,",
celery/,32,and if so make sure the 'apply_global' flag is set on qos updates.,
celery/,35,set initial prefetch count,
celery/,94,pylint: disable=broad-except,
celery/,118,not for us,
celery/,155,pylint: disable=broad-except,
celery/,188,For redis when `fanout_patterns=False` (See Issue #1882),
celery/,198,proto2: hostname in header; proto1: in body,
celery/,27,"We must set self.connection to None here, so",
celery/,28,that the green pidbox thread exits.,
celery/,37,don't send password.,
celery/,1,-*- coding: utf-8 -*-,
celery/,72,: Error message for when an unregistered task is received.,
celery/,88,: Error message for when an invalid task message is received.,
celery/,116,v2 protocol does not deserialize body,
celery/,130,: Optional callback called the first time the worker,
celery/,131,: is ready to receive tasks.,
celery/,134,: The current worker pool instance.,
celery/,137,": A timer used for high-priority internal tasks, such",
celery/,138,: as sending heartbeats.,
celery/,141,first start is the same as a restart,
celery/,190,"this contains a tokenbucket for each task type by name, used for",
celery/,191,"rate limits, or None if rate limits are disabled for that task.",
celery/,207,"there's a gevent bug that causes timeouts to not be reset,",
celery/,208,"so if the connection timeout is exceeded once, it can NEVER",
celery/,209,connect again.,
celery/,233,pylint: disable=broad-except,
celery/,258,prefetch disabled,
celery/,278,"no request, break",
celery/,285,"requeue to head, keep the order.",
celery/,294,"no tokens, break",
celery/,320,"If we're not retrying connections, no need to catch",
celery/,321,connection errors,
celery/,325,Too many open files,
celery/,343,pylint: disable=broad-except,
celery/,385,Clear internal queues to get rid of old messages.,
celery/,386,"They can't be acked anyway, as a delivery tag is specific",
celery/,387,to the current channel.,
celery/,419,Callback called for each retry while the connection,
celery/,420,can't be established.,
celery/,430,"remember that the connection is lazy, it won't establish",
celery/,431,until needed.,
celery/,433,"retry disabled, just call connect directly.",
celery/,455,"Must use in' here, as __missing__ will automatically",
celery/,456,create queues when :setting:`task_create_missing_queues` is enabled.,
celery/,457,(Issue #1079),
celery/,501,proto1,
celery/,545,"payload will only be set for v1 protocol, since v2",
celery/,546,will defer deserializing the message body to the pool.,
celery/,549,protocol v2,
celery/,555,pylint: disable=broad-except,
celery/,558,protocol v1,
celery/,37,flush events sent while connection was down.,
celery/,44,we currently only buffer events when the event loop is enabled,
celery/,45,"XXX This excludes eventlet/gevent, which should actually buffer.",
celery/,59,remember changes from remote control commands:,
celery/,62,close custom connection,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,36,"What we sign is the serialized body, not the body itself.",
celery/,37,this way the receiver doesn't have to decode the contents,
celery/,38,to verify the signature (and thus avoiding potential flaws,
celery/,39,in the decoding step).,
celery/,72,shift 3 bits right to get signature length,
celery/,73,2048bit rsa key has a signature length of 256,
celery/,74,4096bit rsa key has a signature length of 512,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,1,-*- coding: utf-8 -*-,
celery/,11,noqa: need cryptography first,
celery/,43,noqa,
celery/,57,check conf for sane security settings,
celery/,28,TypeError added for celery#962,
celery/,42,noqa,
celery/,60,Need to add project directory to path.,
celery/,61,"The project directory has precedence over system modules,",
celery/,62,so we prepend it to the path.,
celery/,83,call django.setup() before task modules are imported,
celery/,136,"Child process must validate models again if on Windows,",
celery/,137,or if they were started using execv.,
celery/,141,close connections:,
celery/,142,"the parent process may have established these,",
celery/,143,so need to close them.,
celery/,145,calling db.close() on some DB connections will cause,
celery/,146,the inherited DB conn to also get broken in the parent,
celery/,147,process so we need to remove it without triggering any,
celery/,148,network IO that close() might cause.,
celery/,153,use the _ version to avoid DB_REUSE preventing the conn.close() call,
celery/,169,See https://groups.google.com/group/django-users/,
celery/,170,browse_thread/thread/78200863d0c07c6d/,
